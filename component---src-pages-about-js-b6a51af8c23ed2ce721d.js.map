{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./src/components/seo.js"],"names":["Content","MarkerHeader","IndexPage","data","title","href","src","alt","width","height","frameBorder","allow","allowFullScreen","SEO","description","lang","meta","keywords","image","site","useStaticQuery","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps"],"mappings":"oKAOA,IAAMA,EAAO,0HAMPC,EAAY,+NAyFHC,UA9EG,SAAC,GAAa,EAAXC,KACnB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKC,MAAM,UACX,YAACJ,EAAD,KACE,+BACA,4CAEE,uBAFF,8EAMA,YAACC,EAAD,iBACA,oEACA,YAACA,EAAD,eACA,iCAEE,uBAFF,+BAIE,uBAJF,sBAME,uBANF,oBASA,YAACA,EAAD,cACA,kCACA,sDACA,iBAAGI,KAAM,uCACP,mBACEC,IACE,qFAEFC,IAAI,UAGR,qEAEE,uBACA,iBAAGF,KAAM,uCAAT,qBAEF,kDACA,iBAAGA,KAAM,+CACP,mBACEC,IACE,qEAEFC,IAAK,YAGT,mDAEE,uBAFF,iEAIE,uBACA,iBAAGF,KAAM,+CAAT,qBAIF,kCACA,sDACA,sBACED,MAAM,iBACNI,MAAM,MACNC,OAAO,MACPH,IAAI,4CACJI,YAAY,IACZC,MAAM,0EACNC,iBAAe,IAEjB,uBACA,yE,kCC9FR,kDAYA,SAASC,EAAT,GAAmE,IAApDC,EAAmD,EAAnDA,YAAaC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,SAAUb,EAAgB,EAAhBA,MAAOc,EAAS,EAATA,MAC/CC,EAASC,yBAAe,YAAxBD,KAeFE,EAAkBP,GAAeK,EAAKG,aAAaR,YAEzD,OACE,YAAC,SAAD,CACES,eAAgB,CACdR,QAEFX,MAAOA,EACPoB,cAAa,QAAUL,EAAKG,aAAalB,MACzCY,KAAM,CACJ,CACES,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAAStB,GAEX,CACEuB,SAAS,WACTD,QAASR,GAASC,EAAKG,aAAaJ,OAEtC,CACES,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,uBAEV,CACED,KAAK,kBACLC,QAASP,EAAKG,aAAaM,QAE7B,CACEH,KAAK,gBACLC,QAAStB,GAEX,CACEqB,KAAK,sBACLC,QAASL,IAGVQ,OACCZ,EAASa,OAAS,EACd,CACEL,KAAK,WACLC,QAAST,EAASc,KAAT,OAEX,IAELF,OAAOb,KAKhBH,EAAImB,aAAe,CACjBjB,KAAK,KACLC,KAAM,GACNC,SAAU,IAWGJ","file":"component---src-pages-about-js-b6a51af8c23ed2ce721d.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 1.45rem 1.0875rem;\n`\n\nconst MarkerHeader = styled.h3`\n  display: inline;\n  border-radius: 1em 0 1em 0;\n  background-image: linear-gradient(\n    -100deg,\n    rgba(255, 250, 150, 0.15),\n    rgba(255, 250, 150, 0.8) 100%,\n    rgba(255, 250, 150, 0.25)\n  );\n`\n\nconst IndexPage = ({ data }) => {\n  return (\n    <Layout>\n      <SEO title=\"About\" />\n      <Content>\n        <h1>About</h1>\n        <p>\n          ちょっと間違った建築の未来を探してます。\n          <br />\n          Looking for the future of architecture that is slightly out from the\n          norm.\n        </p>\n        <MarkerHeader>Interest</MarkerHeader>\n        <p>Connect between structure, geometry and XR.</p>\n        <MarkerHeader>Skills</MarkerHeader>\n        <p>\n          C#、Python\n          <br />\n          Unity、Rhinoceros、Grasshopper\n          <br />\n          Creating VR content\n          <br />\n          Operating Vtuber\n        </p>\n        <MarkerHeader>Works</MarkerHeader>\n        <h4>Software</h4>\n        <h5>MICE (Grasshopper Component)</h5>\n        <a href={\"https://www.food4rhino.com/app/mice\"}>\n          <img\n            src={\n              \"https://static.food4rhino.com/s3fs-public/users-files/hironrgkr/app/kiyaputiya.png\"\n            }\n            alt=\"MISE\"\n          />\n        </a>\n        <p>\n          Miceは、梁理論にもとづいて梁の応力と変形、建築学会基準による許容応力度計算を行います。\n          <br />\n          <a href={\"https://www.food4rhino.com/app/mice\"}>more information</a>\n        </p>\n        <h5>STEVIA (Made with Unity)</h5>\n        <a href={\"https://github.com/hrntsm/STEVIA-Stb2U/wiki\"}>\n          <img\n            src={\n              \"https://pbs.twimg.com/media/EbcCYv0U4AI3yrY?format=jpg&name=medium\"\n            }\n            alt={\"STEVIA\"}\n          />\n        </a>\n        <p>\n          建築構造BIMデータのST-Bridgeのビューアー。\n          <br />\n          VRにも対応しVRMを読み込むことでアバターを使って建築を見ることができる建築構造系唯一のVRM対応ソフトです。（自分調べ）\n          <br />\n          <a href={\"https://github.com/hrntsm/STEVIA-Stb2U/wiki\"}>\n            more information\n          </a>\n        </p>\n        <h4>Hands-on</h4>\n        <h5>How to use RhinoInside.Unity</h5>\n        <iframe\n          title=\"Hands-on movie\"\n          width=\"560\"\n          height=\"315\"\n          src=\"https://www.youtube.com/embed/9MHYbnm__MU\"\n          frameBorder=\"0\"\n          allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n          allowFullScreen\n        ></iframe>\n        <br />\n        <p>\n          RhinoInsideをUnityで使うための導入についてのハンズオンのアーカイブです。\n        </p>\n      </Content>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { draft: { eq: false } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            rawDate: date\n            path\n          }\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title, image }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            image\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:image`,\n          content: image || site.siteMetadata.image,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary_large_image`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `ja`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}