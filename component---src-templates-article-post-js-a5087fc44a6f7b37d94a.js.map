{"version":3,"sources":["webpack:///./src/templates/article-post.js"],"names":["Content","MarkedHeader","HeaderDate","MarkdownContent","data","post","markdownRemark","url","frontmatter","path","title","description","excerpt","keywords","article_tags","date","fields","readingTime","text","dangerouslySetInnerHTML","__html","html","size","round","site","siteMetadata","via","pageQuery"],"mappings":"qRAcMA,EAAO,2HAMPC,EAAY,gOAWZC,EAAU,gGAMVC,EAAe,oYAuBN,sBAAe,IAAZC,EAAW,EAAXA,KACVC,EAAOD,EAAKE,eACZC,EAAM,oBAAsBF,EAAKG,YAAYC,KAC7CC,EAAQL,EAAKG,YAAYE,MAC/B,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CACEA,MAAOL,EAAKG,YAAYE,MACxBC,YAAaN,EAAKG,YAAYG,aAAeN,EAAKO,QAClDC,SAAUR,EAAKG,YAAYM,eAE7B,YAACd,EAAD,KACE,YAACC,EAAD,KAAeI,EAAKG,YAAYE,OAChC,YAACR,EAAD,KACGG,EAAKG,YAAYO,KADpB,MAC6BV,EAAKW,OAAOC,YAAYC,KADrD,YACoEb,EAAKG,YAAYM,aAAe,IAEpG,YAACX,EAAD,CAAiBgB,wBAAyB,CAAEC,OAAQf,EAAKgB,QACzD,uBACE,YAAC,IAAD,CAAqBd,IAAKA,GACxB,YAAC,IAAD,CAAce,KAAM,GAAIC,OAAK,KAG/B,YAAC,IAAD,CAAmBb,MAAOA,EAAQ,MAAQN,EAAKoB,KAAKC,aAAaf,MAAOH,IAAKA,GAC3E,YAAC,IAAD,CAAYe,KAAM,GAAIC,OAAK,KAG7B,YAAC,IAAD,CAAoBb,MAAOA,EAAQ,MAAQN,EAAKoB,KAAKC,aAAaf,MAAOgB,IAAI,aAAanB,IAAKA,GAC7F,YAAC,IAAD,CAAae,KAAM,GAAIC,OAAK,SAQjC,IAAMI,EAAS","file":"component---src-templates-article-post-js-a5087fc44a6f7b37d94a.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport {\n  FacebookShareButton,\n  FacebookIcon,\n  HatenaShareButton,\n  HatenaIcon,\n  TwitterShareButton,\n  TwitterIcon,\n} from 'react-share';\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 1.45rem 1.0875rem;\n`\n\nconst MarkedHeader = styled.h1`\n  display: inline;\n  border-radius: 1em 0 1em 0;\n  background-image: linear-gradient(\n    -100deg,\n    rgba(209, 245, 255, 0.15),\n    rgba(209, 245, 255, 1.0) 100%,\n    rgba(209, 245, 255, 0.45)\n  );\n`\n\nconst HeaderDate = styled.h3`\n  margin-top: 10px;\n  color: #606060;\n`\n\n// STYLE THE TAGS INSIDE THE MARKDOWN HERE\nconst MarkdownContent = styled.div`\n  a {\n    text-decoration: none;\n    position: relative;\n\n    background-image: linear-gradient(\n      rgba(209, 245, 255, 0.3),\n      rgba(209, 245, 255, 1.0)\n    );\n    background-repeat: no-repeat;\n    background-size: 100% 0.2em;\n    background-position: 0 88%;\n    transition: background-size 0.25s ease-in;\n    &:hover {\n      background-size: 100% 88%;\n    }\n  }\n\n  a > code:hover {\n    text-decoration: underline;\n  }\n`\n\nexport default ({ data }) => {\n  const post = data.markdownRemark\n  const url = \"https://hiron.dev\" + post.frontmatter.path\n  const title = post.frontmatter.title\n  return (\n    <Layout>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n        keywords={post.frontmatter.article_tags}\n      />\n      <Content>\n        <MarkedHeader>{post.frontmatter.title}</MarkedHeader>\n        <HeaderDate>\n          {post.frontmatter.date} - {post.fields.readingTime.text} - Tags: {post.frontmatter.article_tags + \"\"}\n        </HeaderDate>\n        <MarkdownContent dangerouslySetInnerHTML={{ __html: post.html }} />\n        <div>\n          <FacebookShareButton url={url}>\n            <FacebookIcon size={36} round />\n          </FacebookShareButton>\n\n          <HatenaShareButton title={title + \" | \" + data.site.siteMetadata.title} url={url} >\n            <HatenaIcon size={36} round />\n          </HatenaShareButton>\n\n          <TwitterShareButton title={title + \" | \" + data.site.siteMetadata.title} via=\"hiron_rgkr\" url={url} >\n            <TwitterIcon size={36} round />\n          </TwitterShareButton>\n        </div>\n      </Content>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      excerpt(pruneLength: 160)\n      frontmatter {\n        date(formatString: \"DD MMMM, YYYY\")\n        path\n        title\n        article_tags\n      }\n      fields {\n        readingTime {\n          text\n        }\n        slug\n        collection\n      }\n    }\n    site(siteMetadata: {title: {}}) {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}