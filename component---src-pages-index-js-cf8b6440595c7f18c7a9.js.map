{"version":3,"sources":["webpack:///./src/components/landing-bio.js","webpack:///./src/pages/index.js","webpack:///./src/components/seo.js"],"names":["Container","OuterContainer","Description","NameHeader","propTypes","siteTitle","PropTypes","string","subtitle","defaultProps","LandingBio","query","render","data","site","siteMetadata","title","IndexPage","keywords","SEO","description","lang","meta","useStaticQuery","metaDescription","htmlAttributes","titleTemplate","name","content","property","image","author","concat","length","join"],"mappings":"0KAKMA,EAAS,oFAITC,EAAc,wJAQdC,EAAW,+GAMXC,EAAU,mGA4BhBA,EAAWC,UAAY,CACrBC,UAAWC,IAAUC,OACrBC,SAAUF,IAAUC,QAGtBJ,EAAWM,aAAe,CACxBJ,UAAU,GACVG,SAAS,IAGIE,MAjCI,kBACjB,YAAC,cAAD,CACEC,MAAK,aAULC,OAAQ,SAAAC,GAAI,OACV,YAACZ,EAAD,KACE,YAACD,EAAD,KACE,YAACG,EAAD,KAAaU,EAAKC,KAAKC,aAAaC,OACpC,YAACd,EAAD,KAAcW,EAAKC,KAAKC,aAAaP,gB,wBC/BhCS,UAPG,kBAChB,YAAC,IAAD,KACE,YAAC,IAAD,CAAKD,MAAM,OAAOE,SAAU,CAAC,SAAD,yBAC5B,YAAC,EAAD,S,kCCTJ,kDAYA,SAASC,EAAT,GAA4D,IAA7CC,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,KAAMJ,EAAmB,EAAnBA,SAAUF,EAAS,EAATA,MACxCF,EAASS,yBAAe,YAAxBT,KAeFU,EAAkBJ,GAAeN,EAAKC,aAAaK,YAEzD,OACE,YAAC,SAAD,CACEK,eAAgB,CACdJ,QAEFL,MAAOA,EACPU,cAAa,QAAUZ,EAAKC,aAAaC,MACzCM,KAAM,CACJ,CACEK,KAAK,cACLC,QAASJ,GAEX,CACEK,SAAS,WACTD,QAASZ,GAEX,CACEa,SAAS,WACTD,QAASd,EAAKC,aAAae,OAE7B,CACED,SAAS,iBACTD,QAASJ,GAEX,CACEK,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASd,EAAKC,aAAagB,QAE7B,CACEJ,KAAK,gBACLC,QAASZ,GAEX,CACEW,KAAK,sBACLC,QAASJ,IAGVQ,OACCd,EAASe,OAAS,EACd,CACEN,KAAK,WACLC,QAASV,EAASgB,KAAT,OAEX,IAELF,OAAOV,KAKhBH,EAAIV,aAAe,CACjBY,KAAK,KACLC,KAAM,GACNJ,SAAU,IAWGC","file":"component---src-pages-index-js-cf8b6440595c7f18c7a9.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\n\nconst Container = styled.div`\n  text-align: center;\n`\n\nconst OuterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n  height: 78vh;\n`\n\nconst Description = styled.p`\n  padding: 0;\n  margin-bottom: 1rem;\n  font-size: 1.2rem;\n`\n\nconst NameHeader = styled.h1`\n  font-size: 3rem;\n  margin-bottom: 3rem;\n`\n\nconst LandingBio = () => (\n  <StaticQuery\n    query={graphql`\n      query LandingSiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            subtitle\n          }\n        }\n      }\n    `}\n    render={data => (\n      <OuterContainer>\n        <Container>\n          <NameHeader>{data.site.siteMetadata.title}</NameHeader>\n          <Description>{data.site.siteMetadata.subtitle}</Description>\n        </Container>\n      </OuterContainer>\n    )}\n  />\n)\n\nNameHeader.propTypes = {\n  siteTitle: PropTypes.string,\n  subtitle: PropTypes.string,\n}\n\nNameHeader.defaultProps = {\n  siteTitle: ``,\n  subtitle: ``,\n}\n\nexport default LandingBio\n","import React from \"react\"\n\nimport LandingBio from \"../components/landing-bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n    <LandingBio />\n  </Layout>\n)\n\nexport default IndexPage\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            image\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:image`,\n          content: site.siteMetadata.image, \n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `ja`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}