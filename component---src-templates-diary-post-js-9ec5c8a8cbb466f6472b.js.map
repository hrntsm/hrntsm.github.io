{"version":3,"sources":["webpack:///./src/components/seoNoindex.js","webpack:///./src/templates/diary-post.js"],"names":["SEONOINDEX","description","lang","meta","keywords","title","site","siteMetadata","htmlAttributes","name","content","property","concat","length","join","defaultProps","Content","MarkedHeader","HeaderDate","MarkdownContent","post","data","markdownRemark","url","frontmatter","path","excerpt","tags","date","fields","readingTime","text","dangerouslySetInnerHTML","__html","html","size","round","via","pageQuery"],"mappings":"8FAAA,sCAWA,SAASA,EAAT,GAAmE,IAA7CC,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,MAE/BJ,GAAeK,KAAKC,aAAaN,YAEzD,OACE,YAAC,SAAD,CACEO,eAAgB,CACdN,QAEFG,MAAOA,EACPF,KAAM,CACJ,CACEM,KAAK,SACLC,QAAQ,WAEV,CACEC,SAAS,WACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,gBACLC,QAASL,IAGVO,OACCR,EAASS,OAAS,EACd,CACEJ,KAAK,WACLC,QAASN,EAASU,KAAT,OAEX,IAELF,OAAOT,KAKhBH,EAAWe,aAAe,CACxBb,KAAK,KACLC,KAAM,GACNC,SAAU,IAWGJ,O,2NCxDTgB,EAAO,0HAMPC,EAAY,+NAWZC,EAAU,+FAMVC,EAAe,mYAuBN,sBAAe,IACtBC,EADqB,EAAXC,KACEC,eACZC,EAAM,oBAAsBH,EAAKI,YAAYC,KAC7CpB,EAAQe,EAAKI,YAAYnB,MAC/B,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CACEA,MAAOe,EAAKI,YAAYnB,MACxBJ,YAAamB,EAAKI,YAAYvB,aAAemB,EAAKM,QAClDtB,SAAUgB,EAAKI,YAAYG,OAE7B,YAACX,EAAD,KACE,YAACC,EAAD,KAAeG,EAAKI,YAAYnB,OAChC,YAACa,EAAD,KACGE,EAAKI,YAAYI,KADpB,MAC6BR,EAAKS,OAAOC,YAAYC,KADrD,YACoEX,EAAKI,YAAYG,KAAO,IAE5F,YAACR,EAAD,CAAiBa,wBAAyB,CAAEC,OAAQb,EAAKc,QACzD,uBACE,YAAC,IAAD,CAAqBX,IAAKA,GACxB,YAAC,IAAD,CAAcY,KAAM,GAAIC,OAAK,KAG/B,YAAC,IAAD,CAAmB/B,MAAOA,EAAOkB,IAAKA,GACpC,YAAC,IAAD,CAAYY,KAAM,GAAIC,OAAK,KAG7B,YAAC,IAAD,CAAoB/B,MAAOA,EAAOgC,IAAI,aAAad,IAAKA,GACtD,YAAC,IAAD,CAAaY,KAAM,GAAIC,OAAK,SAQjC,IAAME,EAAS","file":"component---src-templates-diary-post-js-9ec5c8a8cbb466f6472b.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\n\nfunction SEONOINDEX({ description, lang, meta, keywords, title }) {\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      meta={[\n        {\n          name: `robots`,\n          content: `noindex`\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEONOINDEX.defaultProps = {\n  lang: `ja`,\n  meta: [],\n  keywords: [],\n}\n\nSEONOINDEX.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEONOINDEX\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport Layout from \"../components/layout\"\nimport SEONOINDEX from \"../components/seoNoindex\"\nimport {\n  FacebookShareButton,\n  FacebookIcon,\n  HatenaShareButton,\n  HatenaIcon,\n  TwitterShareButton,\n  TwitterIcon,\n} from 'react-share';\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 1.45rem 1.0875rem;\n`\n\nconst MarkedHeader = styled.h1`\n  display: inline;\n  border-radius: 1em 0 1em 0;\n  background-image: linear-gradient(\n    -100deg,\n    rgba(209, 245, 255, 0.15),\n    rgba(209, 245, 255, 1.0) 100%,\n    rgba(209, 245, 255, 0.45)\n  );\n`\n\nconst HeaderDate = styled.h3`\n  margin-top: 10px;\n  color: #606060;\n`\n\n// STYLE THE TAGS INSIDE THE MARKDOWN HERE\nconst MarkdownContent = styled.div`\n  a {\n    text-decoration: none;\n    position: relative;\n\n    background-image: linear-gradient(\n      rgba(209, 245, 255, 0.3),\n      rgba(209, 245, 255, 1.0)\n    );\n    background-repeat: no-repeat;\n    background-size: 100% 0.2em;\n    background-position: 0 88%;\n    transition: background-size 0.25s ease-in;\n    &:hover {\n      background-size: 100% 88%;\n    }\n  }\n\n  a > code:hover {\n    text-decoration: underline;\n  }\n`\n\nexport default ({ data }) => {\n  const post = data.markdownRemark\n  const url = \"https://hiron.dev\" + post.frontmatter.path\n  const title = post.frontmatter.title\n  return (\n    <Layout>\n      <SEONOINDEX\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n        keywords={post.frontmatter.tags}\n      />\n      <Content>\n        <MarkedHeader>{post.frontmatter.title}</MarkedHeader>\n        <HeaderDate>\n          {post.frontmatter.date} - {post.fields.readingTime.text} - Tags: {post.frontmatter.tags + \"\"}\n        </HeaderDate>\n        <MarkdownContent dangerouslySetInnerHTML={{ __html: post.html }} />\n        <div>\n          <FacebookShareButton url={url}>\n            <FacebookIcon size={36} round />\n          </FacebookShareButton>\n\n          <HatenaShareButton title={title} url={url} >\n            <HatenaIcon size={36} round />\n          </HatenaShareButton>\n\n          <TwitterShareButton title={title} via=\"hiron_rgkr\" url={url} >\n            <TwitterIcon size={36} round />\n          </TwitterShareButton>\n        </div>\n      </Content>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      excerpt(pruneLength: 160)\n      frontmatter {\n        date(formatString: \"DD MMMM, YYYY\")\n        path\n        title\n        tags\n      }\n      fields {\n        readingTime {\n          text\n        }\n        slug\n        collection\n      }\n    }\n  }\n`\n"],"sourceRoot":""}