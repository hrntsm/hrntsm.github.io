{"version":3,"sources":["webpack:///./src/components/seoNoindex.js","webpack:///./src/templates/diary-post.js"],"names":["SEONOINDEX","lang","meta","keywords","title","image","htmlAttributes","name","content","property","concat","length","join","defaultProps","Content","MarkedHeader","HeaderDate","MarkdownContent","post","data","markdownRemark","url","frontmatter","path","description","excerpt","tags","fields","slug","date","readingTime","text","dangerouslySetInnerHTML","__html","html","size","round","via"],"mappings":"8FAAA,sCAWA,SAASA,EAAT,GAA6D,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MACjD,OACE,YAAC,SAAD,CACEC,eAAgB,CACdL,QAEFG,MAAOA,EACPF,KAAM,CACJ,CACEK,KAAK,SACLC,QAAQ,WAEV,CACEC,SAAS,WACTD,QAASJ,GAEX,CACEK,SAAS,UACTD,QAAQ,WAEV,CACEC,SAAS,WACTD,QAASH,GAEX,CACEE,KAAK,eACLC,QAAQ,uBAEV,CACED,KAAK,gBACLC,QAASJ,IAGVM,OACCP,EAASQ,OAAS,EACd,CACEJ,KAAK,WACLC,QAASL,EAASS,KAAT,OAEX,IAELF,OAAOR,KAKhBF,EAAWa,aAAe,CACxBZ,KAAK,KACLC,KAAM,GACNC,SAAU,IAWGH,O,iLCzDf,IAAMc,EAAO,0HAMPC,EAAY,8NAWZC,EAAU,+FAMVC,EAAe,gYAuBN,sBAAe,IACtBC,EADqB,EAAXC,KACEC,eACZC,EAAM,oBAAsBH,EAAKI,YAAYC,KAC7CnB,EAAQc,EAAKI,YAAYlB,MAC/B,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CACEA,MAAOc,EAAKI,YAAYlB,MACxBoB,YAAaN,EAAKI,YAAYE,aAAeN,EAAKO,QAClDtB,SAAUe,EAAKI,YAAYI,KAC3BrB,MACE,iCAAmCa,EAAKS,OAAOC,KAAO,kBAG1D,YAACd,EAAD,KACE,YAACC,EAAD,KAAeG,EAAKI,YAAYlB,OAChC,YAACY,EAAD,KACGE,EAAKI,YAAYO,KADpB,MAC6BX,EAAKS,OAAOG,YAAYC,KADrD,WACmE,IAChEb,EAAKI,YAAYI,KAAO,IAE3B,YAACT,EAAD,CAAiBe,wBAAyB,CAAEC,OAAQf,EAAKgB,QACzD,uBACE,YAAC,IAAD,CAAqBb,IAAKA,GACxB,YAAC,IAAD,CAAcc,KAAM,GAAIC,OAAK,KAG/B,YAAC,IAAD,CAAmBhC,MAAOA,EAAOiB,IAAKA,GACpC,YAAC,IAAD,CAAYc,KAAM,GAAIC,OAAK,KAG7B,YAAC,IAAD,CAAoBhC,MAAOA,EAAOiC,IAAI,aAAahB,IAAKA,GACtD,YAAC,IAAD,CAAac,KAAM,GAAIC,OAAK","file":"component---src-templates-diary-post-js-3562d8afa2ae57ee76c2.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\n\nfunction SEONOINDEX({ lang, meta, keywords, title, image }) {\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      meta={[\n        {\n          name: `robots`,\n          content: `noindex`,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          property: `og:image`,\n          content: image,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary_large_image`,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEONOINDEX.defaultProps = {\n  lang: `ja`,\n  meta: [],\n  keywords: [],\n}\n\nSEONOINDEX.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEONOINDEX\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport Layout from \"../components/layout\"\nimport SEONOINDEX from \"../components/seoNoindex\"\nimport {\n  FacebookShareButton,\n  FacebookIcon,\n  HatenaShareButton,\n  HatenaIcon,\n  TwitterShareButton,\n  TwitterIcon,\n} from \"react-share\"\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 1.45rem 1.0875rem;\n`\n\nconst MarkedHeader = styled.h1`\n  display: inline;\n  border-radius: 1em 0 1em 0;\n  background-image: linear-gradient(\n    -100deg,\n    rgba(209, 245, 255, 0.15),\n    rgba(209, 245, 255, 1) 100%,\n    rgba(209, 245, 255, 0.45)\n  );\n`\n\nconst HeaderDate = styled.h3`\n  margin-top: 10px;\n  color: #606060;\n`\n\n// STYLE THE TAGS INSIDE THE MARKDOWN HERE\nconst MarkdownContent = styled.div`\n  a {\n    text-decoration: none;\n    position: relative;\n\n    background-image: linear-gradient(\n      rgba(209, 245, 255, 0.3),\n      rgba(209, 245, 255, 1)\n    );\n    background-repeat: no-repeat;\n    background-size: 100% 0.2em;\n    background-position: 0 88%;\n    transition: background-size 0.25s ease-in;\n    &:hover {\n      background-size: 100% 88%;\n    }\n  }\n\n  a > code:hover {\n    text-decoration: underline;\n  }\n`\n\nexport default ({ data }) => {\n  const post = data.markdownRemark\n  const url = \"https://hiron.dev\" + post.frontmatter.path\n  const title = post.frontmatter.title\n  return (\n    <Layout>\n      <SEONOINDEX\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n        keywords={post.frontmatter.tags}\n        image={\n          \"https://hiron.dev/image/forOGP\" + post.fields.slug + \"thumbnail.png\"\n        }\n      />\n      <Content>\n        <MarkedHeader>{post.frontmatter.title}</MarkedHeader>\n        <HeaderDate>\n          {post.frontmatter.date} - {post.fields.readingTime.text} - Tags:{\" \"}\n          {post.frontmatter.tags + \"\"}\n        </HeaderDate>\n        <MarkdownContent dangerouslySetInnerHTML={{ __html: post.html }} />\n        <div>\n          <FacebookShareButton url={url}>\n            <FacebookIcon size={36} round />\n          </FacebookShareButton>\n\n          <HatenaShareButton title={title} url={url}>\n            <HatenaIcon size={36} round />\n          </HatenaShareButton>\n\n          <TwitterShareButton title={title} via=\"hiron_rgkr\" url={url}>\n            <TwitterIcon size={36} round />\n          </TwitterShareButton>\n        </div>\n      </Content>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      excerpt(pruneLength: 160)\n      frontmatter {\n        date(formatString: \"DD MMMM, YYYY\")\n        path\n        title\n        tags\n      }\n      fields {\n        readingTime {\n          text\n        }\n        slug\n        collection\n      }\n    }\n  }\n`\n"],"sourceRoot":""}