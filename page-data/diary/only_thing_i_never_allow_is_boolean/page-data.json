{"componentChunkName":"component---src-templates-diary-post-js","path":"/diary/only_thing_i_never_allow_is_boolean","result":{"data":{"markdownRemark":{"html":"<h1>やったこと</h1>\n<ul>\n<li>\n<p>HoaryFox の壁開口対応</p>\n<ul>\n<li>昨日から色々試したが、結果として対象サーフェスからTrimmedSurf作ってそれに対してDiffとった</li>\n<li>BooleanDiffでエラーなのは、EvaluateSurfaceで変な値が返ってきているものだったのでそれ以外は成功していた</li>\n<li>ただし思ったDiffではなかったので、TrimしたSurfにした</li>\n</ul>\n</li>\n<li>\n<p>HoaryFox ver1.1.0のリリース</p>\n<blockquote class=\"twitter-tweet\"><p lang=\"ja\" dir=\"ltr\">HoaryFoxアップデートしました。ver1.1.0です。<br><br>主なアップデート内容<br>・ST-Bridge ver2.0 に対応！！！！<br>・壁開口に対応<br><br>なおSTB ver1では対応しているが、stb ver2の読み込みに対してまだ非対応な部分があるため、今後アップデートします。<a href=\"https://t.co/ANB2V9I3o4\">https://t.co/ANB2V9I3o4</a><a href=\"https://twitter.com/hashtag/grasshopper3d?src=hash&amp;ref_src=twsrc%5Etfw\">#grasshopper3d</a> <a href=\"https://twitter.com/hashtag/HoaryFox?src=hash&amp;ref_src=twsrc%5Etfw\">#HoaryFox</a> <a href=\"https://t.co/fMTqZhe5a7\">https://t.co/fMTqZhe5a7</a> <a href=\"https://t.co/0OO0q1vHDm\">pic.twitter.com/0OO0q1vHDm</a></p>&mdash; hiron (@hiron_rgkr) <a href=\"https://twitter.com/hiron_rgkr/status/1305057927049261057?ref_src=twsrc%5Etfw\">September 13, 2020</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n</li>\n</ul>\n<h1>技術メモ</h1>\n<ul>\n<li>\n<p>多分だけれど、Surface.Trimは対象サーフェスのTrimmedSurfaceなので絶対にBooleanうまくいく？</p>\n<ul>\n<li>昨日手法はEvaluateしてサーフェス上の点を取得して別のサーフェスを作っていたので、うまく行かなかったのではないか？</li>\n<li><a href=\"https://developer.rhino3d.com/api/RhinoCommon/html/M_Rhino_Geometry_Surface_Trim.htm\">Surface.Trim Method</a></li>\n<li>surface.Trimはuvから作成できるので、今回の開口位置のデータの持ち方にあっていて実装しやすかった。</li>\n<li>BooleanDiffの失敗があり得るので、try-catch で Exception 対応している</li>\n<li>\n<p><a href=\"https://github.com/hrntsm/HoaryFox/blob/master/HoaryFox/Member/CreateBrep.cs\">CreateBrep.cs</a></p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cs line-numbers\"><code class=\"language-cs\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>open<span class=\"token punctuation\">.</span>Id<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">!=</span> <span class=\"token number\">0</span>  <span class=\"token operator\">&amp;&amp;</span> brep <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> surface <span class=\"token operator\">=</span> brep<span class=\"token punctuation\">.</span>Surfaces<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> trimSurf <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>Brep<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> open<span class=\"token punctuation\">.</span>Id<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> intervalX <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Interval</span><span class=\"token punctuation\">(</span>open<span class=\"token punctuation\">.</span>PositionX<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> open<span class=\"token punctuation\">.</span>PositionX<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> open<span class=\"token punctuation\">.</span>LengthX<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> intervalY <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Interval</span><span class=\"token punctuation\">(</span>open<span class=\"token punctuation\">.</span>PositionY<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> open<span class=\"token punctuation\">.</span>PositionY<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> open<span class=\"token punctuation\">.</span>LengthY<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    trimSurf<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>surface<span class=\"token punctuation\">.</span><span class=\"token function\">Trim</span><span class=\"token punctuation\">(</span>intervalX<span class=\"token punctuation\">,</span> intervalY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToBrep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">try</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> diffBrep <span class=\"token operator\">=</span> Brep<span class=\"token punctuation\">.</span><span class=\"token function\">CreateBooleanDifference</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Brep<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">{</span> brep <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> trimSurf<span class=\"token punctuation\">.</span><span class=\"token function\">ToArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tol<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    planeBrep <span class=\"token operator\">=</span> diffBrep<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">NullReferenceException</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    planeBrep <span class=\"token operator\">=</span> brep<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n<h1>その他</h1>\n<ul>\n<li>Boolean絶対に許さん</li>\n</ul>","excerpt":"やったこと HoaryFox の壁開口対応 昨日から色々試したが、結果として対象サーフェスからTrimmedSurf作ってそれに対してDiffとった BooleanDiffでエラーなのは、EvaluateSurfaceで変な値が返ってきているものだったのでそれ以外は成功していた ただし思ったDiff…","frontmatter":{"date":"13 September, 2020","path":"/diary/only_thing_i_never_allow_is_boolean","title":"The only thing I would never allow is Boolean.","tags":["RhinoCommon","Grasshopper"]},"fields":{"readingTime":{"text":"1 min read"},"slug":"/20.09/post-200913/","collection":"diary"}}},"pageContext":{}},"staticQueryHashes":["32046230","3649515864"]}