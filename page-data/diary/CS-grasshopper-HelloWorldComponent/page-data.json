{"componentChunkName":"component---src-templates-blog-post-js","path":"/diary/CS-grasshopper-HelloWorldComponent","result":{"data":{"markdownRemark":{"html":"<p>　grasshopperのコンポーネントのカスタム方法についての記事です。コンポーネントにボタンを設置し、ボタンを押すとウインドウズフォームから出力されるウインドウに定番の「HelloWorld」を出力するコンポーネントを作成します。  </p>\n<p><a href=\"https://4.bp.blogspot.com/-c9x0l3r4drM/WRfabD79LqI/AAAAAAAABXY/Pybpxc6JIasqn00EfV87bYW-JZe78PbdwCLcB/s1600/%25E3%2583%2588%25E3%2583%2583%25E3%2583%2597%25E7%2594%25BB%25E5%2583%258F.PNG\"><img src=\"https://4.bp.blogspot.com/-c9x0l3r4drM/WRfabD79LqI/AAAAAAAABXY/Pybpxc6JIasqn00EfV87bYW-JZe78PbdwCLcB/s320/%25E3%2583%2588%25E3%2583%2583%25E3%2583%2597%25E7%2594%25BB%25E5%2583%258F.PNG\"></a></p>\n<p>　コンポーンネントのカスタムは、カスタム専用のクラスを作成して行います。今回は、Attributes_Customというクラス名としています。<br>\n構成を簡単に説明すると以下のようになります。  </p>\n<ol>\n<li>layoutでコンポーネントの外観を変更しています。rec0でコンポーネントのサイズを大きくし、ボタンを設置するスペースを作ります。（rec0.Height += 44で高さを増している）</li>\n<li>上記画像でButton1と表示される範囲をrec1、Button2と表示される範囲をrec2として作成します。</li>\n<li>ボタンにテキストを表示させるようにRenderの設定を行います。</li>\n<li>ボタンとして反応し、ウインドウを出すためにイベントハンドラの設定を行います。Button1はタイトルにもなっている「HelloWorld」を出力するよう設定しています。Button2はボタンを増やす例として作っています。どちらも右クリックでイベントが発生するようにしています。</li>\n<li>最後にここでの設定をコンポーネントに反映するため以下のgistでいうと14-17行目にあるようにコンポーネントとAttributes_Customと関連つけます。</li>\n</ol>\n<p>では今回作成したものを以下に掲載します。</p>","excerpt":"grasshopperのコンポーネントのカスタム方法についての記事です。コンポーネントにボタンを設置し、ボタンを押すとウインドウズフォームから出力されるウインドウに定番の「HelloWorld…","frontmatter":{"date":"28 May, 2017","path":"/diary/CS-grasshopper-HelloWorldComponent","title":"C#とgrasshopperで Hello World! を表示","tags":["grasshopper","C#"]},"fields":{"readingTime":{"text":"1 min read"}}}},"pageContext":{}},"staticQueryHashes":["3649515864","63159454"]}