{"componentChunkName":"component---src-templates-blog-post-js","path":"/diary/aruduino-firefly","result":{"data":{"markdownRemark":{"html":"<p>　以前の記事で　ゾーベックの超軽量構造：スマートシェル というものを取り上げました。シェル形状の最適化を行いましたが、実際のシェルの状況をどのように取得するかが問題でした。ひずみゲージや加速度計などの機器を使えば状態の取得は可能ですが、あまり身近なものではなく、かつ高価です。<br>\nですが、近年では Arduino などのマイコンの登場で、比較的安くこれらのデバイスを自分で作成することが可能になりつつあります。そこで、ここでは、Arduinoを使用した加速度計を作成し、Grasshopperに取り込むまでの手順をまとめます。<br>\n加速度を取得することにより、ものの固有周期が分かるため、質量の予測ができれば<br>\nT = 2π√(m/k)<br>\nの関係より、対象物の剛性を評価することが可能になり、その値からアクチュエーター等の操作を行えば、現実のフィードバックを受けながら形状最適化ができるようになります。  </p>\n<p>　始めに、Arduinoを使用した加速度計の作成を行います。ですが、それについてはすでにネットに多くの記事があるので、ここでは説明しません。ちなみに、私は「<a href=\"http://deviceplus.jp/hobby/entry017/\">第17回 Arduinoでパーツやセンサを使ってみよう～加速度センサ編(その１)</a>」を参考に作成しました。<br>\n完成したものがこちら、白い板の真ん中にある四角い黒いものが加速度計です。  </p>\n<p><a href=\"http://1.bp.blogspot.com/-35HlAtn9pQY/VerzPQSDeXI/AAAAAAAAA20/NOk3HWMLXG8/s1600/IMG_20150905_224850.JPG\"><img src=\"http://1.bp.blogspot.com/-35HlAtn9pQY/VerzPQSDeXI/AAAAAAAAA20/NOk3HWMLXG8/s400/IMG_20150905_224850.JPG\"></a></p>\n<p>　作成したものは基本的には、リンクを表示したサイトのものと同様ですが、加速度計とArduinoを繋ぐ位置だけ変えており、<br>\nX　→　A0　　　Y　→　A1　　　Z　→　A2<br>\nとしてあります。  </p>\n<p>　次に、GrasshopperとArduinoを接続します。接続にはGrasshopperのアドインであるFireflyを使用します。これは、Arduinoだけでなく、MicrosoftのKinectや、任天堂のWiiリモコンなどのデータも取得できるもので、HPのトップには「Design Interactively.」とあり、インタラクティブなデザインを実現することを目標としているようです。<br>\nでは実際に使用してみます。FireflyがArduinoとデータのやり取りをするために、Arduinoに書き込むプログラムが、Fireflyをインストールすると付いて来ます。ですが、私が使用した時は、エラーがでてうまく連携できなかったため、INPUT部分だけを取得するように、下記図中のコードを作成して使用しています。  </p>\n<p><a href=\"http://4.bp.blogspot.com/-GaLR-xSAGXU/Ver3Zf4Yz2I/AAAAAAAAA3A/V33BLYXLDRs/s1600/Uno%25E3%2581%258B%25E3%2582%2589%25E5%258A%25A0%25E9%2580%259F%25E5%25BA%25A6%25E5%258F%2596%25E5%25BE%2597.JPG\"><img src=\"http://4.bp.blogspot.com/-GaLR-xSAGXU/Ver3Zf4Yz2I/AAAAAAAAA3A/V33BLYXLDRs/s640/Uno%25E3%2581%258B%25E3%2582%2589%25E5%258A%25A0%25E9%2580%259F%25E5%25BA%25A6%25E5%258F%2596%25E5%25BE%2597.JPG\"></a></p>\n<p>　Grasshopper側では、始めにPorts Available コンポーネントでArduinoが接続されているポートを確認します。これはArduino IDEでも確認可能です。<br>\n次にOpen Port コンポーネントを使用してポートをオープンにします。これは、ArduinoとGrasshopperをつなげるような役割をします。Open のインプットに対して True かFalse で設定するのですが、Trueの場合はGrasshopperとArduinoがつながっているため、Arduino IDE側からはアクセスできくなるので注意しましょう。接続が完了するとMsgの部分から Hooray ! （やったね！のような感嘆の意味）が表示されるようになります。<br>\n接続が確認されたら Uno Read コンポーネントを使用して、Arduinoから出力されてくるデータの取得を行います。ここでもTrue or False での入力によって、データの取得をアクティブにするかどうか設定できます。Trueにするとデータの取得をしますが、一度しか取得しないので、Timer コンポーネントでデータの更新の指定をしましょう。ここでは、Arduinoへの設定でデータ取得を50msとしているので、Grasshopper側もそれに合わせて50msでの更新としました。そうすることによって、リアルタイムで加速度計のデータを取得することができます。<br>\n次に、加速度計のキャリブレーションを行います。加速度計は、取得した加速度を0～1024の電圧の範囲で出力します。使用しているKXR94-2050は±2ｇが測定レンジなので、512が加速度0に相当します。ですが、取り付け状況や、加速度計の個体差から、必ずしもそうはなりません。これは加速度計の取扱説明書にも書いてありました。実際の値をみて頂くとわかりますが、今回もXの例をとれば、水平にしていても値は509となっています。  </p>\n<p><a href=\"http://2.bp.blogspot.com/-pHzYHg3TabQ/VesA2qgkd5I/AAAAAAAAA3c/zf8b_vOGy1w/s1600/%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%25AA%25E3%2583%2596%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25A8%25E7%25B5%2590%25E6%259E%259C.JPG\"><img src=\"http://2.bp.blogspot.com/-pHzYHg3TabQ/VesA2qgkd5I/AAAAAAAAA3c/zf8b_vOGy1w/s640/%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%25AA%25E3%2583%2596%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25A8%25E7%25B5%2590%25E6%259E%259C.JPG\"></a></p>\n<p>そこで、初期値を引いて0になるようにし、その修正した値が512のとき1g、すなわち9.80655m/s2 を示すように 26.10474 をかけてあげることで、m/s2単位での加速度を取得することができます。<br>\nですが、このままでは、ノイズが多いので、何かの窓関数を使用して、値を調節することが必要になります。  </p>\n<p>　これで加速度が取得できたので、次の記事では、固有周期の取得から剛性の算出を目指します。</p>","excerpt":"以前の記事で　ゾーベックの超軽量構造：スマートシェル というものを取り上げました。シェル形状の最適化を行いましたが、実際のシェルの状況をどのように取得するかが問題でした。ひずみゲージや加速度計などの機器を使えば状態の取得は可能ですが、あまり身近なものではなく、かつ高価です。 　ですが、近年では Arduino…","frontmatter":{"date":"05 September, 2015","path":"/diary/aruduino-firefly","title":"Arduino と Firefly で加速度を取得","tags":["grasshopper","Firefly","Arduino"]},"fields":{"readingTime":{"text":"1 min read"}}}},"pageContext":{}},"staticQueryHashes":["3649515864","63159454"]}