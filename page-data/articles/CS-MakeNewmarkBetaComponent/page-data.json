{"componentChunkName":"component---src-templates-article-post-js","path":"/articles/CS-MakeNewmarkBetaComponent","result":{"data":{"markdownRemark":{"html":"<p>これまでのコンポーネント作成を踏まえて、単質点系の時刻歴応答解析を行うコンポーネントを作成します。</p>\n<p>Grasshopper のパラスタしやすい特性を活かせば、時間のかかる時刻歴のパラスタが簡単になるのでは？と思って作成しましたが、単質点、弾性なので、疑似速度応答スペクトル作ったほうが早いですね。非線形、多質点化はまたそのうち実装します。</p>\n<p><a href=\"https://4.bp.blogspot.com/-sTXUGEn1tUw/WWxOYWbsNOI/AAAAAAAABYw/WsuYr1f8rf0vXJeygvpZsvDDVX7I71L5QCLcBGAs/s1600/%25E3%2583%2588%25E3%2583%2583%25E3%2583%2597%25E7%2594%25BB%25E5%2583%258F.PNG\"><img src=\"https://4.bp.blogspot.com/-sTXUGEn1tUw/WWxOYWbsNOI/AAAAAAAABYw/WsuYr1f8rf0vXJeygvpZsvDDVX7I71L5QCLcBGAs/s640/%25E3%2583%2588%25E3%2583%2583%25E3%2583%2597%25E7%2594%25BB%25E5%2583%258F.PNG\"></a></p>\n<p>振動解析の手法については、たくさんの本が出ていることと、このブログの目的ではないので、下記の gist からコードの中身を見てください。作成したコンポーネントはデータ置き場に置いておきますが、解の確からしさはコードも公開しているので、使用する際は、確認してください。簡単な諸元は</p>\n<ul>\n<li>Newmark β 法で解析（β の値は直接指定）</li>\n<li>減衰は初期剛性比例減衰</li>\n<li>1 自由度の単質点系</li>\n<li>線形解析</li>\n<li>地震波は直接指定（カンマ区切りで連続したデータ）</li>\n<li>入力は、質量、剛性、減衰係数、時間刻み、β の値、入力波の長さ、入力波</li>\n<li>出力は、加速度、速度、変位</li>\n</ul>\n<p>といった形です。  </p>\n<p>以下では作成したコンポーネントを使用して加速度応答スペクトルを作成してみます。地震波は El Centro NS を使用しています。対象の減衰定数は 0%、2%、10%としています。  </p>\n<p>計算は作成したコンポーネントの質量の入力を固有周期から計算するようにし、おおむねそれらしい解が得られる 0.15 秒から 5 秒まで固有周期を変えていき、応答の最大値を取得することで作成します。解の最大値は、出てくる解を SortList コンポーネントを使い並べかえることで取得しています。解析は平均加速度法(β ＝ 1/4)で行っています。</p>\n<p><a href=\"https://1.bp.blogspot.com/-wQi50YCK9fY/WWxRDSJMXbI/AAAAAAAABY0/QQH06WR_eg8FOCq3MF-dZDZzgOs9ZVUyQCLcBGAs/s1600/%25E3%2582%25B9%25E3%2583%259A%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AB%25E4%25BD%259C%25E6%2588%2590.PNG\"><img src=\"https://1.bp.blogspot.com/-wQi50YCK9fY/WWxRDSJMXbI/AAAAAAAABY0/QQH06WR_eg8FOCq3MF-dZDZzgOs9ZVUyQCLcBGAs/s640/%25E3%2582%25B9%25E3%2583%259A%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AB%25E4%25BD%259C%25E6%2588%2590.PNG\"></a></p>\n<p><a href=\"https://4.bp.blogspot.com/-wW-VJS_WaSU/WWxRPcPWMyI/AAAAAAAABY4/e9uoTWcjOY0aPTE-__aWqxaCeA5HhRHBQCLcBGAs/s1600/%25E7%25B5%2590%25E6%259E%259C.PNG\"><img src=\"https://4.bp.blogspot.com/-wW-VJS_WaSU/WWxRPcPWMyI/AAAAAAAABY4/e9uoTWcjOY0aPTE-__aWqxaCeA5HhRHBQCLcBGAs/s400/%25E7%25B5%2590%25E6%259E%259C.PNG\"></a></p>\n<p>応答スペクトルを見るとあっていそうな形になっています。  </p>\n<p>応答の加速度波形を動画で以下に張り付けておきます。グラフの縦軸を固定していないので若干わかりづらいですが、固有周期が変わるため応答の位相がちょっとづつ動いていくことがわかります。意味があるかはわかりませんが、こういう図はなかなか見ないので新しい感はあります。</p>\n<p>作成したコンポーネントのコードを以下にあげます。\nこちらは <a href=\"https://www.food4rhino.com/app/mice\">MICE</a> として公開していますので、動作するものが必要な方はそちらをどうぞ </p>\n<p>コンポーネント本体の定義</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cs line-numbers\"><code class=\"language-cs\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Grasshopper<span class=\"token punctuation\">.</span>Kernel</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">GH_NewmarkBeta</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">NewmarkBetaComponet</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">GH_Component</span></span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token function\">NewmarkBetaComponet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">:</span> <span class=\"token keyword\">base</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1dof Response Analysis\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1dof RA\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Response Analysis of the Single dof\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rgkr\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Response Analysis\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">RegisterInputParams</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GH_InputParamManager</span> pManager<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            pManager<span class=\"token punctuation\">.</span><span class=\"token function\">AddNumberParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Mass\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"M\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Lumped Mass\"</span><span class=\"token punctuation\">,</span> GH_ParamAccess<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            pManager<span class=\"token punctuation\">.</span><span class=\"token function\">AddNumberParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Stiffness\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"K\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Spring Stiffness\"</span><span class=\"token punctuation\">,</span> GH_ParamAccess<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            pManager<span class=\"token punctuation\">.</span><span class=\"token function\">AddNumberParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Damping ratio\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"h\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Damping ratio\"</span><span class=\"token punctuation\">,</span> GH_ParamAccess<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            pManager<span class=\"token punctuation\">.</span><span class=\"token function\">AddNumberParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Time Increment\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"dt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Time Increment\"</span><span class=\"token punctuation\">,</span> GH_ParamAccess<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            pManager<span class=\"token punctuation\">.</span><span class=\"token function\">AddNumberParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Beta\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Beta\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Parameters of Newmark β \"</span><span class=\"token punctuation\">,</span> GH_ParamAccess<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            pManager<span class=\"token punctuation\">.</span><span class=\"token function\">AddIntegerParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"N\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"N\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Parameters of Newmark β \"</span><span class=\"token punctuation\">,</span> GH_ParamAccess<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            pManager<span class=\"token punctuation\">.</span><span class=\"token function\">AddTextParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"WAVE\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"WAVE\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Parameters of Newmark β \"</span><span class=\"token punctuation\">,</span> GH_ParamAccess<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">RegisterOutputParams</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GH_OutputParamManager</span> pManager<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            pManager<span class=\"token punctuation\">.</span><span class=\"token function\">AddNumberParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Acceleration\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Acc\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"output Acceleration\"</span><span class=\"token punctuation\">,</span> GH_ParamAccess<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            pManager<span class=\"token punctuation\">.</span><span class=\"token function\">AddNumberParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Velocity\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Vel\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"output Velocity\"</span><span class=\"token punctuation\">,</span> GH_ParamAccess<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            pManager<span class=\"token punctuation\">.</span><span class=\"token function\">AddNumberParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Displacement\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Disp\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"output Displacement\"</span><span class=\"token punctuation\">,</span> GH_ParamAccess<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">SolveInstance</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IGH_DataAccess</span> DA<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// パラメータの定義 ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">double</span></span> M <span class=\"token operator\">=</span> <span class=\"token keyword\">double</span><span class=\"token punctuation\">.</span>NaN<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 質量</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">double</span></span> K <span class=\"token operator\">=</span> <span class=\"token keyword\">double</span><span class=\"token punctuation\">.</span>NaN<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 剛性</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">double</span></span> h <span class=\"token operator\">=</span> <span class=\"token keyword\">double</span><span class=\"token punctuation\">.</span>NaN<span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 減衰定数</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">double</span></span> dt <span class=\"token operator\">=</span> <span class=\"token keyword\">double</span><span class=\"token punctuation\">.</span>NaN<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 時間刻み</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">double</span></span> beta <span class=\"token operator\">=</span> <span class=\"token keyword\">double</span><span class=\"token punctuation\">.</span>NaN<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 解析パラメータ</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> N <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>                <span class=\"token comment\">// 波形データ数</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> wave_str <span class=\"token operator\">=</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">;</span>\n            \n            <span class=\"token comment\">// grasshopper からデータ取得　＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>DA<span class=\"token punctuation\">.</span><span class=\"token function\">GetData</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> M<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>DA<span class=\"token punctuation\">.</span><span class=\"token function\">GetData</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>DA<span class=\"token punctuation\">.</span><span class=\"token function\">GetData</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>DA<span class=\"token punctuation\">.</span><span class=\"token function\">GetData</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> dt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>DA<span class=\"token punctuation\">.</span><span class=\"token function\">GetData</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> beta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>DA<span class=\"token punctuation\">.</span><span class=\"token function\">GetData</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>DA<span class=\"token punctuation\">.</span><span class=\"token function\">GetData</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> wave_str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n            <span class=\"token comment\">//　地震波データの処理　＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝</span>\n            <span class=\"token comment\">//　カンマ区切りで波形を入力するので、カンマで区切り配列に入れている</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> delimiter <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token string character\">','</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//分割文字</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">double</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> wave <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">double</span></span><span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> wk<span class=\"token punctuation\">;</span>\n            wk <span class=\"token operator\">=</span> wave_str<span class=\"token punctuation\">.</span><span class=\"token function\">Split</span><span class=\"token punctuation\">(</span>delimiter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//カンマで分割</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> N<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                wave<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">double</span><span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>wk<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token comment\">//　応答解析　＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">double</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> out_a <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">double</span></span><span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">double</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> out_v <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">double</span></span><span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">double</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> out_d <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">double</span></span><span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token class-name\">Solver<span class=\"token punctuation\">.</span>NewmarkBeta_solver</span> slv <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Solver<span class=\"token punctuation\">.</span>NewmarkBeta_solver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            slv<span class=\"token punctuation\">.</span><span class=\"token function\">NewmarkBeta</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">,</span> K<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> dt<span class=\"token punctuation\">,</span> beta<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">,</span> wave<span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> out_a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> out_v<span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> out_d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// grassshopper へのデータ出力　＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝</span>\n            DA<span class=\"token punctuation\">.</span><span class=\"token function\">SetDataList</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> out_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            DA<span class=\"token punctuation\">.</span><span class=\"token function\">SetDataList</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> out_v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            DA<span class=\"token punctuation\">.</span><span class=\"token function\">SetDataList</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> out_d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\">Guid</span> ComponentGuid\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">get</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Guid</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"419c3a3a-cc48-4717-9cef-5f5647a5ecfc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>解析部分</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cs line-numbers\"><code class=\"language-cs\"><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">Solver</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/// &lt;summary></span>\n    <span class=\"token comment\">/// Newmarkβ法で応答解析を行うクラス</span>\n    <span class=\"token comment\">/// &lt;/summary></span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">NewmarkBeta_solver</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">NewmarkBeta</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">double</span></span> m<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">double</span></span> k<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">double</span></span> h<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">double</span></span> dt<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">double</span></span> beta<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> N<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">double</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> Ag<span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> <span class=\"token class-name\"><span class=\"token keyword\">double</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> out_a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> <span class=\"token class-name\"><span class=\"token keyword\">double</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> out_v<span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> <span class=\"token class-name\"><span class=\"token keyword\">double</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> out_d<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// 解析関連パラメータ-----------------------------</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">double</span></span> a <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> v <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> an <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> vn <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">double</span></span> a0 <span class=\"token operator\">=</span> Ag<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>                   <span class=\"token comment\">// 初期加速度</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">double</span></span> v0 <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>                     <span class=\"token comment\">// 初期速度</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">double</span></span> d0 <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>                     <span class=\"token comment\">// 初期変位</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">double</span></span> c <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> h <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">Sqrt</span><span class=\"token punctuation\">(</span>m <span class=\"token operator\">*</span> k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 粘性減衰定数</span>\n\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> n <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> n <span class=\"token operator\">&lt;</span> N<span class=\"token punctuation\">;</span> n<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// t = 0 の時</span>\n                <span class=\"token punctuation\">{</span>\n                    a <span class=\"token operator\">=</span> a0<span class=\"token punctuation\">;</span>\n                    v <span class=\"token operator\">=</span> v0<span class=\"token punctuation\">;</span>\n                    x <span class=\"token operator\">=</span> d0<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">else</span>       <span class=\"token comment\">//  t ≠ 0 の時</span>\n                <span class=\"token punctuation\">{</span>\n                    a <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>v <span class=\"token operator\">+</span> a <span class=\"token operator\">*</span> dt <span class=\"token operator\">/</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> k <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> v <span class=\"token operator\">*</span> dt <span class=\"token operator\">+</span> a <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>dt <span class=\"token operator\">*</span> dt<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span> <span class=\"token operator\">-</span> beta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> m <span class=\"token operator\">*</span> Ag<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n                        <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>m <span class=\"token operator\">+</span> c <span class=\"token operator\">*</span> dt <span class=\"token operator\">/</span> <span class=\"token number\">2.0</span> <span class=\"token operator\">+</span> k <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>dt <span class=\"token operator\">*</span> dt<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> beta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                     v <span class=\"token operator\">=</span> v <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">+</span> an<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> dt<span class=\"token punctuation\">;</span>\n                     x <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> vn <span class=\"token operator\">*</span> dt <span class=\"token operator\">+</span> beta <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">+</span> <span class=\"token number\">2.0</span> <span class=\"token operator\">*</span> an<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>dt <span class=\"token operator\">*</span> dt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token comment\">// 結果を出力マトリクスに入れる。</span>\n                out_a<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span>\n                out_v<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n                out_d<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n\n                an <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span>\n                vn <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","excerpt":"これまでのコンポーネント作成を踏まえて、単質点系の時刻歴応答解析を行うコンポーネントを作成します。 Grasshopper…","frontmatter":{"date":"17 July, 2017","path":"/articles/CS-MakeNewmarkBetaComponent","title":"簡単な時刻歴応答解析コンポーネントの開発","article_tags":["Grasshopper","CSharp","構造とデジタル"]},"fields":{"readingTime":{"text":"3 min read"},"slug":"/kozo-to-digital/CS-MakeNewmarkBetaComponent/","collection":"article"}},"site":{"siteMetadata":{"title":"構造とデジタル_最新版_Final(1)"}}},"pageContext":{}},"staticQueryHashes":["32046230","3649515864"]}