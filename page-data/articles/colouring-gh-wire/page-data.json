{"componentChunkName":"component---src-templates-article-post-js","path":"/articles/colouring-gh-wire","result":{"data":{"markdownRemark":{"html":"<h2>はじめに</h2>\n<p>せっかく<a href=\"https://discourse.mcneel.com/t/editing-wire-colours-like-galapagos/84496/4\">RhinocerosForum</a>で Rutten に教えてもらったので、その知見を残しておきます。以下のように Grasshopper コンポーネント間をつなぐワイヤーで、NumberSlider につながっているもののみに色を付ける方法を説明します。発端は Galápagos みたいなコンポーネントを作ろうとしたとき、どのようにしたらいいのかわからなくて質問したのが始まりです。</p>\n<p>Rutten さん、いつも本当にありがとうございます。</p>\n<img src=\"https://aws1.discourse-cdn.com/mcneel/uploads/default/original/3X/9/3/93e4aadd0a1386cd253c0e096d9dcc356ec0f25c.png\" width=\"720\">\n<h3>まずは中身を知りたい人むけ</h3>\n<p>Rutten が回答で gh ファイルを上げてくれているので、すぐに試したい人は<a href=\"https://discourse.mcneel.com/t/editing-wire-colours-like-galapagos/84496/4\">そちら</a>をどうぞ。</p>\n<h2>説明編</h2>\n<p>回答もらって半年くらいまとめずに放っておいて、年末にせっかくまとめを作っているので、のんびり勉強もかねて使用しているものの API の個所のリンクもつけてます。</p>\n<h3>RunScript の部分</h3>\n<p>NumberSlider を対象にしたいので入力の x の値をデフォルトの object から double に変えています。そのあと EnsurePaintHandler()を呼んでここでワイヤーに赤丸を付ける処理をしています。</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cs line-numbers\"><code class=\"language-cs\"><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">RunScript</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">double</span></span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">object</span></span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> <span class=\"token class-name\"><span class=\"token keyword\">object</span></span> A<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token function\">EnsurePaintHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  A <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>EnsurePaintHandler の部分</h3>\n<p>初めに描画するためのハンドラーがあるかの有無を判断するため、bool で paintHandlerAssigned をつくって false にしておきます。</p>\n<p>EnsurePaintHandler の中で、paintHandlerAssigned が true でなかったら、今アクティブな Grasshopper のキャンバスを取得する<a href=\"https://developer.rhino3d.com/api/grasshopper/html/P_Grasshopper_Instances_ActiveCanvas.htm\">Grasshopper.Instances.ActiveCanvas</a>を使って、ワイヤーを描く前に起動する<a href=\"https://developer.rhino3d.com/api/grasshopper/html/E_Grasshopper_GUI_Canvas_GH_Canvas_CanvasPrePaintWires.htm\">CanvasPrePaintWires</a>に PrePaintWires（これは以下で説明）を追加しています。</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cs line-numbers\"><code class=\"language-cs\"><span class=\"token comment\">// &lt;Custom additional code></span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> _paintHandlerAssigned <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">EnsurePaintHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_paintHandlerAssigned<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n  Grasshopper<span class=\"token punctuation\">.</span>Instances<span class=\"token punctuation\">.</span>ActiveCanvas<span class=\"token punctuation\">.</span>CanvasPrePaintWires <span class=\"token operator\">+=</span> PrePaintWires<span class=\"token punctuation\">;</span>\n  _paintHandlerAssigned <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>PrePaintWires の部分（その 1）</h2>\n<p>最初に、自分が今アクティブにしているキャンバスに対してワイヤーを描画したいので、スクリプトがあるキャンバス(GrasshopperDocument)と入力されてきているキャンバス(canvas.Document)が同じかどうか<a href=\"https://docs.microsoft.com/ja-jp/dotnet/api/system.object.referenceequals?view=netframework-4.8\">ReferenceEquals</a>で確認して、true でなければ return にしています。</p>\n<p>GrasshopperDocument は、C#スクリプトコンポーネン作った時デフォルトで用意されているを #region Members の中に作られていてます。その部分の抜粋も以下につけておきます。<a href=\"https://developer.rhino3d.com/api/grasshopper/html/T_Grasshopper_Kernel_GH_Document.htm\">GH_Document についてはこちら</a></p>\n<p>そのあと input の x (順番でいうと 0 番目)に入力されているコンポーネント数を取得するため、<a href=\"https://developer.rhino3d.com/api/grasshopper/html/P_Grasshopper_Kernel_IGH_Component_Params.htm\">Component.Params</a>の<a href=\"https://developer.rhino3d.com/api/grasshopper/html/P_Grasshopper_Kernel_GH_ComponentParamServer_Input.htm\">Input</a>の 0 番を first としています。もし 0 個(<a href=\"https://developer.rhino3d.com/api/grasshopper/html/P_Grasshopper_Kernel_GH_Param_1_SourceCount.htm\">first.SourceCount</a>==0)なら return してます。</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cs line-numbers\"><code class=\"language-cs\"><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">PrePaintWires</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Grasshopper<span class=\"token punctuation\">.</span>GUI<span class=\"token punctuation\">.</span>Canvas<span class=\"token punctuation\">.</span>GH_Canvas</span> canvas<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// We should only draw wires if the document loaded in the canvas is the document we're in.</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">ReferenceEquals</span><span class=\"token punctuation\">(</span>GrasshopperDocument<span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>Document<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Find all sliders that plug into the first component input.</span>\n  <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> first <span class=\"token operator\">=</span> Component<span class=\"token punctuation\">.</span>Params<span class=\"token punctuation\">.</span>Input<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">.</span>SourceCount <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// その2、その3の部分</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cs line-numbers\"><code class=\"language-cs\"><span class=\"token preprocessor property\">#<span class=\"token directive keyword\">region</span> Members</span>\n  <span class=\"token comment\">/// &lt;summary>Gets the Grasshopper document that owns this script.&lt;/summary></span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\">GH_Document</span> GrasshopperDocument<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/// &lt;summary>Gets the Grasshopper script component that owns this script.&lt;/summary></span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\">IGH_Component</span> Component<span class=\"token punctuation\">;</span>\n<span class=\"token preprocessor property\">#<span class=\"token directive keyword\">endregion</span></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>PrePaintWires の部分（その 2）</h3>\n<p>ここでは NumberSlider か判定して、NumberSlider ならば処理を加えるということをやっています。</p>\n<p>まずは上記で取得した入力の数だけ流れるように(var source in <a href=\"https://developer.rhino3d.com/api/grasshopper/html/P_Grasshopper_Kernel_GH_Param_1_Sources.htm\">first.Sources</a>)で foreach しています。</p>\n<p>その後、source を Grasshopper.Kernel.Special.GH_NumberSlider としてキャストし直して slider を作っています。<a href=\"https://qiita.com/toshi0607/items/ec7f8f04f2453423d56f\">as でキャスト</a>すると、キャストできないときに null で返すので、キャストの下の個所で NumberSlider でない(つまり null)なら continue になってます。</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cs line-numbers\"><code class=\"language-cs\"><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">PrePaintWires</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Grasshopper<span class=\"token punctuation\">.</span>GUI<span class=\"token punctuation\">.</span>Canvas<span class=\"token punctuation\">.</span>GH_Canvas</span> canvas<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// その1部分</span>\n\n  <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> source <span class=\"token keyword\">in</span> first<span class=\"token punctuation\">.</span>Sources<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> slider <span class=\"token operator\">=</span> source <span class=\"token keyword\">as</span> <span class=\"token class-name\">Grasshopper<span class=\"token punctuation\">.</span>Kernel<span class=\"token punctuation\">.</span>Special<span class=\"token punctuation\">.</span>GH_NumberSlider</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>slider <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// その3部分</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>PrePaintWires の部分（その 3）</h3>\n<p>ここからが、実際にワイヤーに色を付けていく部分です。</p>\n<p>ワイヤーの描画は名前空間 System.Drawing の<a href=\"https://docs.microsoft.com/ja-jp/dotnet/api/system.drawing.graphics.drawpath?view=netframework-4.8#System_Drawing_Graphics_DrawPath_System_Drawing_Pen_System_Drawing_Drawing2D_GraphicsPath_\">Graphics.DrawPath</a>のメソッドを使ってやっているので、描画のために必要なパス(path)とペンの設定(edge)を作成していきます。</p>\n<p>まずは path からです。最初に描画するためにワイヤーの始点と終点の座標を<a href=\"https://developer.rhino3d.com/api/grasshopper/html/P_Grasshopper_Kernel_GH_DocumentObject_Attributes.htm\">GH_Param.Attributes</a>の<a href=\"https://developer.rhino3d.com/api/grasshopper/html/P_Grasshopper_Kernel_IGH_Attributes_InputGrip.htm\">InputGrip</a>と<a href=\"https://developer.rhino3d.com/api/grasshopper/html/P_Grasshopper_Kernel_IGH_Attributes_OutputGrip.htm\">OutputGrip</a>を使用して取得し、それぞれ input と output としています。次に<a href=\"https://developer.rhino3d.com/api/grasshopper/html/M_Grasshopper_GUI_Canvas_GH_Painter_ConnectionPath.htm\">GH_Painter.ConnectionPath</a>のメソッドを使って、描画のためのラインのパスを作成しています。</p>\n<p>次に edge です。ここでは一番最初に図示したように点々になるようなペンの設定を作成します。<a href=\"https://docs.microsoft.com/ja-jp/dotnet/api/system.drawing.pen.-ctor?view=netframework-4.8#System_Drawing_Pen__ctor_System_Drawing_Color_System_Single_\">System.Drawing.Pen</a>の部分でペンの色と太さ、edge の<a href=\"https://docs.microsoft.com/ja-jp/dotnet/api/system.drawing.pen.dashcap?view=netframework-4.8#System_Drawing_Pen_DashCap\">DashCap</a>のプロパティを使用して丸くして、<a href=\"https://docs.microsoft.com/ja-jp/dotnet/api/system.drawing.pen.dashpattern?view=netframework-4.8#System_Drawing_Pen_DashPattern\">DashPattern</a>のプロパティでダッシュと空白の長さを指定しています。</p>\n<p>これで必要なものが設定できたので、canvas.Graphics.DrawPath(edge, path)の部分で赤丸の点線を描画しています。</p>\n<p>そして最後に Dispose して終わりです。（<a href=\"https://qiita.com/tera1707/items/d066672f834e296a9e40\">Dispose なんもわからん</a>）</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cs line-numbers\"><code class=\"language-cs\"><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">PrePaintWires</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Grasshopper<span class=\"token punctuation\">.</span>GUI<span class=\"token punctuation\">.</span>Canvas<span class=\"token punctuation\">.</span>GH_Canvas</span> canvas<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// その1部分</span>\n\n  <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> source <span class=\"token keyword\">in</span> first<span class=\"token punctuation\">.</span>Sources<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// その2部分</span>\n\n    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> input <span class=\"token operator\">=</span> first<span class=\"token punctuation\">.</span>Attributes<span class=\"token punctuation\">.</span>InputGrip<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> output <span class=\"token operator\">=</span> slider<span class=\"token punctuation\">.</span>Attributes<span class=\"token punctuation\">.</span>OutputGrip<span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> path <span class=\"token operator\">=</span> Grasshopper<span class=\"token punctuation\">.</span>GUI<span class=\"token punctuation\">.</span>Canvas<span class=\"token punctuation\">.</span>GH_Painter<span class=\"token punctuation\">.</span><span class=\"token function\">ConnectionPath</span><span class=\"token punctuation\">(</span>\n      input<span class=\"token punctuation\">,</span>\n      output<span class=\"token punctuation\">,</span>\n      Grasshopper<span class=\"token punctuation\">.</span>GUI<span class=\"token punctuation\">.</span>Canvas<span class=\"token punctuation\">.</span>GH_WireDirection<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">,</span>\n      Grasshopper<span class=\"token punctuation\">.</span>GUI<span class=\"token punctuation\">.</span>Canvas<span class=\"token punctuation\">.</span>GH_WireDirection<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> edge <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">System<span class=\"token punctuation\">.</span>Drawing<span class=\"token punctuation\">.</span>Pen</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>Drawing<span class=\"token punctuation\">.</span>Color<span class=\"token punctuation\">.</span>DeepPink<span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    edge<span class=\"token punctuation\">.</span>DashCap <span class=\"token operator\">=</span> System<span class=\"token punctuation\">.</span>Drawing<span class=\"token punctuation\">.</span>Drawing2D<span class=\"token punctuation\">.</span>DashCap<span class=\"token punctuation\">.</span>Round<span class=\"token punctuation\">;</span>\n    edge<span class=\"token punctuation\">.</span>DashPattern <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">float</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token punctuation\">{</span> <span class=\"token number\">0.1f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2f</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    canvas<span class=\"token punctuation\">.</span>Graphics<span class=\"token punctuation\">.</span><span class=\"token function\">DrawPath</span><span class=\"token punctuation\">(</span>edge<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    edge<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    path<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>最終的なコードの全体</h2>\n<p>で結局全体でどうなっているのよ？というのは以下参照</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cs line-numbers\"><code class=\"language-cs\"><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">RunScript</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">double</span></span> x<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">object</span></span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> <span class=\"token class-name\"><span class=\"token keyword\">object</span></span> A<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token function\">EnsurePaintHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  A <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// &lt;Custom additional code></span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> _paintHandlerAssigned <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">EnsurePaintHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_paintHandlerAssigned<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n  Grasshopper<span class=\"token punctuation\">.</span>Instances<span class=\"token punctuation\">.</span>ActiveCanvas<span class=\"token punctuation\">.</span>CanvasPrePaintWires <span class=\"token operator\">+=</span> PrePaintWires<span class=\"token punctuation\">;</span>\n  _paintHandlerAssigned <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">PrePaintWires</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Grasshopper<span class=\"token punctuation\">.</span>GUI<span class=\"token punctuation\">.</span>Canvas<span class=\"token punctuation\">.</span>GH_Canvas</span> canvas<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// We should only draw wires if the document loaded in the canvas is the document we're in.</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">ReferenceEquals</span><span class=\"token punctuation\">(</span>GrasshopperDocument<span class=\"token punctuation\">,</span> canvas<span class=\"token punctuation\">.</span>Document<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Find all sliders that plug into the first component input.</span>\n  <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> first <span class=\"token operator\">=</span> Component<span class=\"token punctuation\">.</span>Params<span class=\"token punctuation\">.</span>Input<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">.</span>SourceCount <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> source <span class=\"token keyword\">in</span> first<span class=\"token punctuation\">.</span>Sources<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> slider <span class=\"token operator\">=</span> source <span class=\"token keyword\">as</span> <span class=\"token class-name\">Grasshopper<span class=\"token punctuation\">.</span>Kernel<span class=\"token punctuation\">.</span>Special<span class=\"token punctuation\">.</span>GH_NumberSlider</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>slider <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> input <span class=\"token operator\">=</span> first<span class=\"token punctuation\">.</span>Attributes<span class=\"token punctuation\">.</span>InputGrip<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> output <span class=\"token operator\">=</span> slider<span class=\"token punctuation\">.</span>Attributes<span class=\"token punctuation\">.</span>OutputGrip<span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> path <span class=\"token operator\">=</span> Grasshopper<span class=\"token punctuation\">.</span>GUI<span class=\"token punctuation\">.</span>Canvas<span class=\"token punctuation\">.</span>GH_Painter<span class=\"token punctuation\">.</span>ConnectionPath\n    <span class=\"token punctuation\">(</span>\n      input<span class=\"token punctuation\">,</span>\n      output<span class=\"token punctuation\">,</span>\n      Grasshopper<span class=\"token punctuation\">.</span>GUI<span class=\"token punctuation\">.</span>Canvas<span class=\"token punctuation\">.</span>GH_WireDirection<span class=\"token punctuation\">.</span>left<span class=\"token punctuation\">,</span>\n      Grasshopper<span class=\"token punctuation\">.</span>GUI<span class=\"token punctuation\">.</span>Canvas<span class=\"token punctuation\">.</span>GH_WireDirection<span class=\"token punctuation\">.</span>right\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> edge <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">System<span class=\"token punctuation\">.</span>Drawing<span class=\"token punctuation\">.</span>Pen</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>Drawing<span class=\"token punctuation\">.</span>Color<span class=\"token punctuation\">.</span>DeepPink<span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    edge<span class=\"token punctuation\">.</span>DashCap <span class=\"token operator\">=</span> System<span class=\"token punctuation\">.</span>Drawing<span class=\"token punctuation\">.</span>Drawing2D<span class=\"token punctuation\">.</span>DashCap<span class=\"token punctuation\">.</span>Round<span class=\"token punctuation\">;</span>\n    edge<span class=\"token punctuation\">.</span>DashPattern <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">float</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token punctuation\">{</span> <span class=\"token number\">0.1f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2f</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    canvas<span class=\"token punctuation\">.</span>Graphics<span class=\"token punctuation\">.</span><span class=\"token function\">DrawPath</span><span class=\"token punctuation\">(</span>edge<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    edge<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    path<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// &lt;/Custom additional code></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","excerpt":"はじめに せっかくRhinocerosForumで Rutten に教えてもらったので、その知見を残しておきます。以下のように Grasshopper コンポーネント間をつなぐワイヤーで、NumberSlider につながっているもののみに色を付ける方法を説明します。発端は Galápagos…","frontmatter":{"date":"08 December, 2019","path":"/articles/colouring-gh-wire","title":"GrasshopperでNumberSliderにつながるワイヤーにのみ色を付ける方法","article_tags":["CSharp","Grasshopper","Qiita"]},"fields":{"readingTime":{"text":"3 min read"},"slug":"/qiita/colouring-gh-wire/","collection":"article"}},"site":{"siteMetadata":{"title":"構造とデジタル_最新版_Final(1)"}}},"pageContext":{}},"staticQueryHashes":["32046230","3649515864"]}