{"componentChunkName":"component---src-templates-article-post-js","path":"/articles/Rhino.Inside.Unity-withFEM2","result":{"data":{"markdownRemark":{"html":"<p>以前の記事で、RhinoInside を使った人の動きの FEM 解析をやりましたが、速度が全然出ずちょっと実用に耐えられなかったので原因を調べて改善した内容についてです。</p>\n<p>改善した結果以下のようになったので、かなりいい感じではないでしょうか。</p>\n<p><a href=\"https://1.bp.blogspot.com/-7kEpT72OnH0/XncdEshJ9YI/AAAAAAAAB1Q/O5Wf_iQu2CwaFF4BzoJJRzdRh_fiAyLpQCLcBGAsYHQ/s1600/stevia_bar.gif\"><img src=\"https://1.bp.blogspot.com/-7kEpT72OnH0/XncdEshJ9YI/AAAAAAAAB1Q/O5Wf_iQu2CwaFF4BzoJJRzdRh_fiAyLpQCLcBGAsYHQ/s400/stevia_bar.gif\"></a></p>\n<h2>原因の調査</h2>\n<p>改善するためにはまず原因を調べないといけないので、Unity の Profiler を使って何に一番時間がかかっているかを調べました。\nここは以下の Unite の講演のアーカイブを参考にさせていただきました。</p>\n<p><a href=\"https://www.youtube.com/watch?v=rvnsU8oCMcI\"><img src=\"https://img.youtube.com/vi/rvnsU8oCMcI/0.jpg\"></a></p>\n<p>結果として原因は Unity 内で Rhino へ送るために行っている NameCallback が重いことでした。\n原因が分かったのでそこを改善していきます。</p>\n<p>コードの箇所で言うと <a href=\"./Rhino.Inside.Unity-withFEM\">前回の記事</a> で書いた以下の 1 行目です。</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cs line-numbers\"><code class=\"language-cs\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">SendBonePosition</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> boneName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Vector3</span> pos<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_firstRun<span class=\"token punctuation\">)</span> \n  <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">ShowGrasshopperWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    UnityEditor<span class=\"token punctuation\">.</span>EditorApplication<span class=\"token punctuation\">.</span>isPaused <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>boneName <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> pt <span class=\"token operator\">=</span> pos<span class=\"token punctuation\">.</span><span class=\"token function\">ToRhino</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> args <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rhino<span class=\"token punctuation\">.</span>Runtime<span class=\"token punctuation\">.</span>NamedParametersEventArgs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n      args<span class=\"token punctuation\">.</span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"point\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rhino<span class=\"token punctuation\">.</span>Geometry<span class=\"token punctuation\">.</span>Point</span><span class=\"token punctuation\">(</span>pt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      Rhino<span class=\"token punctuation\">.</span>Runtime<span class=\"token punctuation\">.</span>HostUtils<span class=\"token punctuation\">.</span><span class=\"token function\">ExecuteNamedCallback</span><span class=\"token punctuation\">(</span>boneName<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>問題の改善方法</h2>\n<p>問題は、Unity で Update が実行されるたびに、ボーンの各点をポイントとして送っていることでした。</p>\n<p>具体的には NameCallback が 18 回（送っているポイントの数）も行われることで、Profiler によればここに 600ms 程度かかっていました。\n2fps 程度しか出ていないことになります。</p>\n<p>なので NameCallback の回数を減らすことを考えます。\n13 行目での args.Set でポイントを 1 つだけセットしていては回数を減らせないので、別の方法を考えます。</p>\n<p>RhinoCommonAPI を調べてみると</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cs line-numbers\"><code class=\"language-cs\">IEnumerable<span class=\"token operator\">&lt;</span>GeometryBase<span class=\"token operator\">></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>が送れるようなので、それを使います（<a href=\"https://developer.rhino3d.com/wip/api/RhinoCommon/html/M_Rhino_Runtime_NamedParametersEventArgs_Set_4.htm\">ここ参照</a>）<br>\nPoint クラスは GeometryBase を継承しているので、List でまとめて送れることになります。</p>\n<h2>コードの修正</h2>\n<p>上記を踏まえて修正した SendBonePosition は以下になります。</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cs line-numbers\"><code class=\"language-cs\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GrasshopperInUnity</span><span class=\"token punctuation\">:</span><span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">static</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>GeometryBase<span class=\"token punctuation\">></span></span> _points <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>GeometryBase<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token number\">19</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Awake</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Point</span> pt <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point3d</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> _points<span class=\"token punctuation\">.</span>Capacity<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            _points<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>pt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">SendBonePosition</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> boneName<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Vector3</span> pos<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> num<span class=\"token punctuation\">)</span> \n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_firstRun<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">ShowGrasshopperWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            UnityEditor<span class=\"token punctuation\">.</span>EditorApplication<span class=\"token punctuation\">.</span>isPaused <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>boneName <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> \n        <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> pt <span class=\"token operator\">=</span> pos<span class=\"token punctuation\">.</span><span class=\"token function\">ToRhino</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            _points<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pt<span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">==</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> args <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rhino<span class=\"token punctuation\">.</span>Runtime<span class=\"token punctuation\">.</span>NamedParametersEventArgs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{</span>\n                    <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>GeometryBase<span class=\"token punctuation\">></span></span> pts2Rhino <span class=\"token operator\">=</span> _points<span class=\"token punctuation\">;</span>\n                    args<span class=\"token punctuation\">.</span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"point\"</span><span class=\"token punctuation\">,</span> pts2Rhino<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    Rhino<span class=\"token punctuation\">.</span>Runtime<span class=\"token punctuation\">.</span>HostUtils<span class=\"token punctuation\">.</span><span class=\"token function\">ExecuteNamedCallback</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pointList\"</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>2 ～ 12 行目で、IEnumerable を作って初期化し、25 行目で各ボーンのポジションを入れていっています。\nnum はボーンの名前と紐づけていて、例えば num=0 なら Head のボーンの位置を表すような形にしています。</p>\n<p>そして 27 行目の if で num = 18 のときのみ List を NameCallback で送るようにしています。</p>\n<p>これで NameCallback の回数は 1/18 になったので単純計算でこの箇所の実行速度は 600/18 = 33.3ms になるので何とか 30fps 程度まで近づけたのではないでしょうか。</p>\n<h2>細かい修正点</h2>\n<p>他の修正点として 24 行目にある pos.ToRhino() の挙動を変えました。</p>\n<p>以前は Unity の Vector3 型を Rhino の Point3d 型に変換しでポイントを送っていましたが、<a href=\"https://developer.rhino3d.com/wip/api/RhinoCommon/html/T_Rhino_Geometry_Point3d.htm\">Point3d は構造体</a> なので GeometryBase にできません。</p>\n<p>なので、GeometryBase を継承している<a href=\"https://developer.rhino3d.com/wip/api/RhinoCommon/html/T_Rhino_Geometry_Point.htm\">Point クラス</a>に変換するように以下のように書き換えています。</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cs line-numbers\"><code class=\"language-cs\"><span class=\"token keyword\">static</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RhinoConvert</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">Point</span> <span class=\"token function\">ToRhino</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token class-name\">Vector3</span> p<span class=\"token punctuation\">)</span>\n         <span class=\"token operator\">=></span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point3d</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span> p<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span> p<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span> p<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">IEnumerable<span class=\"token punctuation\">&lt;</span>Point<span class=\"token punctuation\">></span></span> <span class=\"token function\">ToRhino</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token class-name\">ICollection<span class=\"token punctuation\">&lt;</span>Vector3<span class=\"token punctuation\">></span></span> points<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>Point<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>points<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> p <span class=\"token keyword\">in</span> points<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n      result<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span><span class=\"token function\">ToRhino</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>これで人の運動とか解析したら楽しそうですね。</p>","excerpt":"以前の記事で、RhinoInside を使った人の動きの FEM 解析をやりましたが、速度が全然出ずちょっと実用に耐えられなかったので原因を調べて改善した内容についてです。 改善した結果以下のようになったので、かなりいい感じではないでしょうか。  原因の調査 改善するためにはまず原因を調べないといけないので、Unity…","frontmatter":{"date":"22 March, 2020","path":"/articles/Rhino.Inside.Unity-withFEM2","title":"RhinoInside を使ってリアルタイムで人の動きのFEM解析をやってみる　～速度改善編～","article_tags":["Karamba3D","Unity","VR","RhinoInside","CSharp","構造とデジタル"]},"fields":{"readingTime":{"text":"2 min read"},"slug":"/kozo-to-digital/Rhino.Inside.Unity-withFEM2/","collection":"article"}},"site":{"siteMetadata":{"title":"構造とデジタル_最新版_Final(1)"}}},"pageContext":{}},"staticQueryHashes":["32046230","3649515864"]}