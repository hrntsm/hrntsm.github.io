{"componentChunkName":"component---src-templates-article-post-js","path":"/articles/stb2u","result":{"data":{"markdownRemark":{"html":"<p>Unity で建築構造設計の一貫計算ソフトと BIM の連携等に使用されている ST-Bridge データを読み込むアセットを作成したので公開します。</p>\n<h2>動作状況</h2>\n<p>動作の様子は以下のような感じです。</p>\n<p>ここで使用している建物の ST-Bridge データは、規格を作成している一般社団法人 building SMART Japan さんで公開されている「<a href=\"https://www.building-smart.or.jp/old/download/files/20171030_st.zip\">ST-Bridge Viewer</a>」のなかのサンプルデータを使用させていただいています。</p>\n<p><a href=\"https://1.bp.blogspot.com/-IIo29ddUg58/Xjoap7b_a9I/AAAAAAAABvg/KFJGHy6UBhE2tWtAPuN57ctc7PxLnLz4gCLcBGAsYHQ/s1600/stb2u.gif\"><img src=\"https://1.bp.blogspot.com/-IIo29ddUg58/Xjoap7b_a9I/AAAAAAAABvg/KFJGHy6UBhE2tWtAPuN57ctc7PxLnLz4gCLcBGAsYHQ/s640/stb2u.gif\"></a></p>\n<p><a href=\"https://draft.blogger.com/null\"></a>　そもそも ST-Bridge とは何か？というのは、bSJ さんのサイトより確認ください。</p>\n<p><a href=\"https://www.building-smart.or.jp/meeting/buildall/structural-design/\">https://www.building-smart.or.jp/meeting/buildall/structural-design/</a></p>\n<h2>アセットの対応状況（Stb2U v.0.1）</h2>\n<ul>\n<li>入力されたデータから部材ごとにメッシュを作ります。</li>\n<li>基本的なタグのデータには対応（柱、梁、間柱、小梁、ブレース、スラブ）</li>\n<li>耐震壁、基礎、杭ほかパラペット等は非対応です。</li>\n<li>S、RC、SRC、CFT に対応していますが、そんなに多くのデータでデバッグしているわけではないので、全部がうまく出るかはよくわかりません。</li>\n<li>ST-Bridge の Version1.x 系が対象で、Version2.x 系は非対応です。</li>\n<li>部材のハンチには対応していません。中央断面で出力します。</li>\n<li>対応している鉄骨断面は、ロール H、ビルト H、ロール BOX、ビルト BOX、L です。T、C、LipC、FB、Pipe は非対応です。</li>\n<li>部材のオフセット、回転には非対応なので、例えば H 柱は常に X 軸方向が強軸で出力されます。</li>\n<li>アセット読み込み後、メニューバーに表示される Stb2U から stb ファイルを読み込むことでモデルが作成されます。</li>\n</ul>\n<p>非対応なのは実装が難しいわけではなく、自分の手元にあるサンプルではおおむね出力できるようになって満足したので実装していないだけで、需要とやる気があればそのうち実装するかもしれません。</p>\n<h2>ダウンロードについて</h2>\n<p>AssetStore に出していないので、アセットのダウンロードは私の GitHub から README、LICENSE を確認の上、どうぞ。</p>\n<p>ダウンロードリンク：<a href=\"https://github.com/hrntsm/STEVIA-Stb2U/releases/tag/v0.2.1\">https://github.com/hrntsm/STEVIA-Stb2U/releases</a></p>\n<p>コードが気になる方は同じく<a href=\"https://github.com/hrntsm/STEVIA-Stb2U\">Github のリポジトリ</a>もしくはダウンロードしたアセットに入っている .cs ファイルを参照ください。ぐちゃぐちゃですが、C#の LINQ を使って XML を読み込んでいるだけです。</p>\n<p>中身は Grasshopper 向け実装の HoaryFox とほぼ同様です。</p>\n<p>基本的な違いは、データの持ち方が違うのでそこを変更しているだけです。\nGrasshopper 版で Double で処理している箇所を、Unity では Float で処理するように変更しています。</p>\n<p>スタントアローンで動くようにビルドした <a href=\"https://github.com/hrntsm/STEVIA-Stb2U/wiki\">STEVIA</a> という名前のソフトもありますので、そちらも使ってみてください。</p>\n<p><a href=\"https://github.com/hrntsm/STEVIA-Stb2U/wiki\"><img src=\"https://github.com/hrntsm/STEVIA-Stb2U/wiki/images/Banner.jpg\"></a></p>","excerpt":"Unity で建築構造設計の一貫計算ソフトと BIM の連携等に使用されている ST-Bridge データを読み込むアセットを作成したので公開します。 動作状況 動作の様子は以下のような感じです。 ここで使用している建物の ST-Bridge データは、規格を作成している一般社団法人 building SMART…","frontmatter":{"date":"05 February, 2020","path":"/articles/stb2u","title":"ST-Bridge の Unity 読み込みツール「Stb2U」について","article_tags":["Unity","CSharp","構造とデジタル"]},"fields":{"readingTime":{"text":"1 min read"},"slug":"/kozo-to-digital/stb2u/","collection":"article"}},"site":{"siteMetadata":{"title":"構造とデジタル_最新版_Final(1)"}}},"pageContext":{}},"staticQueryHashes":["32046230","3649515864"]}