{"componentChunkName":"component---src-templates-article-post-js","path":"/articles/rhino-cs-to-unity","result":{"data":{"markdownRemark":{"html":"<h2>はじめに</h2>\n<p>Rhinoceros と Unity、どちらも C#を使って開発できますが、自分が作成していた Rhino の grasshopper で動作するコンポーネントを Unity で動作するように書き換えたので、その際の注意点を備忘録的に残します。</p>\n<h2>注意点</h2>\n<h3>頂点を表すときに使うものに入れられる型が違う</h3>\n<ul>\n<li>\n<p>Rhino だと Point3d だが、これは double</p>\n<ul>\n<li>これについては、Point3f(float 型)もあるので、Rhino 側をそれで作っておけばいいのでは？ って話もあるが、Rhino は基本 double で Line とか Surface とかつくるので、Rhino で毎回キャストし直す必要がでてきてめんどくさい</li>\n</ul>\n</li>\n<li>\n<p>Unity だと Vector3 だが、これは float</p>\n<ul>\n<li>double で処理するように *2.0 のように書いたところを float になるように *2 に直した</li>\n<li>もともとの戻り値が double なのを float にキャストしなす部分をちまちま追加したりした</li>\n</ul>\n</li>\n</ul>\n<h3>座標のプロパティ名が少し違う</h3>\n<ul>\n<li>Rhino だと Point3d.X で X 座標（大文字）</li>\n<li>Unity だと Vector3.x で X 座標（小文字）</li>\n</ul>\n<h3>扱えるメッシュのタイプが違う</h3>\n<ul>\n<li>Rhino は 3 頂点と 4 頂点のメッシュが使える</li>\n<li>Unity は 3 頂点のみ</li>\n</ul>\n<h3>座標系が違う</h3>\n<ul>\n<li>Rhino は Y-Up</li>\n<li>Unity は Z-Up</li>\n</ul>\n<h3>SDK が違う</h3>\n<ul>\n<li>これは当たり前だが、どこまで C#の共通の機能で書いて、どこからがそれぞれの固有の SDK を使うか考えないと後から直すのがめんどくさい</li>\n<li>\n<p>今回 Rhino 側は Surface で面を作成していたので、Surface から Brep を作成して部材としていた</p>\n<ul>\n<li>↑ これだと Rhino 固有の Surface と Brep の 2 つのものを使ってしまう。</li>\n<li>Unity に Surface はないので、Surface と Brep の 2 つを Mesh に統一するよう書き方を変えないといけなかった</li>\n</ul>\n</li>\n</ul>\n<h3>単位が違う</h3>\n<ul>\n<li>\n<p>Unity は基本的に 1 が 1m なのに対して、Rhino は初期の設定で変わるので単位を気を付けないとかなり大きいものができる</p>\n<ul>\n<li>Rhino 側は単位を mm で作っていたので、最初想定の 1000 倍の大きさになってしまった。</li>\n</ul>\n</li>\n</ul>\n<h3>作成したデータの扱い</h3>\n<ul>\n<li>Grasshopper はデータツリーが膨れていくだけなので、適当に作ってもすぐには気にならない</li>\n<li>\n<p>一方 Unity はすべてが Inspector に表示されるので、特にデータの構造を気にしないで作ると Inspector が溢れかえる</p>\n<ul>\n<li>Unity では適宜親の GameObject を作ってそこに子として入れるようにした。</li>\n</ul>\n</li>\n</ul>\n<h2>まとめ</h2>\n<p>今後また Rhino から Unity に書き直すこと前提で C#で何かを作ることがあるかわからないし、そんなことやる人がいるかもよくわからないけれども、上記を簡単に書き換えられるようにコードをまとめとくと後から楽です。</p>","excerpt":"はじめに Rhinoceros と Unity、どちらも C#を使って開発できますが、自分が作成していた Rhino の grasshopper で動作するコンポーネントを Unity で動作するように書き換えたので、その際の注意点を備忘録的に残します。 注意点 頂点を表すときに使うものに入れられる型が違う Rhino…","frontmatter":{"date":"02 December, 2019","path":"/articles/rhino-cs-to-unity","title":"Rhino 向けに書いた C# を Unity 向けに書き換えるときの注意点","article_tags":["Rhinoceros","Unity","CSharp","Qiita"]},"fields":{"readingTime":{"text":"1 min read"},"slug":"/qiita/rhino-cs-to-unity/","collection":"article"}}},"pageContext":{}},"staticQueryHashes":["32046230","3649515864"]}