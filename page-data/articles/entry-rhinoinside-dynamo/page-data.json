{"componentChunkName":"component---src-templates-article-post-js","path":"/articles/entry-rhinoinside-dynamo","result":{"data":{"markdownRemark":{"html":"<p><a href=\"./entry-rhinoinside-cpython\">CPython で RhinoInside</a> で RhinoInside を Python で使ったので、Dynamo でもつかってみます。</p>\n<h2>やること</h2>\n<p>環境構築して、CPython 内でジオメトリを作成して、3dm で保存することをやります。中身としては挙げられているサンプルに保存用の部分を追加したものになります。</p>\n<h2>環境構築</h2>\n<p>最初に Dynamo から RhinoInside を呼べるようにします。</p>\n<p>RhinoInside.dll が必要なので、それを用意してください。冒頭で上げた記事と同様に pip すれば問題ないです。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">pip install <span class=\"token operator\">-</span><span class=\"token operator\">-</span>user rhinoinsite</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h2>Dynamo でうごかす</h2>\n<p>動作させるのは CPython のときと同じようにポイントを作って、そこを通るラインを作り、そのラインの長さを出力させます。</p>\n<h3>Dynamo 内でポイント作成</h3>\n<p>単純にコード内でポイントを作成しても面白くないので、以下のように Point.ByCoordinates を使って UI で作成したポイントを取り込むようにしてみました。</p>\n<p><img src=\"https://hiron.dev/article-images/entry-rhinoinside-dynamo/dynamo.png\" alt=\"Dynamo\"></p>\n<h3>RhinoInside の読み込み</h3>\n<p>Dynamo の Python スクリプトから RhinoInside を呼び出したいので、以下支度しています。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># RhinoInside 読み込み</span>\nclr<span class=\"token punctuation\">.</span>AddReference<span class=\"token punctuation\">(</span><span class=\"token string\">'RhinoInside'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">import</span> RhinoInside\n\n<span class=\"token comment\"># RhinoInside 初期化</span>\nRhinoInside<span class=\"token punctuation\">.</span>Resolver<span class=\"token punctuation\">.</span>Initialize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># RhinoCommon 読み込み</span>\nclr<span class=\"token punctuation\">.</span>AddReference<span class=\"token punctuation\">(</span><span class=\"token string\">\"RhinoCommon\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">import</span> Rhino\n\n<span class=\"token comment\"># 裏で Rhino 起動</span>\n__rhino_core <span class=\"token operator\">=</span> Rhino<span class=\"token punctuation\">.</span>Runtime<span class=\"token punctuation\">.</span>InProcess<span class=\"token punctuation\">.</span>RhinoCore<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>Rhino のジオメトリの作成</h3>\n<p>Dynamo のポイントを取得していて Rhino のポイントとは違うので、Rhino で読み込めるように座標の各成分を取得して Rhino の Point3d にしています。\nインプットは変数名 IN でリストになっているので以下のような形です。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">pts <span class=\"token operator\">=</span> System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic<span class=\"token punctuation\">.</span>List<span class=\"token punctuation\">[</span>Rhino<span class=\"token punctuation\">.</span>Geometry<span class=\"token punctuation\">.</span>Point3d<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\npts<span class=\"token punctuation\">.</span>Add<span class=\"token punctuation\">(</span>Rhino<span class=\"token punctuation\">.</span>Geometry<span class=\"token punctuation\">.</span>Point3d<span class=\"token punctuation\">(</span>IN<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>X<span class=\"token punctuation\">,</span>IN<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Y<span class=\"token punctuation\">,</span>IN<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\npts<span class=\"token punctuation\">.</span>Add<span class=\"token punctuation\">(</span>Rhino<span class=\"token punctuation\">.</span>Geometry<span class=\"token punctuation\">.</span>Point3d<span class=\"token punctuation\">(</span>IN<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>X<span class=\"token punctuation\">,</span>IN<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Y<span class=\"token punctuation\">,</span>IN<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\npts<span class=\"token punctuation\">.</span>Add<span class=\"token punctuation\">(</span>Rhino<span class=\"token punctuation\">.</span>Geometry<span class=\"token punctuation\">.</span>Point3d<span class=\"token punctuation\">(</span>IN<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>X<span class=\"token punctuation\">,</span>IN<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Y<span class=\"token punctuation\">,</span>IN<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>最後にカーブを作成して、その長さを OUT で出力しています。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">crv <span class=\"token operator\">=</span> Rhino<span class=\"token punctuation\">.</span>Geometry<span class=\"token punctuation\">.</span>Curve<span class=\"token punctuation\">.</span>CreateInterpolatedCurve<span class=\"token punctuation\">(</span>pts<span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\nOUT <span class=\"token operator\">=</span> crv<span class=\"token punctuation\">.</span>GetLength<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h3>結果の確認</h3>\n<p>上記の画像であるように、Watch のノードで結果を確認するとちゃんとカーブの長さが出力されています。</p>\n<h3>ちなみに</h3>\n<p>以下の部分で Rhino を起動しているのですが、今のコードだとちゃんと判定していないので、スクリプトを実行するたびに毎回 Rhino を起動させているので重いしすぐ落ちます。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">__rhino_core <span class=\"token operator\">=</span> Rhino<span class=\"token punctuation\">.</span>Runtime<span class=\"token punctuation\">.</span>InProcess<span class=\"token punctuation\">.</span>RhinoCore<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>ちゃんとやる場合は <a href=\"https://github.com/mcneel/rhino.inside-cpython/blob/master/rhinoinside/__init__.py#L30\">ここ</a> にあるように、_<em>rhino</em>core が None かどうかをしっかり確認するコードにしましょう。</p>\n<h2>コード全文</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># Python 標準ライブラリおよび DesignScript ライブラリをロード</span>\n<span class=\"token keyword\">import</span> sys\n<span class=\"token keyword\">import</span> clr\nclr<span class=\"token punctuation\">.</span>AddReference<span class=\"token punctuation\">(</span><span class=\"token string\">'ProtoGeometry'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">from</span> Autodesk<span class=\"token punctuation\">.</span>DesignScript<span class=\"token punctuation\">.</span>Geometry <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\n<span class=\"token comment\"># Rhino の読み込み関係</span>\nclr<span class=\"token punctuation\">.</span>AddReference<span class=\"token punctuation\">(</span><span class=\"token string\">'RhinoInside'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">import</span> RhinoInside\nRhinoInside<span class=\"token punctuation\">.</span>Resolver<span class=\"token punctuation\">.</span>Initialize<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nclr<span class=\"token punctuation\">.</span>AddReference<span class=\"token punctuation\">(</span><span class=\"token string\">\"RhinoCommon\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">import</span> Rhino\n__rhino_core <span class=\"token operator\">=</span> Rhino<span class=\"token punctuation\">.</span>Runtime<span class=\"token punctuation\">.</span>InProcess<span class=\"token punctuation\">.</span>RhinoCore<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">import</span> System\n\npts <span class=\"token operator\">=</span> System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic<span class=\"token punctuation\">.</span>List<span class=\"token punctuation\">[</span>Rhino<span class=\"token punctuation\">.</span>Geometry<span class=\"token punctuation\">.</span>Point3d<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\npts<span class=\"token punctuation\">.</span>Add<span class=\"token punctuation\">(</span>Rhino<span class=\"token punctuation\">.</span>Geometry<span class=\"token punctuation\">.</span>Point3d<span class=\"token punctuation\">(</span>IN<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>X<span class=\"token punctuation\">,</span>IN<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Y<span class=\"token punctuation\">,</span>IN<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\npts<span class=\"token punctuation\">.</span>Add<span class=\"token punctuation\">(</span>Rhino<span class=\"token punctuation\">.</span>Geometry<span class=\"token punctuation\">.</span>Point3d<span class=\"token punctuation\">(</span>IN<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>X<span class=\"token punctuation\">,</span>IN<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Y<span class=\"token punctuation\">,</span>IN<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\npts<span class=\"token punctuation\">.</span>Add<span class=\"token punctuation\">(</span>Rhino<span class=\"token punctuation\">.</span>Geometry<span class=\"token punctuation\">.</span>Point3d<span class=\"token punctuation\">(</span>IN<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>X<span class=\"token punctuation\">,</span>IN<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Y<span class=\"token punctuation\">,</span>IN<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>Z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ncrv <span class=\"token operator\">=</span> Rhino<span class=\"token punctuation\">.</span>Geometry<span class=\"token punctuation\">.</span>Curve<span class=\"token punctuation\">.</span>CreateInterpolatedCurve<span class=\"token punctuation\">(</span>pts<span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\nOUT <span class=\"token operator\">=</span> crv<span class=\"token punctuation\">.</span>GetLength<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","excerpt":"CPython で RhinoInside で RhinoInside を Python で使ったので、Dynamo でもつかってみます。 やること 環境構築して、CPython 内でジオメトリを作成して、3dm…","frontmatter":{"date":"05 March, 2021","path":"/articles/entry-rhinoinside-dynamo","title":"RhinoInside Dynamo 入門","article_tags":["RhinoInside","Python","Dynamo"]},"fields":{"readingTime":{"text":"1 min read"},"slug":"/entry-rhinoinside-dynamo/","collection":"article"}},"site":{"siteMetadata":{"title":"構造とデジタル_最新版_Final(1)"}}},"pageContext":{}},"staticQueryHashes":["32046230","3649515864"]}