{"componentChunkName":"component---src-templates-article-post-js","path":"/articles/Rhino8-NewFunc-ObjectCapture","result":{"data":{"markdownRemark":{"html":"<h2>はじめに</h2>\n<p>Rhino 7 が発売されてだいぶ立ちましたが、開発版の RhinoWIP（将来のRhino8）にじわじわと新しい機能が追加されだしました。</p>\n<p>その中で <strong>Apple Silicon Mac 版の Rhino WIP にのみ</strong> 追加された機能である ObjectCaptureFromPhotos を紹介します。</p>\n<p>どのような機能かというと物体の周囲を撮影した写真のデータをもとに立体を作成する機能になります。\n以下のようなものが Rhino で作成されます。いわゆるフォトグラメトリと言われるものになります。</p>\n<blockquote class=\"twitter-tweet\" data-partner=\"tweetdeck\"><p lang=\"ja\" dir=\"ltr\">M1Pro を使った Rhino8 のオブジェクトキャプチャー機能の試し。<br>これで簡単に Rhino でフォトグラメトリできるね！！ <a href=\"https://t.co/vli9tRPGvq\">pic.twitter.com/vli9tRPGvq</a></p>&mdash; hiron (@hiron_rgkr) <a href=\"https://twitter.com/hiron_rgkr/status/1464805976142319618?ref_src=twsrc%5Etfw\">November 28, 2021</a></blockquote>\n<script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<p>なお開発途中の機能の紹介ですので、今後実装が変わる可能性があるので注意してください。\n2021/12/01時点での情報になります。</p>\n<h3>必要な環境</h3>\n<ol>\n<li><a href=\"https://www.rhino3d.com/download/rhino/wip\">Rhinoceros WIP</a> </li>\n<li>Apple Silicon Mac (M1 以降のCPU)</li>\n</ol>\n<h2>サンプルの実行</h2>\n<p>上にも書いたように開発版の機能なので、最新情報は例えば以下の Rhinoceros Forum を参照してください。</p>\n<ul>\n<li><a href=\"https://discourse.mcneel.com/t/rhino-8-mac-feature-objectcapturefromphotos/133086?u=hiron\">Rhino 8 (Mac) Feature: ObjectCaptureFromPhotos</a></li>\n</ul>\n<p>サンプルを使った ObjectCapture の手順は以下になります。</p>\n<ol>\n<li>macOS Monterey を使用していて、Apple Silicon Mac で Rhinoceros WIP を起動</li>\n<li>現在開発版なので RhinoWIP は最新版なのか確認</li>\n<li><a href=\"https://files.mcneel.com/misc/Shoe-Photos.zip\">サンプルの写真のセット</a> をダウンロードし解凍</li>\n<li>Rhino で <code class=\"language-text\">ObjectCaptureFromPhotos</code> コマンドを実行</li>\n<li>3 で回答した写真のあるフォルダに移動し OK をクリック</li>\n<li>コマンドオプションを指定（詳細は以下に記載）し Enter</li>\n<li>\n<p>処理が開始</p>\n<ul>\n<li>上記サンプルとデフォルトのオプションを使用すると約90秒かかります。</li>\n</ul>\n</li>\n<li>処理が完了するとモデルウインドウに新しいメッシュが表示される</li>\n<li>確認したいウインドウのビューのモードをレンダリングにするとモデルが表示される</li>\n</ol>\n<p>これでサンプルの実行は終わりです。とても簡単に実行できますね。\n自分で撮った写真を使いたい場合は、対象となっているものは jpeg, heic, png の3種類になります。</p>\n<h3>実行時オプション</h3>\n<p>実行時に UI で設定できるオプションは以下の3つがあります。</p>\n<ol>\n<li>\n<p>Detail Level</p>\n<ul>\n<li>\n<p>Preview</p>\n<ul>\n<li>荒いメッシュでクオリティの低いマテリアルになるが最速で処理される</li>\n</ul>\n</li>\n<li>\n<p>Reduce</p>\n<ul>\n<li>Preview よりクオリティが高いが処理が遅くなる</li>\n</ul>\n</li>\n<li>\n<p>Medium</p>\n<ul>\n<li>密なメッシュと詳細なマテリアルになるが処理が遅くなる</li>\n</ul>\n</li>\n<li>\n<p>Full</p>\n<ul>\n<li>最も良い品質のメッシュとマテリアルになるが、処理が最も遅くなる</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Sample Ordering（撮った画像の順序）</p>\n<ul>\n<li>\n<p>Unordered</p>\n<ul>\n<li>画像の並びが空間的に順序立っていない場合に選択する</li>\n<li>処理は順序だっている場合に対して遅い</li>\n</ul>\n</li>\n<li>\n<p>Sequential</p>\n<ul>\n<li>画像の並びがターンテーブルを使って撮影した場合のように空間で順序だっている場合に選択する</li>\n<li>処理の速度を早くすることができる</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Feature Sensitivity</p>\n<ul>\n<li>\n<p>Normal</p>\n<ul>\n<li>典型的な形状、エッジ、テクスチャの場合に選択</li>\n</ul>\n</li>\n<li>\n<p>High</p>\n<ul>\n<li>識別可能な構造、エッジ、テクスチャーがあまりないオブジェクトの場合に選択</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h3>なぜ Mac のみ対象の機能なのか</h3>\n<p>この機能は Mac 版のRhinoのみに実装される機能になります。\nなぜかというと、macOS によって提供されている Object Capture 可能な API である RealityKit を使用しているからです。</p>\n<p>オプションはこの API で提供されているオプションを Rhino の UI でラップしたものになっており、mcneel側の実装ではないです。</p>\n<p>Apple が出している公式のサンプルは以下になります。\nこれはコマンドラインから Rhino でできることとほぼ同様のことを実行するアプリになります。\n違いは出力が usdz 形式担っているところです。</p>\n<ul>\n<li><a href=\"https://developer.apple.com/documentation/realitykit/creating_a_photogrammetry_command-line_app\">Creating a Photogrammetry Command-Line App</a></li>\n</ul>\n<p>Detail level は <code class=\"language-text\">PhotogrammetrySession.Request</code> で設定可能な Detail の enum に相当します。</p>\n<ul>\n<li><a href=\"https://developer.apple.com/documentation/realitykit/photogrammetrysession/request\">PhotogrammetrySession.Request</a></li>\n<li><a href=\"https://developer.apple.com/documentation/realitykit/photogrammetrysession/request/detail\">enum PhotogrammetrySession.Request.Detail</a></li>\n</ul>\n<p>このドキュメントを見ると出力の戻り値には Bounds を選択することができ、これはモデルのバウンディングボックスを返すようです。\nですがこれは Rhino 側の機能でもカバーできるので、この API は使用していないようです。</p>\n<p>また Detail の enum を見ると Rhino では選択できない raw という設定があることがわかります。\nサイズが非常に大きくなるため Rhino 側では使用できないようにしているのかもしれません。</p>\n<p>設定とサイズはドキュメントに記載があったので、以下に引用します。</p>\n<table>\n<thead>\n<tr>\n<th>Detail Level</th>\n<th>Triangles</th>\n<th>Estimated File Size</th>\n<th>Texture Size</th>\n<th>Texture Memory Required</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>.preview</td>\n<td>&#x3C;25k</td>\n<td>&#x3C;5MB</td>\n<td>1024x1024</td>\n<td>10.7MB</td>\n</tr>\n<tr>\n<td>.reduce</td>\n<td>&#x3C;50k</td>\n<td>&#x3C;10MB</td>\n<td>2048x2048</td>\n<td>42.7MB</td>\n</tr>\n<tr>\n<td>.medium</td>\n<td>&#x3C;100k</td>\n<td>&#x3C;30MB</td>\n<td>4096x4096</td>\n<td>170.7MB</td>\n</tr>\n<tr>\n<td>.full</td>\n<td>&#x3C;250k</td>\n<td>&#x3C;100MB</td>\n<td>8192x8192</td>\n<td>853.3MB</td>\n</tr>\n<tr>\n<td>.raw</td>\n<td>&#x3C;30M</td>\n<td>Varies</td>\n<td>8192x8192(multiple)</td>\n<td>Varies</td>\n</tr>\n</tbody>\n</table>\n<p>Sample Ordering と Feature Sensitivity は <code class=\"language-text\">PhotogrammetrySession.Configuration</code> での設定可能な enum に相当します。</p>\n<ul>\n<li><a href=\"https://developer.apple.com/documentation/realitykit/photogrammetrysession/configuration\">PhotogrammetrySession.Configuration</a></li>\n<li><a href=\"https://developer.apple.com/documentation/realitykit/photogrammetrysession/configuration/sampleordering\">enum PhotogrammetrySession.Configuration.SampleOrdering\n</a></li>\n<li><a href=\"https://developer.apple.com/documentation/realitykit/photogrammetrysession/configuration/featuresensitivity\">enum PhotogrammetrySession.Configuration.FeatureSensitivity\n</a></li>\n</ul>\n<p>この2つのオプションは Detail Level のような無効化されているオプションはありませんでした。</p>\n<h2>画像の作り方</h2>\n<p>こちらは様々なフォトグラメトリの TIPS をいろんな方が上げているので、参考を上げることにとどめます。</p>\n<ul>\n<li><a href=\"https://developer.apple.com/jp/augmented-reality/object-capture/\">Object Captureの紹介 Apple公式</a></li>\n<li><a href=\"https://lilea.net/lab/how-to-use-object-capture/\">ObjectCaptureの使い方 lileaLab</a></li>\n</ul>","excerpt":"はじめに Rhino 7 が発売されてだいぶ立ちましたが、開発版の RhinoWIP（将来のRhino8）にじわじわと新しい機能が追加されだしました。 その中で Apple Silicon Mac 版の Rhino WIP にのみ 追加された機能である ObjectCaptureFromPhotos…","frontmatter":{"date":"01 December, 2021","path":"/articles/Rhino8-NewFunc-ObjectCapture","title":"Rhino 8 の新機能紹介 〜ObjectCapture編〜","article_tags":["Rhinoceros","Photogrammetry"]},"fields":{"readingTime":{"text":"2 min read"},"slug":"/RhinoWIP-NewFunc-ObjectCapture/","collection":"article"}},"site":{"siteMetadata":{"title":"構造とデジタル_最新版_Final(1)"}}},"pageContext":{}},"staticQueryHashes":["32046230","3649515864"]}