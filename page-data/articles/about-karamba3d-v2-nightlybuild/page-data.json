{"componentChunkName":"component---src-templates-article-post-js","path":"/articles/about-karamba3d-v2-nightlybuild","result":{"data":{"markdownRemark":{"html":"<h2>はじめに</h2>\n<p>通常開発した Grasshopper コンポーネントは Rhino の GUI を使用して動作確認、テストを行います。\nですがこれでは軽微な変更であっても挙動を変更した時、毎回デバッグを実行して Rhino、そして Grasshopper の起動を待って、さらに GH ファイルを読み込む手順を踏むことになります。\nこれは、作業効率を落とす原因になっていないでしょうか。</p>\n<p>Rhino7 の新機能 RhinoCompute を使うことで、MsTest などから Grasshopper コンポーネントのテストを実行することが可能になったのでその方法について紹介します。</p>\n<h2>環境構築</h2>\n<p>RhinoCompute を実行できる環境を構築してください。mcneel の GitHub などからダウンローでできます。\n一番簡単な方法は Hops をインストールすることです。</p>\n<p>以下の記事を参考に Hops をインストールしてください。</p>\n<ul>\n<li><a href=\"./Try-Hops-component\">Grasshopper の Hops の始め方</a></li>\n</ul>\n<p>インストールされた Hops は例えば ver0.4.7 ならば以下のフォルダにデータが入っています。</p>\n<blockquote>\n<p>%APPDATA%/McNeel/Rhinoceros/packages/7.0/Hops/0.4.7/compute.geometry</p>\n</blockquote>\n<p>上記フォルダ内の compute.geometry.exe を実行し、以下の最後にあるように running になれば RhinoCompute が動いています。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span><span class=\"token number\">20</span>:43:46 INF<span class=\"token punctuation\">]</span> Compute <span class=\"token number\">1.0</span>.0.0, Rhino <span class=\"token number\">7.5</span>.21100.3001\n<span class=\"token punctuation\">[</span><span class=\"token number\">20</span>:43:46 INF<span class=\"token punctuation\">]</span> Configuration Result:\n<span class=\"token punctuation\">[</span>Success<span class=\"token punctuation\">]</span> Name compute.geometry\n<span class=\"token punctuation\">[</span>Success<span class=\"token punctuation\">]</span> DisplayName rhino.compute\n<span class=\"token punctuation\">[</span>Success<span class=\"token punctuation\">]</span> Description rhino.compute\n<span class=\"token punctuation\">[</span>Success<span class=\"token punctuation\">]</span> ServiceName compute.geometry\n<span class=\"token punctuation\">[</span><span class=\"token number\">20</span>:43:46 INF<span class=\"token punctuation\">]</span> Topshelf v4.1.0.172, .NET Framework v4.0.30319.42000\n<span class=\"token punctuation\">[</span><span class=\"token number\">20</span>:43:46 INF<span class=\"token punctuation\">]</span> Launching RhinoCore library as hiron\n<span class=\"token punctuation\">[</span><span class=\"token number\">20</span>:43:48 INF<span class=\"token punctuation\">]</span> Starting listener<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>: <span class=\"token punctuation\">[</span><span class=\"token string\">\"http://localhost:8081\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">20</span>:43:50 INF<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span>/2<span class=\"token punctuation\">)</span> Loading grasshopper\n<span class=\"token punctuation\">[</span><span class=\"token number\">20</span>:43:56 INF<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span>/2<span class=\"token punctuation\">)</span> Loading compute plug-ins\n<span class=\"token punctuation\">[</span><span class=\"token number\">20</span>:43:57 INF<span class=\"token punctuation\">]</span> Listening on <span class=\"token punctuation\">[</span><span class=\"token string\">\"http://localhost:8081\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token number\">20</span>:43:57 INF<span class=\"token punctuation\">]</span> The compute.geometry <span class=\"token function\">service</span> is now running, press Control+C to exit.</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>コンポーネントの作成</h2>\n<p>ここで作成したコンポーネントを別記事で CI することを書いているので、ここでは VisualStudio を使わず、dotnet.exe を使ってコンポーネントとの作成のテンプレートを作成します。\nVisualStudio のテンプレートでの作成でも構いません。</p>\n<p>はじめに PowerSell で以下を実行すると dotnet に Grasshopper のテンプレートが入ります。</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-powershell line-numbers\"><code class=\"language-powershell\">dotnet new <span class=\"token operator\">--</span>install Rhino<span class=\"token punctuation\">.</span>Templates</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>問題なくインストールされると以下のようになり、Templates の中に Grasshopper Component が含まれます。</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-powershell line-numbers\"><code class=\"language-powershell\">dotnet new\n\nTemplates                                     Short Name           Language    Tags\n<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>  <span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>-<span class=\"token operator\">-</span>  <span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>-<span class=\"token operator\">-</span>  <span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>-<span class=\"token operator\">--</span>-<span class=\"token operator\">-</span>\nGrasshopper Component                         ghcomponent          <span class=\"token punctuation\">[</span>C<span class=\"token comment\">#],VB     Rhino/Grasshopper</span>\nGrasshopper Assembly                          grasshopper          <span class=\"token punctuation\">[</span>C<span class=\"token comment\">#],VB     Rhino/Grasshopper</span>\nRhinoCommon Command                           rhinocommand         <span class=\"token punctuation\">[</span>C<span class=\"token comment\">#],VB     Rhino/RhinoCommon</span>\nRhinoCommon Plug<span class=\"token operator\">-In</span>                           rhino                <span class=\"token punctuation\">[</span>C<span class=\"token comment\">#],VB     Rhino/RhinoCommon</span>\nZoo Plug<span class=\"token operator\">-In</span> <span class=\"token keyword\">for</span> Rhinoceros                    zooplugin            <span class=\"token punctuation\">[</span>C<span class=\"token comment\">#],VB     Rhino/Zoo</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>コンポーネントを作成したいフォルダに移動して、以下を実行してソリューションファイルとその中身を作成など初期の支度をします。</p>\n<div class=\"gatsby-highlight\" data-language=\"powershell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-powershell line-numbers\"><code class=\"language-powershell\">mkdir GHCITest\ncd GHCITest\ndotnet new sln\ndotnet new gitignore\ngit init\nmkdir GHCITest\ndotnet new <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>GHCITest<span class=\"token operator\">/</span>grasshopper\ndotnet sln <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>GHCITest<span class=\"token punctuation\">.</span>sln add <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>GHCITest<span class=\"token operator\">/</span>GHCITest<span class=\"token punctuation\">.</span>csproj</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><code class=\"language-text\">dotnet new grasshopper --help</code> でヘルプを見ることができます。\n引数を指定することでコンポーネントの名前やカテゴリの初期値を指定できます。</p>","excerpt":"はじめに 通常開発した Grasshopper コンポーネントは Rhino の GUI を使用して動作確認、テストを行います。\nですがこれでは軽微な変更であっても挙動を変更した時、毎回デバッグを実行して Rhino、そして Grasshopper の起動を待って、さらに GH…","frontmatter":{"date":"24 April, 2021","path":"/articles/about-karamba3d-v2-nightlybuild","title":"RhinoCompute を使ったGrasshopperコンポーネントのユニットテストの作成","article_tags":["Grasshopper","RhinoCompute"]},"fields":{"readingTime":{"text":"2 min read"},"slug":"/Test-GH-components-directory-in-Grasshopper-itself-using-RhinoCompute/","collection":"article"}},"site":{"siteMetadata":{"title":"構造とデジタル_最新版_Final(1)"}}},"pageContext":{}},"staticQueryHashes":["32046230","3649515864"]}