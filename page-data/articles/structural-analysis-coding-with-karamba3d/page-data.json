{"componentChunkName":"component---src-templates-article-post-js","path":"/articles/structural-analysis-coding-with-karamba3d","result":{"data":{"markdownRemark":{"html":"<h2>はじめに</h2>\n<p>Tokyo AEC Industry Dev Group で 2020/10/10 に行われたハンズオンの資料です。\nTokyo AEC Industry Dev Group についての詳細は以下を参照してください。</p>\n<p><a href=\"https://www.meetup.com/ja-JP/Tokyo-AEC-Industry-Dev-Group/events/xfrxvrybcnbnb/\">Tokyo AEC Industry Dev Group Meetup Site</a></p>\n<p>本ハンズオンの配信は以下です。これ以降の資料と合わせて参照してください。</p>\n<p><a href=\"https://www.youtube.com/watch?v=1cT70iLK6ZY\"><img src=\"https://img.youtube.com/vi/1cT70iLK6ZY/0.jpg\"></a></p>\n<p>参照しているデータは以下にありますので必要に応じてダウンロードしてください。</p>\n<ul>\n<li><a href=\"https://github.com/hrntsm/TAEC-Handson-Archive/tree/master/201010_Structural_Analysis_Coding_with_Karamba_by_hiron\">GitHub / Structural<em>Analysis</em>Coding<em>with</em>Karamba</a></li>\n</ul>\n<h2>準備編</h2>\n<p>このワークショップは 20/08/22 に行った Grasshopper を使ったの構造解析入門の続編です。\n前回の内容はこちらです。</p>\n<p><a href=\"https://www.youtube.com/watch?v=iYi5Y48zB2I\"><img src=\"https://img.youtube.com/vi/iYi5Y48zB2I/0.jpg\"></a></p>\n<p>今回は Karamba3D を使った解析をコンポーネントで行うだけでなく、C#Script から Karamba3D を使用し、解析を効率化させる方法の紹介します。この内容は以下の Scripting Guide Examples の内容を抜粋し今回向けに変更したものとなっています。</p>\n<p>ワークショップの前に、以下のものを準備しておいてください。</p>\n<ul>\n<li>\n<p>karamba3d のインストール(Trial 版ではなく Free 版)</p>\n<ul>\n<li><a href=\"https://www.food4rhino.com/app/karamba3d\">https://www.food4rhino.com/app/karamba3d</a></li>\n</ul>\n</li>\n<li>\n<p>karamba3d の Scripting Guide Examples</p>\n<ul>\n<li><a href=\"https://www.karamba3d.com/download/karamba3d-1-3-2-scripting-guide-examples/?wpdmdl=7759&#x26;masterkey=5d4a003883d21\">https://www.karamba3d.com/download/karamba3d-1-3-2-scripting-guide-examples/?wpdmdl=7759&#x26;masterkey=5d4a003883d21</a></li>\n</ul>\n</li>\n</ul>\n<h2>柱の解析</h2>\n<h3>Grasshopper でコンポーネントを使ってモデルづくり</h3>\n<p>最初から karamba3d を使ったコーディングをするとわかりづらいので、はじめにコンポーネントを使ってモデリングしていきます。\n作るものの条件は以下です。</p>\n<ul>\n<li>断面形状：角型 30cmx30cm 板厚 2.2cm</li>\n<li>材料：鋼材、色を赤にする</li>\n<li>境界条件：下端固定</li>\n<li>荷重：上端節点に対して、－Z 方向に 10kN</li>\n<li>部材長：3m</li>\n<li>部材の ID：Column</li>\n</ul>\n<p>こんな形です。完成したデータは Data フォルダの column_model.gh です。</p>\n<p><img src=\"./images/gh_model.jpg\" alt=\"GH_model\"></p>\n<h3>同じものを C#Script コンポーネントで作る</h3>\n<p>スクリプトで karamba3d を使うためには、KarambaCommon.dll と Karamba.gha を使います。\nこれは karamba3d がインストールされたフォルダ内にあります。\nkaramba3d はデフォルトだと以下にあります。\n以下のフォルダには KarambaCommon.dll とは別に Karamba.dll がありますが、こちらは C++ で書かれた karamba3d の構造計算を実際に行っている部分になります。</p>\n<blockquote>\n<p>C:\\Program Files\\Rhino6\\Plug-ins\\Karamba\\karambaCommon.dll</p>\n</blockquote>\n<p>これだけだとどんなクラスがあるかわからないので、準備編でダウンロードした karamba3d の Scripting Guide Examples を使います。\nこの中に Karamba3D<em>1.3.2</em>Documentation.chm があるのでそれを開くと karamba3d の SDK を確認できます。</p>\n<p>基本的にはメソッドへの入力と出力がコンポーネントの入出力ほぼ同じ構成になっています。では先程作ったモデルを KarambaSDK を使って作成していきます。</p>\n<p>最初に参照を追加します。</p>\n<p>C#Script コンポーネントを右クリックして <code class=\"language-text\">Manage Assemblies...</code> を選択します。\nその後 Referenced Assemblies の右側の Add から KarambaCommon.dll と Karamba.gha を追加します。</p>\n<p><img src=\"./images/manage_assembles.jpg\" alt=\"manage_assembles\"></p>\n<h3>C#Script の内容</h3>\n<p>完成したデータは Data フォルダの column_script.gh です。注意点ですが、以下のコード中でコメントアウトしているように単位がものによってまちまちなので注意してください。</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cs line-numbers\"><code class=\"language-cs\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Drawing</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Karamba<span class=\"token punctuation\">.</span>Utilities</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Karamba<span class=\"token punctuation\">.</span>Geometry</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Karamba<span class=\"token punctuation\">.</span>CrossSections</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Karamba<span class=\"token punctuation\">.</span>Supports</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Karamba<span class=\"token punctuation\">.</span>Loads</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Script_Instance</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">GH_ScriptInstance</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">RunScript</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">ref</span> <span class=\"token class-name\"><span class=\"token keyword\">object</span></span> modelOut<span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> <span class=\"token class-name\"><span class=\"token keyword\">object</span></span> maxDisp<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> logger <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MessageLogger</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> k3d <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">KarambaCommon<span class=\"token punctuation\">.</span>Toolkit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// karamba3d用のlineを作成</span>\n        <span class=\"token comment\">// 名前が似ていますが、Point3もLine3のKaramba.Geometryの構造体です。</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> p0 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> p1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> L0 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Line3</span><span class=\"token punctuation\">(</span>p0<span class=\"token punctuation\">,</span> p1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 材料の作成</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> E <span class=\"token operator\">=</span> <span class=\"token number\">210000000</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// kN/m2</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> G <span class=\"token operator\">=</span> <span class=\"token number\">80760000</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// kN/m2</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> gamma <span class=\"token operator\">=</span> <span class=\"token number\">78.5</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// kN/m3</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">FemMaterial_Isotrop</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Steel\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"SN400\"</span><span class=\"token punctuation\">,</span> E<span class=\"token punctuation\">,</span> G<span class=\"token punctuation\">,</span> G<span class=\"token punctuation\">,</span> gamma<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> Color<span class=\"token punctuation\">.</span>Brown<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 断面の作成</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">double</span></span> height <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// cm</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">double</span></span> width <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">double</span></span> thickness <span class=\"token operator\">=</span> <span class=\"token number\">2.2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">double</span></span> fillet <span class=\"token operator\">=</span> <span class=\"token number\">2.5</span> <span class=\"token operator\">*</span> thickness<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> croSec <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">CroSec_Box</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Box\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Box\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> material<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> thickness<span class=\"token punctuation\">,</span> thickness<span class=\"token punctuation\">,</span> thickness<span class=\"token punctuation\">,</span> fillet<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Beamを作成</span>\n        <span class=\"token comment\">// 入力は、Line、Id、CrossSection</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> nodes <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>Point3<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> elems <span class=\"token operator\">=</span> k3d<span class=\"token punctuation\">.</span>Part<span class=\"token punctuation\">.</span><span class=\"token function\">LineToBeam</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>Line3<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> L0 <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token string\">\"Column\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>CroSec<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span> croSec <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> logger<span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> nodes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 境界条件の作成</span>\n        <span class=\"token comment\">// 入力は、条件を指定するPoint3と各変位の拘束のBoolean</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> support <span class=\"token operator\">=</span> k3d<span class=\"token punctuation\">.</span>Support<span class=\"token punctuation\">.</span><span class=\"token function\">Support</span><span class=\"token punctuation\">(</span>p0<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">bool</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> supports <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>Support<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>support<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 荷重の作成</span>\n        <span class=\"token comment\">// 入力は、条件を指定するPoint3、荷重のベクトル、モーメントのベクトル、荷重ケース</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> pload <span class=\"token operator\">=</span> k3d<span class=\"token punctuation\">.</span>Load<span class=\"token punctuation\">.</span><span class=\"token function\">PointLoad</span><span class=\"token punctuation\">(</span>p1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> ploads <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>Load<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>pload<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\"><span class=\"token keyword\">double</span></span> mass<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 重量</span>\n        <span class=\"token class-name\">Point3</span> cog<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 重心</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> flag<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> info<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> model <span class=\"token operator\">=</span> k3d<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">.</span><span class=\"token function\">AssembleModel</span><span class=\"token punctuation\">(</span>elems<span class=\"token punctuation\">,</span> supports<span class=\"token punctuation\">,</span> ploads<span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> info<span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> mass<span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> cog<span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> info<span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 解析を実行</span>\n        <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">></span></span> maxDisps<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// m</span>\n        <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">></span></span> outG<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">></span></span> outComp<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> message<span class=\"token punctuation\">;</span>\n        model <span class=\"token operator\">=</span> k3d<span class=\"token punctuation\">.</span>Algorithms<span class=\"token punctuation\">.</span><span class=\"token function\">AnalyzeThI</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> maxDisps<span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> outG<span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> outComp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">Print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"max disp: \"</span> <span class=\"token operator\">+</span> maxDisps<span class=\"token punctuation\">.</span><span class=\"token function\">Max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        modelOut <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Karamba<span class=\"token punctuation\">.</span>GHopper<span class=\"token punctuation\">.</span>Models<span class=\"token punctuation\">.</span>GH_Model</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        maxDisp <span class=\"token operator\">=</span> maxDisps<span class=\"token punctuation\">.</span><span class=\"token function\">Max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>構造解析で形状をいじる</h2>\n<h3>片持ち梁の変更</h3>\n<p>片持ち梁を作成し、その応力が許容応力以内におさまる最小の断面にするものを作成します。断面は作成した断面リストの中から選択します。</p>\n<p><img src=\"./images/canti_opt.jpg\" alt=\"canti_opt\"></p>\n<h3>断面リストの作成</h3>\n<p>断面は karamba3d の CrossSectionRangeSelector コンポーネントを使用します。\nこのコンポーネントが出力する断面のリストから先程の条件を満たす断面サイズを決定するようにプログラムを作成します。\nkaramba3d のデフォルトの断面リストには日本の規格も含んでおり、JIS 規格がベースになっています。\n例えばメーカー品の断面を使用する場合は自分で追加できます。\n参考として SH と BCP を追加したものが Data/JP_CrossSectionValues.csv のデータになります。\nRead CrossSection Table From File コンポーネントでこれを読み込むことができます。</p>\n<p>断面リストのフォーマットは以下のようになっています。</p>\n<table>\n<thead>\n<tr>\n<th>ラベル</th>\n<th>country</th>\n<th>family</th>\n<th>name</th>\n<th>shape</th>\n<th>h</th>\n<th>t_web</th>\n<th>b_upper</th>\n<th>t_upper</th>\n<th>b_lower</th>\n<th>t_lower</th>\n<th>r</th>\n<th>ex</th>\n<th>ey</th>\n<th>ez</th>\n<th>zs</th>\n<th>A</th>\n<th>Ay</th>\n<th>Az</th>\n<th>Iy</th>\n<th>Wy</th>\n<th>Wply</th>\n<th>i_y</th>\n<th>Iz</th>\n<th>Wz</th>\n<th>Wplz</th>\n<th>i_z</th>\n<th>It</th>\n<th>Wt</th>\n<th>Cw</th>\n<th>alpha_y</th>\n<th>alpha_z</th>\n<th>alpha_LT</th>\n<th>Product</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>単位</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n<td>mm</td>\n<td>mm</td>\n<td>mm</td>\n<td>mm</td>\n<td>mm</td>\n<td>mm</td>\n<td>mm</td>\n<td>cm</td>\n<td>cm</td>\n<td>cm</td>\n<td>cm</td>\n<td>cm2</td>\n<td>cm2</td>\n<td>cm2</td>\n<td>cm4</td>\n<td>cm3</td>\n<td>cm3</td>\n<td>cm</td>\n<td>cm4</td>\n<td>cm3</td>\n<td>cm3</td>\n<td>cm</td>\n<td>cm4</td>\n<td>cm3</td>\n<td>cm6</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n<td>-</td>\n</tr>\n<tr>\n<td>例</td>\n<td>Japan</td>\n<td>H</td>\n<td>H 100 x 100 x 6 x 8</td>\n<td>I</td>\n<td>100</td>\n<td>6</td>\n<td>100</td>\n<td>8</td>\n<td></td>\n<td></td>\n<td>8</td>\n<td></td>\n<td></td>\n<td></td>\n<td>5</td>\n<td>21.59</td>\n<td>16.55</td>\n<td>5.04</td>\n<td>378</td>\n<td>75.6</td>\n<td>86.4</td>\n<td>4.18</td>\n<td>134</td>\n<td>26.7</td>\n<td>41</td>\n<td>2.49</td>\n<td>4.91</td>\n<td>6.14</td>\n<td>2820</td>\n<td>0.34</td>\n<td>0.49</td>\n<td>0.34</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<h4>C#Script の内容</h4>\n<p>断面リストの取得に失敗すると karamba3d のデフォルトの断面である RO114.3/4 になるので、出力がおかしいと思った場合は確認してください。</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cs line-numbers\"><code class=\"language-cs\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Linq</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Karamba<span class=\"token punctuation\">.</span>Models</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Karamba<span class=\"token punctuation\">.</span>CrossSections</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Karamba<span class=\"token punctuation\">.</span>Elements</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Karamba<span class=\"token punctuation\">.</span>Results</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Script_Instance</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">GH_ScriptInstance</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">RunScript</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> modelIn<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">object</span><span class=\"token punctuation\">></span></span> croSecsIn<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> nIter<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> lcInd<span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> <span class=\"token class-name\"><span class=\"token keyword\">object</span></span> modelOut<span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> <span class=\"token class-name\"><span class=\"token keyword\">object</span></span> dispOut<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// modelIn と croSecIn は object 型として入力されているので、</span>\n      <span class=\"token comment\">// ここで karamba3d の型にキャスト</span>\n      <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> model <span class=\"token operator\">=</span> modelIn <span class=\"token keyword\">as</span> <span class=\"token class-name\">Model</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> croSecs <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>CroSec_Beam<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>croSecsIn<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      croSecs<span class=\"token punctuation\">.</span><span class=\"token function\">AddRange</span><span class=\"token punctuation\">(</span>croSecsIn<span class=\"token punctuation\">.</span><span class=\"token function\">Select</span><span class=\"token punctuation\">(</span>item <span class=\"token operator\">=></span> item <span class=\"token keyword\">as</span> <span class=\"token class-name\">CroSec_Beam</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> k3d <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">KarambaCommon<span class=\"token punctuation\">.</span>Toolkit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">></span></span> maxDisp<span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">></span></span> outG<span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">></span></span> outComp<span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> message<span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> N<span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> V<span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> M<span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// nIterの分だけ断面の収束計算を行う</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> nIter<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 最初に解析を実行</span>\n        model <span class=\"token operator\">=</span> k3d<span class=\"token punctuation\">.</span>Algorithms<span class=\"token punctuation\">.</span><span class=\"token function\">AnalyzeThI</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> maxDisp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> outG<span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> outComp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// ここから各要素の応力を取得してそれに対して断面の検討を行う</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> elemInd <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> elemInd <span class=\"token operator\">&lt;</span> model<span class=\"token punctuation\">.</span>elems<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">;</span> elemInd<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n          <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> beam <span class=\"token operator\">=</span> model<span class=\"token punctuation\">.</span>elems<span class=\"token punctuation\">[</span>elemInd<span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span> <span class=\"token class-name\">ModelBeam</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>beam <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\n          <span class=\"token comment\">// 要素の応力を取得</span>\n          BeamResultantForces<span class=\"token punctuation\">.</span><span class=\"token function\">solve</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>elemInd<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> lcInd<span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> N<span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> V<span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> M<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n          <span class=\"token comment\">// 断面検定</span>\n          <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> croSec <span class=\"token keyword\">in</span> croSecs<span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">{</span>\n            beam<span class=\"token punctuation\">.</span>crosec <span class=\"token operator\">=</span> croSec<span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> maxSigma <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">Abs</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">[</span>lcInd<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> croSec<span class=\"token punctuation\">.</span>A <span class=\"token operator\">+</span> M<span class=\"token punctuation\">[</span>lcInd<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> croSec<span class=\"token punctuation\">.</span>Wely_z_pos<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>maxSigma <span class=\"token operator\">&lt;</span> croSec<span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span><span class=\"token function\">fy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n              <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 断面が許容応力以下になったら断面の変更を終了</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// ここまでの処理で変更した断面を反映させて、解析モデルを再生成</span>\n        model<span class=\"token punctuation\">.</span><span class=\"token function\">initMaterialCroSecLists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        model<span class=\"token punctuation\">.</span>febmodel <span class=\"token operator\">=</span> model<span class=\"token punctuation\">.</span><span class=\"token function\">buildFEModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 次のステップへ</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token comment\">// 最終モデルの確認用に最後の解析実行</span>\n      model <span class=\"token operator\">=</span> k3d<span class=\"token punctuation\">.</span>Algorithms<span class=\"token punctuation\">.</span><span class=\"token function\">AnalyzeThI</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> maxDisp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> outG<span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> outComp<span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// 結果の出力</span>\n      dispOut <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">GH_Number</span><span class=\"token punctuation\">(</span>maxDisp<span class=\"token punctuation\">[</span>lcInd<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      modelOut <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Karamba<span class=\"token punctuation\">.</span>GHopper<span class=\"token punctuation\">.</span>Models<span class=\"token punctuation\">.</span>GH_Model</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>ちなみに</h3>\n<p>この断面最適化は karamba3d の有料版だとコンポーネントとしてはじめから使用できます。\nコンポーネントに対しては制限がありますが、SDK を使う場合はクラスやメソッドに対して制限がかかっているわけではないようです。</p>\n<h2>NextStep</h2>\n<p>Scripting Guide Examples の CrossSectionOptimization.gh と ModelCreation.gh をベースにしたものです。他にもたくさんの参考例が含まれていますので、興味がある方は中身を確認してください。</p>","excerpt":"はじめに Tokyo AEC Industry Dev Group で 2020/10/10 に行われたハンズオンの資料です。\nTokyo AEC Industry Dev Group についての詳細は以下を参照してください。 Tokyo AEC Industry Dev Group Meetup Site…","frontmatter":{"date":"10 October, 2020","path":"/articles/structural-analysis-coding-with-karamba3d","title":"Structural Analysis Coding with Karamba3d","article_tags":["Karamba3D","CSharp"]},"fields":{"readingTime":{"text":"5 min read"},"slug":"/Structural-Analysis-coding-with-karamba3d/Structural-Analysis-coding-with-karamba3d/","collection":"article"}},"site":{"siteMetadata":{"title":"構造とデジタル_最新版_Final(1)"}}},"pageContext":{}},"staticQueryHashes":["32046230","3649515864"]}