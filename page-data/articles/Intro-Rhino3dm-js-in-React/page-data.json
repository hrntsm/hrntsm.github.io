{"componentChunkName":"component---src-templates-article-post-js","path":"/articles/Intro-Rhino3dm-js-in-React","result":{"data":{"markdownRemark":{"html":"<h2>はじめに</h2>\n<p>この記事は、<a href=\"./Intro-Rhino3dm-js-in-html\">Rhino3dm.js の使い方 〜HTML 編〜</a> の続きの記事になります。\nそもそも Rhino3dm.js で何ができるかは上記の記事を見てください。</p>\n<h3>参考データ</h3>\n<p>参考のデータは以下の GitHub にアップしているので適宜参照してください。</p>\n<ul>\n<li><a href=\"https://github.com/hrntsm/Introduction-Rhino3dmjs\">hrntsm/Introduction-Rhino3dmjs</a></li>\n</ul>\n<p>作成したサイトは以下に公開しているので、完成品を確認したい方は参照してください。</p>\n<ul>\n<li><a href=\"https://hiron.dev/Introduction-Rhino3dmjs/\">Rhino3dm.js Intro Page</a></li>\n</ul>\n<h3>必要な環境</h3>\n<ol>\n<li>Node.js</li>\n<li>VSCode</li>\n</ol>\n<h2>REACT を触ってみる</h2>\n<p>Node.js がインストールされている環境で、ターミナルに以下のように打ち込むと React のサンプルのデータが作成されます。\nここでは <code class=\"language-text\">--template typescript</code> として TypeScript として作成していますが、\ntemplate を指定しないと JavaScript で作成されます。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">npx create-react-app rhino-react --template typescript</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>問題なくプロジェクトが作成されたら、\n以下を打ち込むとページがビルドされサンプルの React のロゴがくるくる回っているページが表示されます。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">npm</span> start</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>これで簡単な React をつかったサイトが作成されました。</p>\n<h2>半径を表示する</h2>\n<p>前の記事で扱っていた HTML ファイルに直接書いていたときと同様に Rhino3dm を使って球を作成しましょう。</p>\n<p>まず Index.tsx ファイルを以下のように書き換えます。\nRhino3dm の wasm を読み込む必要があるため、以下のように cdn を使って読み込んでいます。</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ts line-numbers\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> StrictMode <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom\"</span>\n\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">\"./App\"</span>\n\n<span class=\"token keyword\">const</span> rootElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> script <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"script\"</span><span class=\"token punctuation\">)</span>\nscript<span class=\"token punctuation\">.</span>src <span class=\"token operator\">=</span> <span class=\"token string\">\"https://cdn.jsdelivr.net/npm/rhino3dm@0.12.0/rhino3dm.min.js\"</span>\nscript<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"load\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>StrictMode<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>StrictMode<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    rootElement\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\ndocument<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>次に App.ts を以下のように書き換えます。</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ts line-numbers\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useEffect<span class=\"token punctuation\">,</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> RhinoModule<span class=\"token punctuation\">,</span> Sphere <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"rhino3dm\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"./App.css\"</span>\n\n<span class=\"token keyword\">declare</span> global <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Window</span> <span class=\"token punctuation\">{</span>\n    rhino3dm<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>sphere<span class=\"token punctuation\">,</span> setSphere<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">useState</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>Sphere<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">rhino3dm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>Module<span class=\"token operator\">:</span> RhinoModule<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Module</span><span class=\"token punctuation\">.</span><span class=\"token function\">Sphere</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"App\"</span><span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span>sphere <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">sphere diameter is: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>sphere<span class=\"token punctuation\">.</span>diameter<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>これで <code class=\"language-text\">npm start</code> で動作を確認するとブラウザに球の直径が表示されます。</p>\n<h2>UI を作成する</h2>\n<p>ブラウザにただ結果のテキストが表示されるだけでは\nReact を使っている利点があまり活かせていないのでがないので、簡単に UI を整えてみます。\nここでは mui というライブラリを使って見た目を整えていきます。</p>\n<p>公式サイト</p>\n<ul>\n<li><a href=\"https://mui.com/\">https://mui.com/</a></li>\n</ul>\n<h3>タイトルバーをつける</h3>\n<p>ページの上にタイトルバーをつけてみます。\nタイトルバーには mui の <a href=\"https://mui.com/components/app-bar/\">App Bar</a> を使って作ります。</p>\n<p>新しく AppBar.tsx というファイルを作成し以下のコードを入れてください。</p>\n<p>基本的には公式サイトから取得できるサンプルのコードを使用し、若干内容を変えています。\nここでは最初に出てくる Basic App Bar を使います。</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ts line-numbers\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> AppBar <span class=\"token keyword\">from</span> <span class=\"token string\">\"@mui/material/AppBar\"</span>\n<span class=\"token keyword\">import</span> Box <span class=\"token keyword\">from</span> <span class=\"token string\">\"@mui/material/Box\"</span>\n<span class=\"token keyword\">import</span> Toolbar <span class=\"token keyword\">from</span> <span class=\"token string\">\"@mui/material/Toolbar\"</span>\n<span class=\"token keyword\">import</span> Typography <span class=\"token keyword\">from</span> <span class=\"token string\">\"@mui/material/Typography\"</span>\n<span class=\"token keyword\">import</span> Button <span class=\"token keyword\">from</span> <span class=\"token string\">\"@mui/material/Button\"</span>\n<span class=\"token keyword\">import</span> IconButton <span class=\"token keyword\">from</span> <span class=\"token string\">\"@mui/material/IconButton\"</span>\n<span class=\"token keyword\">import</span> MenuIcon <span class=\"token keyword\">from</span> <span class=\"token string\">\"@mui/icons-material/Menu\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">ButtonAppBar</span><span class=\"token punctuation\">(</span>prop<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>Box sx<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> flexGrow<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>AppBar position<span class=\"token operator\">=</span><span class=\"token string\">\"static\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Toolbar<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>IconButton\n            size<span class=\"token operator\">=</span><span class=\"token string\">\"large\"</span>\n            edge<span class=\"token operator\">=</span><span class=\"token string\">\"start\"</span>\n            color<span class=\"token operator\">=</span><span class=\"token string\">\"inherit\"</span>\n            aria<span class=\"token operator\">-</span>label<span class=\"token operator\">=</span><span class=\"token string\">\"menu\"</span>\n            sx<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> mr<span class=\"token operator\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>MenuIcon <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>IconButton<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Typography variant<span class=\"token operator\">=</span><span class=\"token string\">\"h6\"</span> component<span class=\"token operator\">=</span><span class=\"token string\">\"div\"</span> sx<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> flexGrow<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n            <span class=\"token punctuation\">{</span>prop<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Typography<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>Button color<span class=\"token operator\">=</span><span class=\"token string\">\"inherit\"</span><span class=\"token operator\">></span>Login<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Toolbar<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>AppBar<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Box<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>今回使わない部分もありますが、将来のために残しておきます。</p>\n<p>公式のサンプルと異なる点は、prop を受け取って表示するタイトルを変更できるようにしています。</p>\n<p>作成した AppBar を App.tsx に追加して表示されるようにしましょう。\nそれに加えて今後拡張しやすくするため、球を作成している部分を CreateSphere 関数として分割します。</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ts line-numbers\"><code class=\"language-ts\"><span class=\"token keyword\">function</span> <span class=\"token function\">CreateSphere</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>sphere<span class=\"token punctuation\">,</span> setSphere<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">useState</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>Sphere<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">rhino3dm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>Module<span class=\"token operator\">:</span> RhinoModule<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Module</span><span class=\"token punctuation\">.</span><span class=\"token function\">Sphere</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"App\"</span><span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span>sphere <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">sphere diameter is: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>sphere<span class=\"token punctuation\">.</span>diameter<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>ButtonAppBar title<span class=\"token operator\">=</span><span class=\"token string\">\"Rhino3dm Test Project\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>CreateSphere <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>スライダーをつける</h3>\n<p>事前に書いたコードの指定された通りの球が作成されては UI として十分ではないため、\nスライダーをつけてブラウザから球の半径を変えられるようにします。</p>\n<p>スライダーは mui の <a href=\"https://mui.com/components/slider/\">Slider</a> を使って作成します。</p>\n<p>タイトルバーは別の tsx ファイルを作成しましたが、\nこちらは球の作成に紐付いているので、CreateSphere 内に記入することにします。</p>\n<p>これまでは useEffect を使ってページを開いたときに球を作成していましたが、\nスライダーを動かしたときにモデルを作成したいので、useEffect を削除します。</p>\n<p>そして、スライダーの値が変化したときのイベントを受け取って動く onChange を作成します。\n表示される文字列は、最初は球が作成されていないのでエラーにならないよう、三項演算子を使って値を切り替えるようにしています。</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ts line-numbers\"><code class=\"language-ts\"><span class=\"token keyword\">function</span> <span class=\"token function\">CreateSphere</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>sphere<span class=\"token punctuation\">,</span> setSphere<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">useState</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>Sphere<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    window<span class=\"token punctuation\">.</span><span class=\"token function\">rhino3dm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>Module<span class=\"token operator\">:</span> RhinoModule<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Module</span><span class=\"token punctuation\">.</span><span class=\"token function\">Sphere</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>sphere<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span>sphere\n          <span class=\"token operator\">?</span> <span class=\"token string\">\"生成された Sphere の直径は \"</span> <span class=\"token operator\">+</span> sphere<span class=\"token punctuation\">.</span>diameter <span class=\"token operator\">+</span> <span class=\"token string\">\" です。\"</span>\n          <span class=\"token operator\">:</span> <span class=\"token string\">\"Sphere はまだ作成されていません\"</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Box width<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">300</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Slider\n          defaultValue<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">16</span><span class=\"token punctuation\">}</span>\n          valueLabelDisplay<span class=\"token operator\">=</span><span class=\"token string\">\"auto\"</span>\n          onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>onChange<span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Box<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>作ったファイルをダウンロードする</h3>\n<p>作成したモデルがちゃんと想定通りに作成されているか確認するために、モデルをダウンロードできるようにします。</p>\n<p>ここでは mui の <a href=\"https://mui.com/components/buttons/\">Button</a> を使って作成します。ボタンをクリックした際に onClick が呼ばれるようにしています。</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ts line-numbers\"><code class=\"language-ts\"><span class=\"token operator\">&lt;</span>Button variant<span class=\"token operator\">=</span><span class=\"token string\">\"contained\"</span> onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>onClick<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n  Download\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>onClick は HTML で作成したときの内容とほぼ同じです。\nTS で書くために型を追記したり、Hook を使うために sphere の値を使ったりしています。</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ts line-numbers\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  window<span class=\"token punctuation\">.</span><span class=\"token function\">rhino3dm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>Module<span class=\"token operator\">:</span> RhinoModule<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> doc<span class=\"token operator\">:</span> File3dm <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Module</span><span class=\"token punctuation\">.</span><span class=\"token function\">File3dm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sphere<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> item <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Module</span><span class=\"token punctuation\">.</span><span class=\"token function\">Sphere</span><span class=\"token punctuation\">(</span>\n        sphere<span class=\"token punctuation\">.</span>center <span class=\"token keyword\">as</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        sphere<span class=\"token punctuation\">.</span>radius <span class=\"token keyword\">as</span> <span class=\"token builtin\">number</span>\n      <span class=\"token punctuation\">)</span>\n      <span class=\"token comment\">// @ts-ignore</span>\n      doc<span class=\"token punctuation\">.</span><span class=\"token function\">objects</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addSphere</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n      <span class=\"token function\">saveByteArray</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sphere.3dm\"</span><span class=\"token punctuation\">,</span> doc<span class=\"token punctuation\">.</span><span class=\"token function\">toByteArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sphere not created\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">saveByteArray</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>fileName<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> byte<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> blob <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Blob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>byte<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> <span class=\"token string\">\"application/octect-stream\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">let</span> link <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span>\n  link<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>blob<span class=\"token punctuation\">)</span>\n  link<span class=\"token punctuation\">.</span>download <span class=\"token operator\">=</span> fileName\n  link<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span>sphere\n        <span class=\"token operator\">?</span> <span class=\"token string\">\"生成された Sphere の直径は \"</span> <span class=\"token operator\">+</span> sphere<span class=\"token punctuation\">.</span>diameter <span class=\"token operator\">+</span> <span class=\"token string\">\" です。\"</span>\n        <span class=\"token operator\">:</span> <span class=\"token string\">\"Sphere はまだ作成されていません\"</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Box width<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">300</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Slider defaultValue<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">16</span><span class=\"token punctuation\">}</span> valueLabelDisplay<span class=\"token operator\">=</span><span class=\"token string\">\"auto\"</span> onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>onChange<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Box<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Button variant<span class=\"token operator\">=</span><span class=\"token string\">\"contained\"</span> onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>onClick<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      Download\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>これで Download ボタンを押すと 3dm ファイルがダウンロードされます。</p>\n<h2>既存のファイルを読み込む</h2>\n<p>HTML でやっていたときはファイルのパスを直接指定していましたが、\nここではボタンをつけてそこからファイルを選択できるようにします。</p>\n<h3>Input と Check ボタンを作る</h3>\n<p>まずファイルをアップロードしてそれを処理するための関数 CheckUploadedFile 関数を作成します。</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ts line-numbers\"><code class=\"language-ts\"><span class=\"token keyword\">function</span> <span class=\"token function\">CheckUploadedFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>file<span class=\"token punctuation\">,</span> setFile<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">useState</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>File<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setFile</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      window<span class=\"token punctuation\">.</span><span class=\"token function\">rhino3dm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>Module<span class=\"token operator\">:</span> RhinoModule<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> buffer<span class=\"token operator\">:</span> ArrayBuffer <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">arrayBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">const</span> arr<span class=\"token operator\">:</span> Uint8Array <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// @ts-ignore</span>\n        <span class=\"token keyword\">const</span> doc<span class=\"token operator\">:</span> File3dm <span class=\"token operator\">=</span> Module<span class=\"token punctuation\">.</span>File3dm<span class=\"token punctuation\">.</span><span class=\"token function\">fromByteArray</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span>\n        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h3<span class=\"token operator\">></span>Check Uploaded File<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h3<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"file\"</span> onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>onChange<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Button variant<span class=\"token operator\">=</span><span class=\"token string\">\"outlined\"</span> onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>onClick<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        Check\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>インプットしたあとにファイルをチェックするボタンは mui の Button を使っています。\n球を作ったときの Download ボタンと同じです。</p>\n<p>作成したものが表示されるように App 関数 の return を以下のようにします。</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ts line-numbers\"><code class=\"language-ts\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>ButtonAppBar title<span class=\"token operator\">=</span><span class=\"token string\">\"Rhino3dm.js Intro Page!!\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>CreateSphere <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>CheckUploadedFile <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>UserString を表示する表を作成する</h3>\n<p>今の設定では、onClick で最後の console にファイルの中身を表示しているだけでは UI には出てこないので、\nHTML の部分でやったように UserStrings を取得して表示できるようにします。UserString は複数の値が許容されている連想配列なので、表形式で表示します。</p>\n<p>表には mui の <a href=\"https://mui.com/components/tables/\">table</a> を使用します。</p>\n<p>UserString を table に書き込む UserStringTable.tsx を作成して以下のようにします。\n基本的には公式のサンプルを使っていますが、UserString を持っていない場合などにエラーにならないための処理を追加しています。</p>\n<p>表示するデータは prop.data で受け取るようにしているので、\n使う際には data に UserStrings を渡す形式にしています。</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ts line-numbers\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> Table <span class=\"token keyword\">from</span> <span class=\"token string\">\"@mui/material/Table\"</span>\n<span class=\"token keyword\">import</span> TableBody <span class=\"token keyword\">from</span> <span class=\"token string\">\"@mui/material/TableBody\"</span>\n<span class=\"token keyword\">import</span> TableCell <span class=\"token keyword\">from</span> <span class=\"token string\">\"@mui/material/TableCell\"</span>\n<span class=\"token keyword\">import</span> TableContainer <span class=\"token keyword\">from</span> <span class=\"token string\">\"@mui/material/TableContainer\"</span>\n<span class=\"token keyword\">import</span> TableHead <span class=\"token keyword\">from</span> <span class=\"token string\">\"@mui/material/TableHead\"</span>\n<span class=\"token keyword\">import</span> TableRow <span class=\"token keyword\">from</span> <span class=\"token string\">\"@mui/material/TableRow\"</span>\n<span class=\"token keyword\">import</span> Paper <span class=\"token keyword\">from</span> <span class=\"token string\">\"@mui/material/Paper\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">BasicTable</span><span class=\"token punctuation\">(</span>prop<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span>prop<span class=\"token punctuation\">.</span>data\n        <span class=\"token operator\">?</span> prop<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>row<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> gIndex<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n              <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token string\">\"Geometry Index:\"</span> <span class=\"token operator\">+</span> gIndex<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n              <span class=\"token operator\">&lt;</span>TableContainer sx<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> width<span class=\"token operator\">:</span> <span class=\"token number\">300</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Paper<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span>Table aria<span class=\"token operator\">-</span>label<span class=\"token operator\">=</span><span class=\"token string\">\"simple table\"</span><span class=\"token operator\">></span>\n                  <span class=\"token operator\">&lt;</span>TableHead<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span>TableRow<span class=\"token operator\">></span>\n                      <span class=\"token operator\">&lt;</span>TableCell<span class=\"token operator\">></span>Index<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TableCell<span class=\"token operator\">></span>\n                      <span class=\"token operator\">&lt;</span>TableCell align<span class=\"token operator\">=</span><span class=\"token string\">\"right\"</span><span class=\"token operator\">></span>Key<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TableCell<span class=\"token operator\">></span>\n                      <span class=\"token operator\">&lt;</span>TableCell align<span class=\"token operator\">=</span><span class=\"token string\">\"right\"</span><span class=\"token operator\">></span>Value<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TableCell<span class=\"token operator\">></span>\n                    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TableRow<span class=\"token operator\">></span>\n                  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TableHead<span class=\"token operator\">></span>\n                  <span class=\"token operator\">&lt;</span>TableBody<span class=\"token operator\">></span>\n                    <span class=\"token punctuation\">{</span>row<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>item<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n                      <span class=\"token operator\">&lt;</span>TableRow\n                        key<span class=\"token operator\">=</span><span class=\"token string\">\"geometry\"</span>\n                        sx<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n                          <span class=\"token string-property property\">\"&amp;:last-child td, &amp;:last-child th\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> border<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n                      <span class=\"token operator\">></span>\n                        <span class=\"token operator\">&lt;</span>TableCell component<span class=\"token operator\">=</span><span class=\"token string\">\"th\"</span> scope<span class=\"token operator\">=</span><span class=\"token string\">\"row\"</span><span class=\"token operator\">></span>\n                          <span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span>\n                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TableCell<span class=\"token operator\">></span>\n                        <span class=\"token operator\">&lt;</span>TableCell align<span class=\"token operator\">=</span><span class=\"token string\">\"right\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TableCell<span class=\"token operator\">></span>\n                        <span class=\"token operator\">&lt;</span>TableCell align<span class=\"token operator\">=</span><span class=\"token string\">\"right\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TableCell<span class=\"token operator\">></span>\n                      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TableRow<span class=\"token operator\">></span>\n                    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n                  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TableBody<span class=\"token operator\">></span>\n                <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Table<span class=\"token operator\">></span>\n              <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TableContainer<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>作ったものをまとめる</h3>\n<p>UserStringTable ができたのでそれを使って、読み込んだファイルの UserString が表示されるようにします。</p>\n<p>追加した事項は以下です。</p>\n<ul>\n<li>読み込んだ UserString を扱う Hooks を追加</li>\n<li>onClick で取得した doc を CreateUserStringList に渡す部分を追加</li>\n<li>doc から UserStrings を取得する CreateUserStringList を作成</li>\n<li>return 内に Table を表示するための BasicTable を追加</li>\n</ul>\n<p>うまく型の処理ができなかったので、@ts-ignore が多いのはごめんなさい</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-ts line-numbers\"><code class=\"language-ts\"><span class=\"token keyword\">function</span> <span class=\"token function\">CheckUploadedFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>file<span class=\"token punctuation\">,</span> setFile<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">useState</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>File<span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>userStrings<span class=\"token punctuation\">,</span> setUserStrings<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">useState</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>e<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setFile</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      window<span class=\"token punctuation\">.</span><span class=\"token function\">rhino3dm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>Module<span class=\"token operator\">:</span> RhinoModule<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> buffer<span class=\"token operator\">:</span> ArrayBuffer <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">arrayBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">const</span> arr<span class=\"token operator\">:</span> Uint8Array <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// @ts-ignore</span>\n        <span class=\"token keyword\">const</span> doc<span class=\"token operator\">:</span> File3dm <span class=\"token operator\">=</span> Module<span class=\"token punctuation\">.</span>File3dm<span class=\"token punctuation\">.</span><span class=\"token function\">fromByteArray</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span>\n        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">)</span>\n\n        <span class=\"token function\">CreateUserStringList</span><span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">CreateUserStringList</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>doc<span class=\"token operator\">:</span> File3dm<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> list<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// @ts-ignore</span>\n      <span class=\"token keyword\">const</span> objects<span class=\"token operator\">:</span> File3dmObjectTable <span class=\"token operator\">=</span> doc<span class=\"token punctuation\">.</span><span class=\"token function\">objects</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> objects<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// @ts-ignore</span>\n        <span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> objects<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// @ts-ignore</span>\n        list<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span><span class=\"token function\">attributes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getUserStrings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">setUserStrings</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h3<span class=\"token operator\">></span>Check Uploaded File<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h3<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"file\"</span> onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>onChange<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Button variant<span class=\"token operator\">=</span><span class=\"token string\">\"outlined\"</span> onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>onClick<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        Check\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>BasicTable data<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>userStrings<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Build して Deploy する</h2>\n<p>完成したページをデプロイしましょう。\nここでは GitHub Pages を使う場合の例をあげます。手順は以下です。</p>\n<ol>\n<li>package.json に <code class=\"language-text\">\"homepage\": \".\"</code> を追加</li>\n<li>ターミナルで <code class=\"language-text\">npm run build</code> を実行する</li>\n<li>ページが build フォルダに作成される</li>\n<li>フォルダ名を docs に変えて、ルートディレクトリに移動する</li>\n<li>GitHub にプッシュする</li>\n<li>GitHub Pages の設定から Source を今プッシュしたブランチの docs にする</li>\n<li>リポジトリのトップページの Environments を見ると作成したページのリンクがあるのでそこへ飛ぶ</li>\n</ol>\n<p>問題なくビルドされていれば以下のようなページが公開されます。</p>\n<ul>\n<li><a href=\"https://hiron.dev/Introduction-Rhino3dmjs/\">Rhino3dm.js Intro Page</a></li>\n</ul>\n<h2>まとめ</h2>\n<p>React と mui を使った簡単な UI を作って Rhino3dm を扱えるようにしました。\nモデルの可視化などは Threejs を使うとできたりするので、興味がある方はやってみてください。</p>","excerpt":"はじめに この記事は、Rhino3dm.js の使い方 〜HTML 編〜 の続きの記事になります。\nそもそも Rhino3dm.js で何ができるかは上記の記事を見てください。 参考データ 参考のデータは以下の GitHub にアップしているので適宜参照してください。 hrntsm/Introduction-Rhino…","frontmatter":{"date":"13 November, 2021","path":"/articles/Intro-Rhino3dm-js-in-React","title":"Rhino3dm.js の使い方 〜React編〜","article_tags":["Rhinoceros","TypeScript","React"]},"fields":{"readingTime":{"text":"6 min read"},"slug":"/rhino3dmjs-in-React/","collection":"article"}},"site":{"siteMetadata":{"title":"構造とデジタル_最新版_Final(1)"}}},"pageContext":{}},"staticQueryHashes":["32046230","3649515864"]}