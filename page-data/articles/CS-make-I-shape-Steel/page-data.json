{"componentChunkName":"component---src-templates-article-post-js","path":"/articles/CS-make-I-shape-Steel","result":{"data":{"markdownRemark":{"html":"<p>以前の記事では、単純梁の計算をするコンポーネントを作成しました。その際はすべてのパラメーターが手入力だったので、今回は H 形鋼を対象にして、解析に必要なパラメーターを計算し、出力するコンポーネントの作成を行います。</p>\n<p>また設定した形状の H 形鋼を Rhino 上への出力も併せて行います。</p>\n<p><a href=\"https://4.bp.blogspot.com/-zIDrpwCI2kA/WF4Ad2n6M6I/AAAAAAAABTQ/fnAo7AUH4UY8KRx2JSvsOfYDLjZ06c_5wCLcB/s1600/%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2597%25E3%2583%2581%25E3%2583%25A3.PNG\"><img src=\"https://4.bp.blogspot.com/-zIDrpwCI2kA/WF4Ad2n6M6I/AAAAAAAABTQ/fnAo7AUH4UY8KRx2JSvsOfYDLjZ06c_5wCLcB/s640/%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2597%25E3%2583%2581%25E3%2583%25A3.PNG\"></a></p>\n<p>初めに Rhino への出力の仕方から説明します。やることは実際の Rhino でサーフェスを作成することに非常に近いことをします。作成はフランジとウェブごとにサーフェスを作成するという方法で行っています。上フランジを例に説明します。  </p>\n<p>まず Point3d で、（x,y,z）の座標を持つ点を 3 点（UFp1、UFp2、UFp3）作成します。その後、その 3 点を通る平面として Plane（UFplane）を作成します。この平面が、サーフェスを作成する面となります。サーフェスは、入力される部材幅 B と部材長さ L をもとに平面のサーフェスとして作成します。ここでは、Interval を使用して、原点から対象に B の幅を持つものとしてします。</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cs line-numbers\"><code class=\"language-cs\"><span class=\"token comment\">// 上フランジのサーフェス作成</span>\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> UFp2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point3d</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> H <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> UFp1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point3d</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> H <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> UFp3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point3d</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> H <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> UFplane <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Plane</span><span class=\"token punctuation\">(</span>UFp1<span class=\"token punctuation\">,</span> UFp2<span class=\"token punctuation\">,</span> UFp3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> upper_flange <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">PlaneSurface</span><span class=\"token punctuation\">(</span>UFplane<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Interval</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>B <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> B <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Interval</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> L<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>次に、解析用諸元の計算と出力の設定です。断面二次モーメントと断面係数は、書いてある通りです。基本的なところですが、C#の割り算は、double 型等にしても小数点以下を明示しないと整数での割り算になって、小数点以下はなくなってしまうので注意しましょう。  </p>\n<p>出力に際して、パラメータを一つの引数でコンポーネント間でやり取りしたいので、ここでは List 型の Params を定義し、その中に、部材長さ、断面二次モーメント、断面係数を格納するようにしています。サーフェスはとりあえず出力するだけなので、リストではなくただの配列としてまとめています。  </p>\n<p>最後の出力設定では、以前は SetData としていましたが、今回は List を出力するので、SetDataList として出力しています。</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cs line-numbers\"><code class=\"language-cs\"><span class=\"token comment\">// 解析用パラメータの計算</span>\nIy <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> <span class=\"token number\">12.0</span> <span class=\"token operator\">*</span> B <span class=\"token operator\">*</span> H <span class=\"token operator\">*</span> H <span class=\"token operator\">*</span> H<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> <span class=\"token number\">12.0</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>B <span class=\"token operator\">-</span> tw<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>H <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> tf<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>H <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> tf<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>H <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> tf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nZy <span class=\"token operator\">=</span> Iy <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>H <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// ひとまとめにするため List で作成</span>\n<span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">></span></span> Params <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nParams<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//  部材長さ</span>\nParams<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>Iy<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span> <span class=\"token comment\">//  断面二次モーメント</span>\nParams<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>Zy<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span> <span class=\"token comment\">//  断面係数</span>\n\n<span class=\"token comment\">// モデルはRhino状に出力するだけなので、とりあえず配列でまとめる</span>\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> model <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">PlaneSurface</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\nmodel<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> upper_flange<span class=\"token punctuation\">;</span>\nmodel<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> bottom_flange<span class=\"token punctuation\">;</span>\nmodel<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> web<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// まとめての出力なので、SetDataList で出力</span>\nDA<span class=\"token punctuation\">.</span><span class=\"token function\">SetDataList</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nDA<span class=\"token punctuation\">.</span><span class=\"token function\">SetDataList</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> Params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>これで H 型鋼の諸元を出力するコンポーネントの作成は終わりです。 </p>\n<p>次に単純梁の計算を行うコンポーネントの修正を行います。前回ここにパラメータを入力していた部分を一括して入力を受ける Param という入力に変更します。  </p>\n<p>List 型のデータを受け取るので、最初の RegisterInputParams の個所で、Param を登録する箇所では、  </p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cs line-numbers\"><code class=\"language-cs\">pManager<span class=\"token punctuation\">.</span><span class=\"token function\">AddNumberParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Analysis Parametar\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Param\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Input Analysis Parameter\"</span><span class=\"token punctuation\">,</span> GH_ParamAccess<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>として、item ではなく list としています。同様に以前 GetData としていた箇所も、GetDataList として List 型のデータを受け取る形としています。</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cs line-numbers\"><code class=\"language-cs\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">RegisterInputParams</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GH_InputParamManager</span> pManager<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    pManager<span class=\"token punctuation\">.</span><span class=\"token function\">AddNumberParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Analysis Parametar\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Param\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Input Analysis Parameter\"</span><span class=\"token punctuation\">,</span> GH_ParamAccess<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    pManager<span class=\"token punctuation\">.</span><span class=\"token function\">AddNumberParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Load\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"P\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Centralized load (kN)\"</span><span class=\"token punctuation\">,</span> GH_ParamAccess<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    pManager<span class=\"token punctuation\">.</span><span class=\"token function\">AddNumberParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Young's modulus\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"E\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Young's modulus (N/mm^2)\"</span><span class=\"token punctuation\">,</span> GH_ParamAccess<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">SolveInstance</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IGH_DataAccess</span> DA<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// input</span>\n    <span class=\"token comment\">// パラメータはひとまとめにするため、List にまとめる</span>\n    <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">></span></span> Param <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Paramは List なので、GetDataList とする。</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>DA<span class=\"token punctuation\">.</span><span class=\"token function\">GetDataList</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>  Param <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>DA<span class=\"token punctuation\">.</span><span class=\"token function\">GetData</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> P<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>DA<span class=\"token punctuation\">.</span><span class=\"token function\">GetData</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> E<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>完成したコード全体は以下のようになります。</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cs line-numbers\"><code class=\"language-cs\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Grasshopper<span class=\"token punctuation\">.</span>Kernel</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Rhino<span class=\"token punctuation\">.</span>Geometry</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">SBAnalysis</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SBComponent</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">GH_Component</span></span>\n    <span class=\"token punctuation\">{</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token function\">SBComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \n            <span class=\"token punctuation\">:</span> <span class=\"token keyword\">base</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SimpleBeamAnalysis\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"SB Analysis\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"calculate sinmple beam\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rgkr\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Simple-beam\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">RegisterInputParams</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GH_InputParamManager</span> pManager<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            pManager<span class=\"token punctuation\">.</span><span class=\"token function\">AddNumberParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Analysis Parametar\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Param\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Input Analysis Parameter\"</span><span class=\"token punctuation\">,</span> GH_ParamAccess<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            pManager<span class=\"token punctuation\">.</span><span class=\"token function\">AddNumberParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Load\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"P\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Centralized load (kN)\"</span><span class=\"token punctuation\">,</span> GH_ParamAccess<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            pManager<span class=\"token punctuation\">.</span><span class=\"token function\">AddNumberParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Young's modulus\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"E\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Young's modulus (N/mm^2)\"</span><span class=\"token punctuation\">,</span> GH_ParamAccess<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">RegisterOutputParams</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GH_OutputParamManager</span> pManager<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            pManager<span class=\"token punctuation\">.</span><span class=\"token function\">AddNumberParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bending Moment\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"M\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"output max bending moment(kNm)\"</span><span class=\"token punctuation\">,</span> GH_ParamAccess<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            pManager<span class=\"token punctuation\">.</span><span class=\"token function\">AddNumberParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Bending Stress\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Sig\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"output max bending stress (N/mm^2)\"</span><span class=\"token punctuation\">,</span> GH_ParamAccess<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            pManager<span class=\"token punctuation\">.</span><span class=\"token function\">AddNumberParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Deformation\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"D\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"output max deformation(mm)\"</span><span class=\"token punctuation\">,</span> GH_ParamAccess<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">SolveInstance</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IGH_DataAccess</span> DA<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// input</span>\n            <span class=\"token comment\">// パラメータはひとまとめにするため、List にまとめる</span>\n            <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">></span></span> Param <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">double</span></span> P <span class=\"token operator\">=</span> <span class=\"token keyword\">double</span><span class=\"token punctuation\">.</span>NaN<span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">double</span></span> E <span class=\"token operator\">=</span> <span class=\"token keyword\">double</span><span class=\"token punctuation\">.</span>NaN<span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// output</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">double</span></span> M <span class=\"token operator\">=</span> <span class=\"token keyword\">double</span><span class=\"token punctuation\">.</span>NaN<span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">double</span></span> Sig <span class=\"token operator\">=</span> <span class=\"token keyword\">double</span><span class=\"token punctuation\">.</span>NaN<span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">double</span></span> D <span class=\"token operator\">=</span> <span class=\"token keyword\">double</span><span class=\"token punctuation\">.</span>NaN<span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">double</span></span> L<span class=\"token punctuation\">,</span> Iy<span class=\"token punctuation\">,</span> Zy<span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// Paramは List なので、GetDataList とする。</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>DA<span class=\"token punctuation\">.</span><span class=\"token function\">GetDataList</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>  Param <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>DA<span class=\"token punctuation\">.</span><span class=\"token function\">GetData</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> P<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>DA<span class=\"token punctuation\">.</span><span class=\"token function\">GetData</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> E<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n            L <span class=\"token operator\">=</span> Param<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            Iy <span class=\"token operator\">=</span> Param<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            Zy <span class=\"token operator\">=</span> Param<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n            M <span class=\"token operator\">=</span> P <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>L<span class=\"token operator\">/</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n            Sig <span class=\"token operator\">=</span> M <span class=\"token operator\">*</span> <span class=\"token number\">1000000</span> <span class=\"token operator\">/</span> Zy<span class=\"token punctuation\">;</span>\n            D <span class=\"token operator\">=</span> P<span class=\"token operator\">*</span><span class=\"token number\">1000</span><span class=\"token operator\">*</span>L<span class=\"token operator\">*</span>L<span class=\"token operator\">*</span>L<span class=\"token operator\">/</span><span class=\"token punctuation\">(</span><span class=\"token number\">48</span><span class=\"token operator\">*</span>E<span class=\"token operator\">*</span>Iy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                      \n            <span class=\"token comment\">// 出力設定</span>\n            DA<span class=\"token punctuation\">.</span><span class=\"token function\">SetData</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> M<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            DA<span class=\"token punctuation\">.</span><span class=\"token function\">SetData</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> Sig<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            DA<span class=\"token punctuation\">.</span><span class=\"token function\">SetData</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> D<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\">Guid</span> ComponentGuid\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">get</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Guid</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"419c3a3a-cc48-4717-8cef-5f5647a5ecfc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">H_Shape_Model</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">H_Shape_Model</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">GH_Component</span></span>\n    <span class=\"token punctuation\">{</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token function\">H_Shape_Model</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">base</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Make H Shape Model\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"H Steel\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Display H Shape Model\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rgkr\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"H-Shape\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">RegisterInputParams</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GH_InputParamManager</span> pManager<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            pManager<span class=\"token punctuation\">.</span><span class=\"token function\">AddNumberParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Width\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Model Width (mm)\"</span><span class=\"token punctuation\">,</span> GH_ParamAccess<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            pManager<span class=\"token punctuation\">.</span><span class=\"token function\">AddNumberParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Height\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"H\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Model High (mm)\"</span><span class=\"token punctuation\">,</span> GH_ParamAccess<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            pManager<span class=\"token punctuation\">.</span><span class=\"token function\">AddNumberParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Web Thickness\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"tw\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Web Thickness (mm)\"</span><span class=\"token punctuation\">,</span> GH_ParamAccess<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            pManager<span class=\"token punctuation\">.</span><span class=\"token function\">AddNumberParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Flange Thickness\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"tf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Flange Thickness (mm)\"</span><span class=\"token punctuation\">,</span> GH_ParamAccess<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            pManager<span class=\"token punctuation\">.</span><span class=\"token function\">AddNumberParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Length\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"L\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Model Length (mm)\"</span><span class=\"token punctuation\">,</span> GH_ParamAccess<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">RegisterOutputParams</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GH_OutputParamManager</span> pManager<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            pManager<span class=\"token punctuation\">.</span><span class=\"token function\">AddSurfaceParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"View Model\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"model\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"output Model\"</span><span class=\"token punctuation\">,</span> GH_ParamAccess<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            pManager<span class=\"token punctuation\">.</span><span class=\"token function\">AddNumberParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Analysis Parametar\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Param\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"output Analysis Parameter\"</span><span class=\"token punctuation\">,</span> GH_ParamAccess<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">SolveInstance</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IGH_DataAccess</span> DA<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// 引数設定</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">double</span></span> B <span class=\"token operator\">=</span> <span class=\"token keyword\">double</span><span class=\"token punctuation\">.</span>NaN<span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">double</span></span> H <span class=\"token operator\">=</span> <span class=\"token keyword\">double</span><span class=\"token punctuation\">.</span>NaN<span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">double</span></span> L <span class=\"token operator\">=</span> <span class=\"token keyword\">double</span><span class=\"token punctuation\">.</span>NaN<span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">double</span></span> tw <span class=\"token operator\">=</span> <span class=\"token keyword\">double</span><span class=\"token punctuation\">.</span>NaN<span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">double</span></span> tf <span class=\"token operator\">=</span> <span class=\"token keyword\">double</span><span class=\"token punctuation\">.</span>NaN<span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">double</span></span> Iy<span class=\"token punctuation\">,</span> Zy<span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// 入力設定</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>DA<span class=\"token punctuation\">.</span><span class=\"token function\">GetData</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>DA<span class=\"token punctuation\">.</span><span class=\"token function\">GetData</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> H<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>DA<span class=\"token punctuation\">.</span><span class=\"token function\">GetData</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> tw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>DA<span class=\"token punctuation\">.</span><span class=\"token function\">GetData</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> tf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>DA<span class=\"token punctuation\">.</span><span class=\"token function\">GetData</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> L<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n            <span class=\"token comment\">// 原点の作成</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> Ori <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point3d</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// 上フランジのサーフェス作成</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> UFp1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point3d</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> H <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> UFp2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point3d</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> H <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> UFp3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point3d</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> H <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> UFplane <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Plane</span><span class=\"token punctuation\">(</span>UFp1<span class=\"token punctuation\">,</span> UFp2<span class=\"token punctuation\">,</span> UFp3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> upper_flange <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">PlaneSurface</span><span class=\"token punctuation\">(</span>UFplane<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Interval</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>B <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> B <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Interval</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> L<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// 下フランジのサーフェス作成</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> BFp1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point3d</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>H <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> BFp2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point3d</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>H <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> BFp3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point3d</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>H <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> BFplane <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Plane</span><span class=\"token punctuation\">(</span>BFp1<span class=\"token punctuation\">,</span> BFp2<span class=\"token punctuation\">,</span> BFp3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> bottom_flange <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">PlaneSurface</span><span class=\"token punctuation\">(</span>BFplane<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Interval</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>B <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> B <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Interval</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> L<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// ウェブのサーフェス作成</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> Wp1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point3d</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> Wp2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point3d</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> Wp3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Point3d</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> Wplane <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Plane</span><span class=\"token punctuation\">(</span>Wp1<span class=\"token punctuation\">,</span> Wp2<span class=\"token punctuation\">,</span> Wp3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> web <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">PlaneSurface</span><span class=\"token punctuation\">(</span>Wplane<span class=\"token punctuation\">,</span>  <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Interval</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>H <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> H <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Interval</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> L<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// 解析用パラメータの計算</span>\n            Iy <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> <span class=\"token number\">12.0</span> <span class=\"token operator\">*</span> B <span class=\"token operator\">*</span> H <span class=\"token operator\">*</span> H <span class=\"token operator\">*</span> H<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> <span class=\"token number\">12.0</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>B <span class=\"token operator\">-</span> tw<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>H <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> tf<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>H <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> tf<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>H <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> tf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            Zy <span class=\"token operator\">=</span> Iy <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>H <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// ひとまとめにするため List で作成</span>\n            <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">></span></span> Params <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            Params<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//  部材長さ</span>\n            Params<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>Iy<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span> <span class=\"token comment\">//  断面二次モーメント</span>\n            Params<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>Zy<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span> <span class=\"token comment\">//  断面係数</span>\n\n            <span class=\"token comment\">// モデルはRhino上に出力するだけなので、とりあえず配列でまとめる</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> model <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">PlaneSurface</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            model<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> upper_flange<span class=\"token punctuation\">;</span>\n            model<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> bottom_flange<span class=\"token punctuation\">;</span>\n            model<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> web<span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// まとめての出力なので、SetDataList で出力</span>\n            DA<span class=\"token punctuation\">.</span><span class=\"token function\">SetDataList</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            DA<span class=\"token punctuation\">.</span><span class=\"token function\">SetDataList</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> Params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\">Guid</span> ComponentGuid\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">get</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Guid</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"419c3a3a-cc48-4717-8cef-5f5647a5ecAa\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","excerpt":"以前の記事では、単純梁の計算をするコンポーネントを作成しました。その際はすべてのパラメーターが手入力だったので、今回は H 形鋼を対象にして、解析に必要なパラメーターを計算し、出力するコンポーネントの作成を行います。 また設定した形状の H 形鋼を Rhino 上への出力も併せて行います。  初めに Rhino…","frontmatter":{"date":"24 December, 2016","path":"/articles/CS-make-I-shape-Steel","title":"Grasshopper と C# を使って H 形鋼を出力する","article_tags":["Grasshopper","CSharp","構造とデジタル"]},"fields":{"readingTime":{"text":"5 min read"},"slug":"/kozo-to-digital/CS-make-I-shape-Steel/","collection":"article"}},"site":{"siteMetadata":{"title":"構造とデジタル_最新版_Final(1)"}}},"pageContext":{}},"staticQueryHashes":["32046230","3649515864"]}