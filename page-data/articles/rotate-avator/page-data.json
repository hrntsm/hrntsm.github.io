{"componentChunkName":"component---src-templates-article-post-js","path":"/articles/rotate-avator","result":{"data":{"markdownRemark":{"html":"<h2>はじめに</h2>\n<p>以下の参考記事をもとに VRM アバターを平行移動および回転させることができたので、そのメモです。</p>\n<h1>参考にした記事</h1>\n<ol>\n<li><a href=\"https://qiita.com/sh_akira/items/81fca69d6f34a42d261c\">UniVRM+SteamVR+Final IK で始める VTuber</a></li>\n<li><a href=\"https://qiita.com/r6u5ei/items/563340930a4de5588e42\">SteamVR Plugin 2.0 で単純なスライド移動を実装する</a></li>\n<li><a href=\"https://qiita.com/sakano/items/d87a9b11c23a9bbe166f#%E3%83%8F%E3%83%B3%E3%83%89%E3%82%B3%E3%83%B3%E3%83%88%E3%83%AD%E3%83%BC%E3%83%A9%E3%81%AE%E5%85%A5%E5%8A%9B%E3%82%92%E6%89%B1%E3%81%86%E6%96%B9%E6%B3%95\">SteamVR Unity Plugin v2.2.0 でのインプット</a></li>\n</ol>\n<h1>方針</h1>\n<ol>\n<li>右手のタッチパッドで平行移動</li>\n<li>左手のタッチパッドで回転</li>\n<li>移動・回転の基準はアバター</li>\n<li>VIVE のタッチパットは触れているだけでも値を出力するがそれだと指が触れただけで動いてしまうので、クリックも必要とする</li>\n</ol>\n<h1>実装</h1>\n<h2>Unity 側</h2>\n<p>SteamVR の plugin を読み込んで、参考の 2 をもとに SteamVR Input の設定(position に tpad を設定)をしてたり、Unity のヒエラルキーに参考の 1 をもとにアバターを配置したり SteamVR の[CameraRig]を配置したりしておきます。</p>\n<p>[CameraRig]には以下で作成する PlayMover をアタッチしています。中身は下で説明しますが、動かしたい操作対象のアバターを Avatar に入れておきます。</p>\n<p><img src=\"https://hiron.dev/image/qiita/rotate-avator.png\" alt=\"unity設定.png\"></p>\n<h2>C#Script 側</h2>\n<p>[CameraRig]にアタッチした PlayMover について以下で設定していきます。</p>\n<p>まず SteamVR のインプットを取得する必要があるので、そのための変数を作ります。</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cs line-numbers\"><code class=\"language-cs\"><span class=\"token class-name\">SteamVR_Input_Sources</span> _srcRight <span class=\"token operator\">=</span> SteamVR_Input_Sources<span class=\"token punctuation\">.</span>RightHand<span class=\"token punctuation\">;</span> <span class=\"token comment\">//SteamVR_Input_Sources.RightHandで右手のinput</span>\n<span class=\"token class-name\">SteamVR_Input_Sources</span> _srcLeft <span class=\"token operator\">=</span> SteamVR_Input_Sources<span class=\"token punctuation\">.</span>LeftHand<span class=\"token punctuation\">;</span> <span class=\"token comment\">// .LeftHandで左手のinput</span>\n<span class=\"token comment\">// .any にすれば両手どちらからでもOKになる</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>次に取得したインプットをそれぞれに割り当てていきます。以下では例として右手の場合。Teleport がここではタッチパッドをクリックの有無の Boolean、tpad がタッチパッド上での xy 平面のどこにいるかの Vector2 になります。</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cs line-numbers\"><code class=\"language-cs\"><span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    _actionBoolean <span class=\"token operator\">=</span> SteamVR_Actions<span class=\"token punctuation\">.</span>_default<span class=\"token punctuation\">.</span>Teleport<span class=\"token punctuation\">;</span>\n    _actionVector2 <span class=\"token operator\">=</span> SteamVR_Actions<span class=\"token punctuation\">.</span>_default<span class=\"token punctuation\">.</span>tpad<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    _clickRight <span class=\"token operator\">=</span> _actionBoolean<span class=\"token punctuation\">.</span><span class=\"token function\">GetState</span><span class=\"token punctuation\">(</span>_srcRight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    _tpadRightX <span class=\"token operator\">=</span> _actionVector2<span class=\"token punctuation\">.</span><span class=\"token function\">GetAxis</span><span class=\"token punctuation\">(</span>_srcRight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n    _tpadRightY <span class=\"token operator\">=</span> _actionVector2<span class=\"token punctuation\">.</span><span class=\"token function\">GetAxis</span><span class=\"token punctuation\">(</span>_srcRight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>取得した値をアバターのトランスフォームに適用します。例えば正面に進む場合は以下です。</p>\n<p>if でクリックされていてかつ、タッチパッドの前方をおしている場合を条件としています。</p>\n<p>if の中では、対象としているアバターの正面のベクトルを取得するために _avatarObject.transform.forward を使用しています。アバターの移動に際してフレーム間でばらつきが出ないように deltaTime をそれにかけて、それに移動速度をかけています。</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cs line-numbers\"><code class=\"language-cs\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_clickRight <span class=\"token operator\">&amp;&amp;</span> _tpadRightY <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> _tpadRightX <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.5f</span> <span class=\"token operator\">&amp;&amp;</span> _tpadRightX <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">+=</span> _avatarObject<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>forward <span class=\"token operator\">*</span> Time<span class=\"token punctuation\">.</span>deltaTime <span class=\"token operator\">*</span> _moveSpeed<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>回転は以下のようになります。この C#スクリプトが[CameraRig]にアタッチしているので、上の平行移動と異なり[CameraRig]の transform の rotate にそのまま適用してしまうと[CameraRig]を中心に回転してしまい、アバター中心に回転しないため、RotateAround を使用してアバターの位置を中心として[CameraRig]が回転するようにしています。</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cs line-numbers\"><code class=\"language-cs\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_clickLeft <span class=\"token operator\">&amp;&amp;</span> _tpadLeftX <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> _tpadLeftY <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.5f</span> <span class=\"token operator\">&amp;&amp;</span> _tpadLeftY <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    transform<span class=\"token punctuation\">.</span><span class=\"token function\">RotateAround</span><span class=\"token punctuation\">(</span>_avatarObject<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">,</span> transform<span class=\"token punctuation\">.</span>up<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>Time<span class=\"token punctuation\">.</span>deltaTime <span class=\"token operator\">*</span> _rotateSpeed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>これで ▶Play すればコントローラーから移動できるようになっていると思います。</p>\n<p>SteamVR Plugin については参考の 3 を参照するとより細かく書かれています。</p>\n<h1>完成したコード全体</h1>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cs line-numbers\"><code class=\"language-cs\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">UnityEngine</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Valve<span class=\"token punctuation\">.</span>VR</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PlayerMover</span><span class=\"token punctuation\">:</span><span class=\"token type-list\"><span class=\"token class-name\">MonoBehaviour</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 右手のinput</span>\n    <span class=\"token class-name\">SteamVR_Input_Sources</span> _srcRight <span class=\"token operator\">=</span> SteamVR_Input_Sources<span class=\"token punctuation\">.</span>RightHand<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 左手のinput</span>\n    <span class=\"token class-name\">SteamVR_Input_Sources</span> _srcLeft <span class=\"token operator\">=</span> SteamVR_Input_Sources<span class=\"token punctuation\">.</span>LeftHand<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// inputの受け取り</span>\n    <span class=\"token class-name\">SteamVR_Action_Boolean</span> _actionBoolean<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">SteamVR_Action_Vector2</span> _actionVector2<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 右手の各値</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> _clickRight<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> _tpadRightX<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> _tpadRightY<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 左手の各値</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> _clickLeft<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> _tpadLeftX<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> _tpadLeftY<span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> _moveSpeed <span class=\"token operator\">=</span> <span class=\"token number\">2.0f</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 移動速度</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> _rotateSpeed <span class=\"token operator\">=</span> <span class=\"token number\">15.0f</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 回転速度</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token class-name\">GameObject</span> _avatar<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 操作の対象のゲームオブジェクト</span>\n\n    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// クリックされているかどうかのboolean</span>\n        _actionBoolean <span class=\"token operator\">=</span> SteamVR_Actions<span class=\"token punctuation\">.</span>_default<span class=\"token punctuation\">.</span>Teleport<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// タッチパッドのどこを触っているかのvector2</span>\n        _actionVector2 <span class=\"token operator\">=</span> SteamVR_Actions<span class=\"token punctuation\">.</span>_default<span class=\"token punctuation\">.</span>tpad<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 右手input</span>\n        _clickRight <span class=\"token operator\">=</span> _actionBoolean<span class=\"token punctuation\">.</span><span class=\"token function\">GetState</span><span class=\"token punctuation\">(</span>_srcRight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        _tpadRightX <span class=\"token operator\">=</span> _actionVector2<span class=\"token punctuation\">.</span><span class=\"token function\">GetAxis</span><span class=\"token punctuation\">(</span>_srcRight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n        _tpadRightY <span class=\"token operator\">=</span> _actionVector2<span class=\"token punctuation\">.</span><span class=\"token function\">GetAxis</span><span class=\"token punctuation\">(</span>_srcRight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 左手input</span>\n        _clickLeft <span class=\"token operator\">=</span> _actionBoolean<span class=\"token punctuation\">.</span><span class=\"token function\">GetState</span><span class=\"token punctuation\">(</span>_srcLeft<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        _tpadLeftX <span class=\"token operator\">=</span> _actionVector2<span class=\"token punctuation\">.</span><span class=\"token function\">GetAxis</span><span class=\"token punctuation\">(</span>_srcLeft<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n        _tpadLeftY <span class=\"token operator\">=</span> _actionVector2<span class=\"token punctuation\">.</span><span class=\"token function\">GetAxis</span><span class=\"token punctuation\">(</span>_srcLeft<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 右のタッチパッドは移動を割り当て</span>\n        <span class=\"token comment\">// avatarのforworadにすることで、向かっている正面をキーの前ボタンと対応させた。</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_clickRight <span class=\"token operator\">&amp;&amp;</span> _tpadRightY <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> _tpadRightX <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.5f</span> <span class=\"token operator\">&amp;&amp;</span> _tpadRightX <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">+=</span> _avatar<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>forward <span class=\"token operator\">*</span> Time<span class=\"token punctuation\">.</span>deltaTime <span class=\"token operator\">*</span> _moveSpeed<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_clickRight <span class=\"token operator\">&amp;&amp;</span> _tpadRightY <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> _tpadRightX <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.5f</span> <span class=\"token operator\">&amp;&amp;</span> _tpadRightX <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">-=</span> _avatar<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>forward <span class=\"token operator\">*</span> Time<span class=\"token punctuation\">.</span>deltaTime <span class=\"token operator\">*</span> _moveSpeed<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_clickRight <span class=\"token operator\">&amp;&amp;</span> _tpadRightX <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> _tpadRightY <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.5f</span> <span class=\"token operator\">&amp;&amp;</span> _tpadRightY <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span> \n        <span class=\"token punctuation\">{</span>\n            transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">-=</span> _avatar<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>right <span class=\"token operator\">*</span> Time<span class=\"token punctuation\">.</span>deltaTime <span class=\"token operator\">*</span> _moveSpeed<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_clickRight <span class=\"token operator\">&amp;&amp;</span> _tpadRightX <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> _tpadRightY <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.5f</span> <span class=\"token operator\">&amp;&amp;</span> _tpadRightY <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">+=</span> _avatar<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>right <span class=\"token operator\">*</span> Time<span class=\"token punctuation\">.</span>deltaTime <span class=\"token operator\">*</span> _moveSpeed<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// 左のタッチパッドは回転を割り当て</span>\n        <span class=\"token comment\">// RotateAroundにavatarを入れることで、avatarを中心に回転するように設定</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_clickLeft <span class=\"token operator\">&amp;&amp;</span> _tpadLeftX <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> _tpadLeftY <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.5f</span> <span class=\"token operator\">&amp;&amp;</span> _tpadLeftY <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            transform<span class=\"token punctuation\">.</span><span class=\"token function\">RotateAround</span><span class=\"token punctuation\">(</span>_avatar<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">,</span> transform<span class=\"token punctuation\">.</span>up<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>Time<span class=\"token punctuation\">.</span>deltaTime <span class=\"token operator\">*</span> _rotateSpeed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_clickLeft <span class=\"token operator\">&amp;&amp;</span> _tpadLeftX <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> _tpadLeftY <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.5f</span> <span class=\"token operator\">&amp;&amp;</span> _tpadLeftY <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            transform<span class=\"token punctuation\">.</span><span class=\"token function\">RotateAround</span><span class=\"token punctuation\">(</span>_avatar<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">,</span> transform<span class=\"token punctuation\">.</span>up<span class=\"token punctuation\">,</span> Time<span class=\"token punctuation\">.</span>deltaTime <span class=\"token operator\">*</span> _rotateSpeed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","excerpt":"はじめに 以下の参考記事をもとに VRM アバターを平行移動および回転させることができたので、そのメモです。 参考にした記事 UniVRM+SteamVR+Final IK で始める VTuber SteamVR Plugin 2.0 で単純なスライド移動を実装する SteamVR Unity Plugin v2.…","frontmatter":{"date":"17 March, 2020","path":"/articles/rotate-avator","title":"SteamVR Plugin v2.5を使ってアバターを移動回転させる","article_tags":["Unity","VR","SteamVR","Qiita"]},"fields":{"readingTime":{"text":"3 min read"},"slug":"/qiita/rotate-avator/","collection":"article"}},"site":{"siteMetadata":{"title":"構造とデジタル_最新版_Final(1)"}}},"pageContext":{}},"staticQueryHashes":["32046230","3649515864"]}