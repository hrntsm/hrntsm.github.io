{"componentChunkName":"component---src-templates-article-post-js","path":"/articles/rhino.inside.unity-sendmesh","result":{"data":{"markdownRemark":{"html":"<p>Rhino.Inside.Unity で Unity から Rhino にメッシュを送る部分を作成したので、送り方を説明します。なお作った結果として、メッシュはデータ量が多いからか動作が非常に重くなるので、リアルタイムでメッシュのやり取りをしない限りは FBX などを介して送ったほうがよさそうです。</p>\n<p><a href=\"https://1.bp.blogspot.com/-VYfATyeLD_k/XmERX5ZA1cI/AAAAAAAABzU/TazirU_T4GUczJpEcmT1UYhCq7GWtczuACLcBGAsYHQ/s1600/RIUmesh.gif\"><img src=\"https://1.bp.blogspot.com/-VYfATyeLD_k/XmERX5ZA1cI/AAAAAAAABzU/TazirU_T4GUczJpEcmT1UYhCq7GWtczuACLcBGAsYHQ/s640/RIUmesh.gif\"></a></p>\n<p>mcneel の GitHub に Rhino から Unity にメッシュを送る部分があるのですが、Unity から Rhino に送る部分がなかったためその部分を作成しました。<br>\nただし今回作成したのは、Unity でゲームオブジェクトにアタッチされているメッシュそのもの（MeshFilter の中の Mesh）を送っているだけなため、transform で設定する position、rotation、scale は送っていません。このこともあって冒頭で FBX などのものを進めています。<br>\n作成したベースは <a href=\"https://github.com/mcneel/rhino.inside/tree/master/Unity/Sample2\">Rhino.Inside.Unity の sample2</a>を使っています。<br>\nRhino に送るためには Unity のメッシュ(UnityEngine.Mesh)を Rhino のメッシュ(Rhino.Geometry.Mesh)に変換する必要があるので、そこを作成します。上記サンプルの中では Convert.cs の中でその変換をやっているので、そこに追記します。追記した内容は以下です。</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cs line-numbers\"><code class=\"language-cs\">  <span class=\"token keyword\">static</span> <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Rhino<span class=\"token punctuation\">.</span>Geometry<span class=\"token punctuation\">.</span>Mesh</span> <span class=\"token function\">ToRhino</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token class-name\">UnityEngine<span class=\"token punctuation\">.</span>Mesh</span> _mesh<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Vector3<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> verteces <span class=\"token operator\">=</span> _mesh<span class=\"token punctuation\">.</span>vertices<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> triangles <span class=\"token operator\">=</span> _mesh<span class=\"token punctuation\">.</span>triangles<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rhino<span class=\"token punctuation\">.</span>Geometry<span class=\"token punctuation\">.</span>Mesh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Brep<span class=\"token punctuation\">></span></span> brep <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>Brep<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> triangles<span class=\"token punctuation\">.</span>Length <span class=\"token operator\">/</span> <span class=\"token number\">3</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> pt1 <span class=\"token operator\">=</span> verteces<span class=\"token punctuation\">[</span>triangles<span class=\"token punctuation\">[</span><span class=\"token number\">3</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToRhino</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> pt2 <span class=\"token operator\">=</span> verteces<span class=\"token punctuation\">[</span>triangles<span class=\"token punctuation\">[</span><span class=\"token number\">3</span> <span class=\"token operator\">*</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToRhino</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> pt3 <span class=\"token operator\">=</span> verteces<span class=\"token punctuation\">[</span>triangles<span class=\"token punctuation\">[</span><span class=\"token number\">3</span> <span class=\"token operator\">*</span> i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToRhino</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      brep<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>Brep<span class=\"token punctuation\">.</span><span class=\"token function\">CreateFromCornerPoints</span><span class=\"token punctuation\">(</span>pt1<span class=\"token punctuation\">,</span> pt2<span class=\"token punctuation\">,</span> pt3<span class=\"token punctuation\">,</span> <span class=\"token number\">0.00001</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> brep<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n      result<span class=\"token punctuation\">.</span><span class=\"token function\">Append</span><span class=\"token punctuation\">(</span>Rhino<span class=\"token punctuation\">.</span>Geometry<span class=\"token punctuation\">.</span>Mesh<span class=\"token punctuation\">.</span><span class=\"token function\">CreateFromBrep</span><span class=\"token punctuation\">(</span>brep<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Unity の Mesh(_mesh)を受け取って、そこから Brep を作り、その Brep から Rhino の Mesh を作っています。<br>\nBrep のつくり方は、まず Unity のメッシュの vertices と triangles を使って構成する 3 点を取得します。この点は Unity の Vector3 なので、ToRhino で Rhino の Point3d に変換し、CreateFromCornerPoints で Brep を作ります。最後の引数は、tolerance なので、想定する精度をもとに決めればよいですが、Unity の 1 は 1m 相当なので、ここで tolerance を 1mm と思って 1 にすると細かいモデルはうまく送れないのでここでは 0.0001 にしています。必要な精度で適宜設定してください。<br>\nMesh は Brep から CreateFromBrep でつくり Append することでひとまとまりのメッシュにしています。<br>\n送るメッシュは別途 RhinoInsideController.cs を作ってそれを適当なゲームオブジェクトにアタッチして、そこに_sendObject として受け取るようにしてます。</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cs line-numbers\"><code class=\"language-cs\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">GameObject</span> _sendObject<span class=\"token punctuation\">;</span>\n\n<span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> mesh <span class=\"token operator\">=</span> _sendObject<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">GetComponent</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>MeshFilter<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">ToRhino</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> args <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rhino<span class=\"token punctuation\">.</span>Runtime<span class=\"token punctuation\">.</span>NamedParametersEventArgs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    args<span class=\"token punctuation\">.</span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mesh\"</span><span class=\"token punctuation\">,</span> mesh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Rhino<span class=\"token punctuation\">.</span>Runtime<span class=\"token punctuation\">.</span>HostUtils<span class=\"token punctuation\">.</span><span class=\"token function\">ExecuteNamedCallback</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SendObject\"</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Grasshopper で受け取る側は以下です。</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cs line-numbers\"><code class=\"language-cs\">  <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Register</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IGH_Component</span> component<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>registered<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n      Rhino<span class=\"token punctuation\">.</span>Runtime<span class=\"token punctuation\">.</span>HostUtils<span class=\"token punctuation\">.</span><span class=\"token function\">RegisterNamedCallback</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SendObject\"</span><span class=\"token punctuation\">,</span> ToGrasshopper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      comp <span class=\"token operator\">=</span> component<span class=\"token punctuation\">;</span>\n      registered <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ToGrasshopper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Rhino<span class=\"token punctuation\">.</span>Runtime<span class=\"token punctuation\">.</span>NamedParametersEventArgs</span> args<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Rhino<span class=\"token punctuation\">.</span>Geometry<span class=\"token punctuation\">.</span>GeometryBase<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> values<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span><span class=\"token function\">TryGetGeometry</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mesh\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">out</span> values<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      mesh <span class=\"token operator\">=</span> values<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span> <span class=\"token class-name\">Rhino<span class=\"token punctuation\">.</span>Geometry<span class=\"token punctuation\">.</span>Mesh</span><span class=\"token punctuation\">;</span>\n    comp<span class=\"token punctuation\">.</span><span class=\"token function\">ExpireSolution</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>受け取り方は、ポイントの受け取り方と同じで NameCallback を使ってやっています。</p>\n<p>　ここで作ったものは Unity のプロジェクトごと<a href=\"https://github.com/hrntsm/rhino.inside/tree/master/Unity\">ここの Sample3</a>にあげました。Unity 2018.4 で作っています。参考にしてください。</p>","excerpt":"Rhino.Inside.Unity で Unity から Rhino にメッシュを送る部分を作成したので、送り方を説明します。なお作った結果として、メッシュはデータ量が多いからか動作が非常に重くなるので、リアルタイムでメッシュのやり取りをしない限りは FBX などを介して送ったほうがよさそうです。  mcneel…","frontmatter":{"date":"05 March, 2020","path":"/articles/rhino.inside.unity-sendmesh","title":"RhinoInside UnityでRhinoへメッシュを送るやり方","article_tags":["Unity","RhinoInside","CSharp","Rhinoceros","構造とデジタル"]},"fields":{"readingTime":{"text":"2 min read"},"slug":"/kozo-to-digital/rhino.inside.unity-sendmesh/","collection":"article"}}},"pageContext":{}},"staticQueryHashes":["32046230","3649515864"]}