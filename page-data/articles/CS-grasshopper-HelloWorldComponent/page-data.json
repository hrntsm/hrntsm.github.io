{"componentChunkName":"component---src-templates-article-post-js","path":"/articles/CS-grasshopper-HelloWorldComponent","result":{"data":{"markdownRemark":{"html":"<p>Grasshopper のコンポーネントのカスタム方法についての記事です。コンポーネントにボタンを設置し、ボタンを押すとウインドウズフォームから出力されるウインドウに定番の「HelloWorld」を出力するコンポーネントを作成します。</p>\n<p><a href=\"https://4.bp.blogspot.com/-c9x0l3r4drM/WRfabD79LqI/AAAAAAAABXY/Pybpxc6JIasqn00EfV87bYW-JZe78PbdwCLcB/s1600/%25E3%2583%2588%25E3%2583%2583%25E3%2583%2597%25E7%2594%25BB%25E5%2583%258F.PNG\"><img src=\"https://4.bp.blogspot.com/-c9x0l3r4drM/WRfabD79LqI/AAAAAAAABXY/Pybpxc6JIasqn00EfV87bYW-JZe78PbdwCLcB/s320/%25E3%2583%2588%25E3%2583%2583%25E3%2583%2597%25E7%2594%25BB%25E5%2583%258F.PNG\"></a></p>\n<p>コンポーンネントのカスタムは、カスタム専用のクラスを作成して行います。今回は、Attributes_Custom というクラス名としています。<br>\n構成を簡単に説明すると以下のようになります。</p>\n<ol>\n<li>layout でコンポーネントの外観を変更しています。rec0 でコンポーネントのサイズを大きくし、ボタンを設置するスペースを作ります。（rec0.Height += 44 で高さを増している）</li>\n<li>上記画像で Button1 と表示される範囲を rec1、Button2 と表示される範囲を rec2 として作成します。</li>\n<li>ボタンにテキストを表示させるように Render の設定を行います。</li>\n<li>ボタンとして反応し、ウインドウを出すためにイベントハンドラの設定を行います。Button1 はタイトルにもなっている「HelloWorld」を出力するよう設定しています。Button2 はボタンを増やす例として作っています。どちらも右クリックでイベントが発生するようにしています。</li>\n<li>最後にここでの設定をコンポーネントに反映するため以下の gist でいうと 14-17 行目にあるようにコンポーネントと Attributes_Custom と関連つけます。</li>\n</ol>\n<p>では今回作成したものを以下に掲載します。</p>\n<p>コンポーネント本体</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cs line-numbers\"><code class=\"language-cs\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">Grasshopper<span class=\"token punctuation\">.</span>Kernel</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Grasshopper<span class=\"token punctuation\">.</span>Kernel<span class=\"token punctuation\">.</span>Attributes</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Grasshopper<span class=\"token punctuation\">.</span>GUI</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Grasshopper<span class=\"token punctuation\">.</span>GUI<span class=\"token punctuation\">.</span>Canvas</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Drawing</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Windows<span class=\"token punctuation\">.</span>Forms</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpecialComponent</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">GH_Component</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token function\">SpecialComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">base</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Special component showing winforms override\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Special\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Special\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">CreateAttributes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        m_attributes <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Attributes_Custom</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">RegisterInputParams</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GH_Component<span class=\"token punctuation\">.</span>GH_InputParamManager</span> pManager<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        pManager<span class=\"token punctuation\">.</span><span class=\"token function\">AddIntegerParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Option\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"O\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Option parameter\"</span><span class=\"token punctuation\">,</span> GH_ParamAccess<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">RegisterOutputParams</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GH_Component<span class=\"token punctuation\">.</span>GH_OutputParamManager</span> pManager<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        pManager<span class=\"token punctuation\">.</span><span class=\"token function\">AddTextParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Output\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"O\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Output value\"</span><span class=\"token punctuation\">,</span> GH_ParamAccess<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">SolveInstance</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IGH_DataAccess</span> DA<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> option <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>DA<span class=\"token punctuation\">.</span><span class=\"token function\">GetData</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">ref</span> option<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>option<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n                DA<span class=\"token punctuation\">.</span><span class=\"token function\">SetData</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n                DA<span class=\"token punctuation\">.</span><span class=\"token function\">SetData</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n                DA<span class=\"token punctuation\">.</span><span class=\"token function\">SetData</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Unknown\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\">System<span class=\"token punctuation\">.</span>Guid</span> ComponentGuid\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">get</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Guid</span><span class=\"token punctuation\">(</span>SET_GUID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>コンポーネントのカスタムを行うクラス</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cs line-numbers\"><code class=\"language-cs\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Attributes_Custom</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">GH_ComponentAttributes</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token function\">Attributes_Custom</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GH_Component</span> owner<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">base</span><span class=\"token punctuation\">(</span>owner<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Layout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">Layout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">Rectangle</span> rec0 <span class=\"token operator\">=</span> GH_Convert<span class=\"token punctuation\">.</span><span class=\"token function\">ToRectangle</span><span class=\"token punctuation\">(</span>Bounds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        rec0<span class=\"token punctuation\">.</span>Height <span class=\"token operator\">+=</span> <span class=\"token number\">44</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">Rectangle</span> rec1 <span class=\"token operator\">=</span> rec0<span class=\"token punctuation\">;</span>\n        rec1<span class=\"token punctuation\">.</span>Y <span class=\"token operator\">=</span> rec1<span class=\"token punctuation\">.</span>Bottom <span class=\"token operator\">-</span> <span class=\"token number\">44</span><span class=\"token punctuation\">;</span>\n        rec1<span class=\"token punctuation\">.</span>Height <span class=\"token operator\">=</span> <span class=\"token number\">22</span><span class=\"token punctuation\">;</span>\n        rec1<span class=\"token punctuation\">.</span><span class=\"token function\">Inflate</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">Rectangle</span> rec2 <span class=\"token operator\">=</span> rec0<span class=\"token punctuation\">;</span>\n        rec2<span class=\"token punctuation\">.</span>Y <span class=\"token operator\">=</span> rec0<span class=\"token punctuation\">.</span>Bottom <span class=\"token operator\">-</span> <span class=\"token number\">22</span><span class=\"token punctuation\">;</span>\n        rec2<span class=\"token punctuation\">.</span>Height <span class=\"token operator\">=</span> <span class=\"token number\">22</span><span class=\"token punctuation\">;</span>\n        rec2<span class=\"token punctuation\">.</span><span class=\"token function\">Inflate</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        Bounds <span class=\"token operator\">=</span> rec0<span class=\"token punctuation\">;</span>\n        ButtonBounds <span class=\"token operator\">=</span> rec1<span class=\"token punctuation\">;</span>\n        ButtonBounds2 <span class=\"token operator\">=</span> rec2<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\">Rectangle</span> ButtonBounds <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\">Rectangle</span> ButtonBounds2 <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Render</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GH_Canvas</span> canvas<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Graphics</span> graphics<span class=\"token punctuation\">,</span> <span class=\"token class-name\">GH_CanvasChannel</span> channel<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">Render</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">,</span> graphics<span class=\"token punctuation\">,</span> channel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>channel <span class=\"token operator\">==</span> GH_CanvasChannel<span class=\"token punctuation\">.</span>Objects<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">GH_Capsule</span> button <span class=\"token operator\">=</span> GH_Capsule<span class=\"token punctuation\">.</span><span class=\"token function\">CreateTextCapsule</span><span class=\"token punctuation\">(</span>ButtonBounds<span class=\"token punctuation\">,</span> ButtonBounds<span class=\"token punctuation\">,</span> GH_Palette<span class=\"token punctuation\">.</span>Black<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Button1\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            button<span class=\"token punctuation\">.</span><span class=\"token function\">Render</span><span class=\"token punctuation\">(</span>graphics<span class=\"token punctuation\">,</span> Selected<span class=\"token punctuation\">,</span> Owner<span class=\"token punctuation\">.</span>Locked<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            button<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>channel <span class=\"token operator\">==</span> GH_CanvasChannel<span class=\"token punctuation\">.</span>Objects<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">GH_Capsule</span> button2 <span class=\"token operator\">=</span> GH_Capsule<span class=\"token punctuation\">.</span><span class=\"token function\">CreateTextCapsule</span><span class=\"token punctuation\">(</span>ButtonBounds2<span class=\"token punctuation\">,</span> ButtonBounds2<span class=\"token punctuation\">,</span> GH_Palette<span class=\"token punctuation\">.</span>Black<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Button2\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            button2<span class=\"token punctuation\">.</span><span class=\"token function\">Render</span><span class=\"token punctuation\">(</span>graphics<span class=\"token punctuation\">,</span> Selected<span class=\"token punctuation\">,</span> Owner<span class=\"token punctuation\">.</span>Locked<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            button2<span class=\"token punctuation\">.</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\">GH_ObjectResponse</span> <span class=\"token function\">RespondToMouseDown</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GH_Canvas</span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">GH_CanvasMouseEvent</span> e<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>Button <span class=\"token operator\">==</span> MouseButtons<span class=\"token punctuation\">.</span>Left<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">RectangleF</span> rec <span class=\"token operator\">=</span> ButtonBounds<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rec<span class=\"token punctuation\">.</span><span class=\"token function\">Contains</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>CanvasLocation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">,</span> MessageBoxButtons<span class=\"token punctuation\">.</span>OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> GH_ObjectResponse<span class=\"token punctuation\">.</span>Handled<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>Button <span class=\"token operator\">==</span> MouseButtons<span class=\"token punctuation\">.</span>Left<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">RectangleF</span> rec <span class=\"token operator\">=</span> ButtonBounds2<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rec<span class=\"token punctuation\">.</span><span class=\"token function\">Contains</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>CanvasLocation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                MessageBox<span class=\"token punctuation\">.</span><span class=\"token function\">Show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"こんな感じで増えます。\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"増やし方\"</span><span class=\"token punctuation\">,</span> MessageBoxButtons<span class=\"token punctuation\">.</span>OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> GH_ObjectResponse<span class=\"token punctuation\">.</span>Handled<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">RespondToMouseDown</span><span class=\"token punctuation\">(</span>sender<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","excerpt":"Grasshopper のコンポーネントのカスタム方法についての記事です。コンポーネントにボタンを設置し、ボタンを押すとウインドウズフォームから出力されるウインドウに定番の「HelloWorld…","frontmatter":{"date":"28 May, 2017","path":"/articles/CS-grasshopper-HelloWorldComponent","title":"C# と Grasshopperで Hello World! を表示","article_tags":["Grasshopper","CSharp","構造とデジタル"]},"fields":{"readingTime":{"text":"2 min read"},"slug":"/kozo-to-digital/CS-grasshopper-HelloWorldComponent/","collection":"article"}}},"pageContext":{}},"staticQueryHashes":["32046230","3649515864"]}