{"componentChunkName":"component---src-templates-article-post-js","path":"/articles/entry-rhinoinside-cpython","result":{"data":{"markdownRemark":{"html":"<p>CPython で RhinoInside を使いたくなったので、まず入門してみました。</p>\n<h2>やること</h2>\n<p>環境構築して、CPython 内でジオメトリを作成して、3dm で保存することをやります。中身としては挙げられているサンプルに保存用の部分を追加したものになります。</p>\n<h2>環境構築</h2>\n<p>PYPI の <a href=\"https://pypi.org/project/rhinoinside/\">RhinoInside python</a> のサイトを見るとインストールの仕方が書いてあります。venv などの仮想環境を作らないのであれば以下でインストールできます。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">pip install <span class=\"token operator\">-</span><span class=\"token operator\">-</span>user rhinoinsite</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>以下の環境が必要なので、私は Python 3.7 を使いました。</p>\n<ul>\n<li>Rhino7</li>\n<li>Windows(64 ビット版)</li>\n<li>CPython(2.7, 3.5, 3.6, 3.7)</li>\n</ul>\n<h2>なぜ CPython で RhinoInside が動くのか</h2>\n<p>pip で RhinoInside をインストールするとわかりますが、Pytonnet を使うことで .NET 向けに書かれた RhinoInside を使っています。</p>\n<p>pythonnet については、<a href=\"http://pythonnet.github.io/\">公式サイト</a> やググって Qiita の記事などで調べることができます。\nGitHub の README を見てみると、.NET Foundation からサポートを受けているので、体制にも安心感があります。</p>\n<h2>カーブを作成してみる</h2>\n<p>PYPI のサイトに上げられているサンプルのコードを以下に引用します。\n問題なく流れていると最後に print されているようにカーブの長さが出力されます。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> rhinoinside\nrhinoinside<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">import</span> System\n<span class=\"token keyword\">import</span> Rhino\n\n<span class=\"token comment\"># for now, you need to explicitly use floating point</span>\n<span class=\"token comment\"># numbers in Point3d constructor</span>\npts <span class=\"token operator\">=</span> System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic<span class=\"token punctuation\">.</span>List<span class=\"token punctuation\">[</span>Rhino<span class=\"token punctuation\">.</span>Geometry<span class=\"token punctuation\">.</span>Point3d<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\npts<span class=\"token punctuation\">.</span>Add<span class=\"token punctuation\">(</span>Rhino<span class=\"token punctuation\">.</span>Geometry<span class=\"token punctuation\">.</span>Point3d<span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\npts<span class=\"token punctuation\">.</span>Add<span class=\"token punctuation\">(</span>Rhino<span class=\"token punctuation\">.</span>Geometry<span class=\"token punctuation\">.</span>Point3d<span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\npts<span class=\"token punctuation\">.</span>Add<span class=\"token punctuation\">(</span>Rhino<span class=\"token punctuation\">.</span>Geometry<span class=\"token punctuation\">.</span>Point3d<span class=\"token punctuation\">(</span><span class=\"token number\">1.5</span><span class=\"token punctuation\">,</span><span class=\"token number\">2.0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ncrv <span class=\"token operator\">=</span> Rhino<span class=\"token punctuation\">.</span>Geometry<span class=\"token punctuation\">.</span>Curve<span class=\"token punctuation\">.</span>CreateInterpolatedCurve<span class=\"token punctuation\">(</span>pts<span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span> <span class=\"token punctuation\">(</span>crv<span class=\"token punctuation\">.</span>GetLength<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Dynamo などで Python 使われている方はおなじみだと思いますが、.NET のものを呼ぶときは、例えば以下のように通常します。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> clr\nclr<span class=\"token punctuation\">.</span>AddReference<span class=\"token punctuation\">(</span><span class=\"token string\">'System.Windows.Forms'</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>RhinoInside Cpython では rhinoinside.load() を行っている箇所で上記を行っています。\nそのため、import System の前にその一行が入っています。load メソッドが引数に Rhino のインストールフォルダを指定できるのは、中が clr.AddReference するためです。</p>\n<p>実装は <a href=\"https://github.com/mcneel/rhino.inside-cpython/blob/master/rhinoinside/__init__.py#L12\">mcneel/rhino.inside-cpython</a> を参照してください。</p>\n<h2>書き出し用の設定を付ける</h2>\n<h3>JSON 化する</h3>\n<p>Rhino7 からジオメトリを JSON 化するメソッドが追加されたので、それを使ってジオメトリをテキストにしてみます。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">serial <span class=\"token operator\">=</span> Rhino<span class=\"token punctuation\">.</span>FileIO<span class=\"token punctuation\">.</span>SerializationOptions<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\njson <span class=\"token operator\">=</span> crv<span class=\"token punctuation\">.</span>ToJSON<span class=\"token punctuation\">(</span>serial<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>ジオメトリに対して .ToJSON メソッドを使うことで JSON 化され以下のような出力になります。</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-json line-numbers\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span><span class=\"token number\">10000</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"archive3dm\"</span><span class=\"token operator\">:</span><span class=\"token number\">70</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"opennurbs\"</span><span class=\"token operator\">:</span><span class=\"token number\">-1912047423</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"data\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"+n8CAD4BAAAAAAAA+/8CABQAAAAAAAAAGRGvXlEL1BG//gAQgwEi8EoaeRf8/wIABgEAAAAAAAARAwAAAAAAAAAEAAAABQAAAAAAAAAAAAAAAAAAAAAA8D8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAAAAAAAAAAAAAAAABwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPA/AAAAAAAAAEAAAAAAAAAAQAAAAAAAAABABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMMxpRI3rdQ/rKJrO4cCtb8AAAAAAAAAAJhq9B6FhfA/fVBbNJfW478AAAAAAAAAAGDebf2nyfk/qAoSqL8m9T8AAAAAAAAAAAAAAAAAAPg/AAAAAAAAAEAAAAAAAAAAAACFWuj3/38CgAAAAAAAAAAA\"</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>FromJSON メソッドも存在するので、それを使うことでこの JSON からモデルを復元できます。</p>\n<h3>DRACO 化する</h3>\n<p>上記の JSON 化と同じように Rhino7 からメッシュを Draco 化するメソッドも追加されているので試しに使ってみます。</p>\n<p>そもそも Draco とは何かというと Google が開発したオープンソースの 3D データ圧縮フォーマットです。Google の発表によると高い圧縮率を実現できるそうです。詳細は以下の記事などを参照してください。</p>\n<p><a href=\"https://qiita.com/kioku/items/bbb672d287792a987faa\">劇的に3Dデータ容量を削減するDRACO圧縮のデータを自前描画する方法</a></p>\n<p>メッシュと点群を対象としたフォーマットなため、カーブをパイプ状のメッシュにし、それを Draco 化します。Draco はバイナリ形式なのでここでは Base64 の文字列にしています。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">mesh <span class=\"token operator\">=</span> Rhino<span class=\"token punctuation\">.</span>Geometry<span class=\"token punctuation\">.</span>Mesh<span class=\"token punctuation\">.</span>CreateFromCurvePipe<span class=\"token punctuation\">(</span>crv<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\ndraco <span class=\"token operator\">=</span> Rhino<span class=\"token punctuation\">.</span>FileIO<span class=\"token punctuation\">.</span>DracoCompression<span class=\"token punctuation\">.</span>Compress<span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ToBase64String<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>draco<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>結果は以下のようになりました。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">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</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>保存した 3dm では以下のようになっておりサイズは 7KB です。それが上記テキストなので、圧縮されている気がします。</p>\n<p><img src=\"https://hiron.dev/article-images/entry-rhinoinside-cpython/mesh.png\" alt=\"Mesh Image\"></p>\n<h3>3dm で保存する</h3>\n<p>以下のように WriteMultipleObjects メソッドを使うことで \"OUTPUT_PATH\" にカーブとメッシュの含まれた 3dm ファイルが出力されます。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">obj <span class=\"token operator\">=</span> System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic<span class=\"token punctuation\">.</span>List<span class=\"token punctuation\">[</span>Rhino<span class=\"token punctuation\">.</span>Geometry<span class=\"token punctuation\">.</span>GeometryBase<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nobj<span class=\"token punctuation\">.</span>Add<span class=\"token punctuation\">(</span>crv<span class=\"token punctuation\">)</span>\nobj<span class=\"token punctuation\">.</span>Add<span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">)</span>\n\nRhino<span class=\"token punctuation\">.</span>FileIO<span class=\"token punctuation\">.</span>File3dm<span class=\"token punctuation\">.</span>WriteMultipleObjects<span class=\"token punctuation\">(</span><span class=\"token string\">\"OUTPUT_PATH\"</span><span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>コード全文</h2>\n<p>作成したコード全文です。</p>\n<p>rhinoinside.load で私の環境ではうまく読み込めなかったので、パスを直接指定しています。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> rhinoinside\nrhinoinside<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token string\">\"C:\\\\Program Files\\\\Rhino 7\\\\System\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">import</span> System\n<span class=\"token keyword\">import</span> Rhino\n\n<span class=\"token comment\"># for now, you need to explicitly use floating point</span>\n<span class=\"token comment\"># numbers in Point3d constructor</span>\npts <span class=\"token operator\">=</span> System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic<span class=\"token punctuation\">.</span>List<span class=\"token punctuation\">[</span>Rhino<span class=\"token punctuation\">.</span>Geometry<span class=\"token punctuation\">.</span>Point3d<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\npts<span class=\"token punctuation\">.</span>Add<span class=\"token punctuation\">(</span>Rhino<span class=\"token punctuation\">.</span>Geometry<span class=\"token punctuation\">.</span>Point3d<span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\npts<span class=\"token punctuation\">.</span>Add<span class=\"token punctuation\">(</span>Rhino<span class=\"token punctuation\">.</span>Geometry<span class=\"token punctuation\">.</span>Point3d<span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\npts<span class=\"token punctuation\">.</span>Add<span class=\"token punctuation\">(</span>Rhino<span class=\"token punctuation\">.</span>Geometry<span class=\"token punctuation\">.</span>Point3d<span class=\"token punctuation\">(</span><span class=\"token number\">1.5</span><span class=\"token punctuation\">,</span><span class=\"token number\">2.0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ncrv <span class=\"token operator\">=</span> Rhino<span class=\"token punctuation\">.</span>Geometry<span class=\"token punctuation\">.</span>Curve<span class=\"token punctuation\">.</span>CreateInterpolatedCurve<span class=\"token punctuation\">(</span>pts<span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># JSON 化</span>\nserial <span class=\"token operator\">=</span> Rhino<span class=\"token punctuation\">.</span>FileIO<span class=\"token punctuation\">.</span>SerializationOptions<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\njson <span class=\"token operator\">=</span> crv<span class=\"token punctuation\">.</span>ToJSON<span class=\"token punctuation\">(</span>serial<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Draco 化</span>\nmesh <span class=\"token operator\">=</span> Rhino<span class=\"token punctuation\">.</span>Geometry<span class=\"token punctuation\">.</span>Mesh<span class=\"token punctuation\">.</span>CreateFromCurvePipe<span class=\"token punctuation\">(</span>crv<span class=\"token punctuation\">,</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\ndraco <span class=\"token operator\">=</span> Rhino<span class=\"token punctuation\">.</span>FileIO<span class=\"token punctuation\">.</span>DracoCompression<span class=\"token punctuation\">.</span>Compress<span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ToBase64String<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>draco<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 3dm で保存</span>\nobj <span class=\"token operator\">=</span> System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic<span class=\"token punctuation\">.</span>List<span class=\"token punctuation\">[</span>Rhino<span class=\"token punctuation\">.</span>Geometry<span class=\"token punctuation\">.</span>GeometryBase<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nobj<span class=\"token punctuation\">.</span>Add<span class=\"token punctuation\">(</span>crv<span class=\"token punctuation\">)</span>\nobj<span class=\"token punctuation\">.</span>Add<span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">)</span>\n\nRhino<span class=\"token punctuation\">.</span>FileIO<span class=\"token punctuation\">.</span>File3dm<span class=\"token punctuation\">.</span>WriteMultipleObjects<span class=\"token punctuation\">(</span><span class=\"token string\">\"OUTPUT_PATH\"</span><span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","excerpt":"CPython で RhinoInside を使いたくなったので、まず入門してみました。 やること 環境構築して、CPython 内でジオメトリを作成して、3dm で保存することをやります。中身としては挙げられているサンプルに保存用の部分を追加したものになります。 環境構築 PYPI の RhinoInside…","frontmatter":{"date":"20 February, 2021","path":"/articles/entry-rhinoinside-cpython","title":"RhinoInside CPython 入門","article_tags":["RhinoInside","Python"]},"fields":{"readingTime":{"text":"2 min read"},"slug":"/entry-rhinoinside-cpython/","collection":"article"}},"site":{"siteMetadata":{"title":"構造とデジタル_最新版_Final(1)"}}},"pageContext":{}},"staticQueryHashes":["32046230","3649515864"]}