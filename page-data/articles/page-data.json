{"componentChunkName":"component---src-pages-articles-js","path":"/articles/","result":{"data":{"site":{"siteMetadata":{"title":"構造とデジタル_最新版_Final(1)"}},"allMarkdownRemark":{"totalCount":51,"edges":[{"node":{"id":"411882c7-1427-5fa1-a418-350038aa7b10","frontmatter":{"title":"GitHub Actions で Grasshopper コンポーネントをビルドする","date":"01 December, 2020","rawDate":"2020-12-01","path":"/articles/grasshopper-ci","article_tags":["Grasshopper","GitHub","CI","Zenn"]},"fields":{"collection":"article","slug":"/zenn/grasshopper-ci/","readingTime":{"text":"2 min read"}},"excerpt":"はじめに この記事は、AEC and Related Tech Advent Calendar 2020 の 1 日目の記事です。建築関連のことならば技術記事に限らずなんでも OK…"}},{"node":{"id":"9c6475c8-f074-586b-9095-5c48c0430297","frontmatter":{"title":"AWS でできる！ クラウドでのジオメトリ計算サービス Compute.Rhino3d の始め方","date":"02 October, 2020","rawDate":"2020-10-02","path":"/articles/start-compute-rhino-in-aws","article_tags":["AWS","RhinoCompute","Zenn"]},"fields":{"collection":"article","slug":"/zenn/start-compute-rhino-in-aws/","readingTime":{"text":"3 min read"}},"excerpt":"はじめに Amazon Elastic Compute Cloud(EC2)で Compute.Rhino3d の始める方法についての記事です。RhinoCompute ともいうみたいで、何が Compute.Rhino3d で何が RhinoCompute…"}},{"node":{"id":"10ca8d32-634a-5484-a7a7-241dbf7f00bf","frontmatter":{"title":"RhinoInside と Unity を使ったゲーム作り","date":"04 July, 2020","rawDate":"2020-07-04","path":"/articles/rhinoinside-game","article_tags":["Unity","RhinoInside","Qiita"]},"fields":{"collection":"article","slug":"/qiita/rhinoinside-game/","readingTime":{"text":"7 min read"}},"excerpt":"はじめに これは 2020/07/04 に行われたTokyo AEC Industry Dev Group でのハンズオンをもとにした資料になります。\nRhinoInside と Unity…"}},{"node":{"id":"8995821e-1dd7-5aa2-b90a-3d343f2ed206","frontmatter":{"title":"Alea GPU を使って GrasshopperでGPU並列プログラミング","date":"30 April, 2020","rawDate":"2020-04-30","path":"/articles/GpuPrograming-in-GH-with-AleaGpu","article_tags":["Grasshopper","CSharp","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/GpuPrograming-in-GH-with-AleaGp/","readingTime":{"text":"1 min read"}},"excerpt":"GPU プログラミングが面白そうだったので、Grasshopper で実装して動作の感じを確認してみました。実装した方法について説明していきます。  使用するライブラリはAleaGPU です。 公式のドキュメントによると、AleaGPU…"}},{"node":{"id":"f78f1cab-841f-5741-b948-8ad3535d0363","frontmatter":{"title":"RhinoInside を使ってリアルタイムで人の動きのFEM解析をやってみる　～速度改善編～","date":"22 March, 2020","rawDate":"2020-03-22","path":"/articles/Rhino.Inside.Unity-withFEM2","article_tags":["Karamba","Unity","VR","RhinoInside","CSharp","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/Rhino.Inside.Unity-withFEM2/","readingTime":{"text":"2 min read"}},"excerpt":"以前の記事で、RhinoInside を使った人の動きの FEM…"}},{"node":{"id":"e28c0d50-1675-5fd8-9e33-ab2425158c55","frontmatter":{"title":"SteamVR Plugin v2.5を使ってアバターを移動回転させる","date":"17 March, 2020","rawDate":"2020-03-17","path":"/articles/rotate-avator","article_tags":["Unity","VR","SteamVR","Qiita"]},"fields":{"collection":"article","slug":"/qiita/rotate-avator/","readingTime":{"text":"3 min read"}},"excerpt":"はじめに 以下の参考記事をもとに VRM アバターを平行移動および回転させることができたので、そのメモです。 参考にした記事 UniVRM+SteamVR+Final IK で始める VTuber SteamVR Plugin 2.…"}},{"node":{"id":"f7112aca-311e-534f-8ede-7b3e6ad16c47","frontmatter":{"title":"RhinoInside を使ってリアルタイムで人の動きのFEM解析をやってみる","date":"09 March, 2020","rawDate":"2020-03-09","path":"/articles/Rhino.Inside.Unity-withFEM","article_tags":["Karamba","Unity","VR","RhinoInside","CSharp","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/Rhino.Inside.Unity-withFEM/","readingTime":{"text":"2 min read"}},"excerpt":"バーチャルモーションキャプチャーと Rhino.Inside.Unity を使って以下の動画のような形で人型に対するリアルタイムでの FEM 解析をやってみます。  大きな流れとしては、以下の形です。 バーチャルモーションキャプチャーで機器からの情報を取得 EVMC4U…"}},{"node":{"id":"64d10f2e-dbe8-56d8-a4b2-aeee25598b29","frontmatter":{"title":"RhinoInside UnityでRhinoへメッシュを送るやり方","date":"05 March, 2020","rawDate":"2020-03-05","path":"/articles/rhino.inside.unity-sendmesh","article_tags":["Unity","RhinoInside","CSharp","Rhinoceros","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/rhino.inside.unity-sendmesh/","readingTime":{"text":"2 min read"}},"excerpt":"Rhino.Inside.Unity で Unity から Rhino にメッシュを送る部分を作成したので、送り方を説明します。なお作った結果として、メッシュはデータ量が多いからか動作が非常に重くなるので、リアルタイムでメッシュのやり取りをしない限りは FBX…"}},{"node":{"id":"47ddbd93-81ed-5ac4-b41e-c34351e1bde9","frontmatter":{"title":"RhinoInside Unity の公式サンプルで遊ぶ","date":"29 February, 2020","rawDate":"2020-02-29","path":"/articles/rhiniinsideunity.samplecheck","article_tags":["Unity","Grasshopper","RhinoInside","CSharp","Rhinoceros","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/rhiniinsideunity.samplecheck/","readingTime":{"text":"1 min read"}},"excerpt":"公式の RhinoInside Unity をちょっといじって遊んでみます。最終的には以下のようなものを目指します。 Unity 側のゲームオブジェクトの座標を取得して Grasshopper に送り、その情報をもとに Rhino 側でジオメトリを計算しメッシュを返し、Unity…"}},{"node":{"id":"7a7fe7fd-5858-5f9b-a134-685646f47bf9","frontmatter":{"title":"st-bridgeのunity読み込みツール「Stb2U」について","date":"05 February, 2020","rawDate":"2020-02-05","path":"/articles/stb2u","article_tags":["Unity","CSharp","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/stb2u/","readingTime":{"text":"1 min read"}},"excerpt":"Unity で建築構造設計の一貫計算ソフトと BIM の連携等に使用されている ST-Bridge データを読み込むアセットを作成したので公開します。 動作の様子は以下のような感じです。ここで使っている建物の ST-Bridge…"}},{"node":{"id":"8e5a1179-c17b-501e-a948-5e4830260215","frontmatter":{"title":"設計事務所を退職した話","date":"29 December, 2019","rawDate":"2019-12-29","path":"/articles/retirement-story","article_tags":["poem","note"]},"fields":{"collection":"article","slug":"/note/retirement-story/","readingTime":{"text":"1 min read"}},"excerpt":"約 5 年間お世話になった設計事務所を今年で退職することになりました。 仕事では小さなオフィスビルから 100m を超える複合用途ビルの構造設計に携わらせていただき、なかなかない経験でした。 これまでありがとうございました。 せっかくの区切りなので今考えていることの記録と、…"}},{"node":{"id":"e7cf8ed7-00d1-52f0-9f2d-664c97f23bfd","frontmatter":{"title":"2019/12 今の RhinoInside 完全に理解した話","date":"18 December, 2019","rawDate":"2019-12-18","path":"/articles/201912-rhinoinside","article_tags":["RhinoInside","Qiita"]},"fields":{"collection":"article","slug":"/qiita/201912-rhinoinside/","readingTime":{"text":"2 min read"}},"excerpt":"はじめに この記事は「xRArchi の皆がやったこと、やってること Advent Calendar 2019」の 16 日目です。 xRArchi の皆がやったこと、やってること Advent Calendar 2019 今年は Rhino.Inside…"}},{"node":{"id":"2be75c87-2396-5075-a08c-c424c36ad4db","frontmatter":{"title":"Grasshopper コンポーネントをダブルクリックした際に WindowsForm を呼ぶ方法","date":"10 December, 2019","rawDate":"2019-12-10","path":"/articles/call-winform-from-gh","article_tags":["CSharp","Grasshopper","Qiita"]},"fields":{"collection":"article","slug":"/qiita/call-winform-form-gh/","readingTime":{"text":"1 min read"}},"excerpt":"はじめに この記事と同様に Galápagos のようなコンポーネントを作ろうとした際に、Grasshopper のコンポーネントから WindowsForm で作ったものを表示させたかったので、やり方を示します。 ちなみに、Rhino は Mac…"}},{"node":{"id":"a6e2beb1-cc92-5280-99b5-f5ed8e83e1e7","frontmatter":{"title":"GrasshopperでNumberSliderにつながるワイヤーにのみ色を付ける方法","date":"08 December, 2019","rawDate":"2019-12-08","path":"/articles/colouring-gh-wire","article_tags":["CSharp","Grasshopper","Qiita"]},"fields":{"collection":"article","slug":"/qiita/colouring-gh-wire/","readingTime":{"text":"3 min read"}},"excerpt":"はじめに せっかくRhinocerosForumで Rutten に教えてもらったので、その知見を残しておきます。以下のように Grasshopper コンポーネント間をつなぐワイヤーで、NumberSlider…"}},{"node":{"id":"43c26418-b01c-5ead-bbe5-d7cb935de4cb","frontmatter":{"title":"Rhino 向けに書いた C# を Unity 向けに書き換えるときの注意点","date":"02 December, 2019","rawDate":"2019-12-02","path":"/articles/rhino-cs-to-unity","article_tags":["Rhinoceros","Unity","CSharp","Qiita"]},"fields":{"collection":"article","slug":"/qiita/rhino-cs-to-unity/","readingTime":{"text":"1 min read"}},"excerpt":"はじめに Rhinoceros と Unity、どちらも C#を使って開発できますが、自分が作成していた Rhino の grasshopper で動作するコンポーネントを Unity…"}},{"node":{"id":"4b14367d-df61-52d5-aa7b-dab1e5068758","frontmatter":{"title":"ST-Bridgeからデータを取得してモデルを表示するgrasshopperコンポーネントの公開","date":"06 October, 2019","rawDate":"2019-10-06","path":"/articles/ReleaseStbHopper","article_tags":["Grasshopper","CSharp","Rhinoceros","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/ReleaseStbHopper/","readingTime":{"text":"1 min read"}},"excerpt":"Grasshopper で建築構造設計の一貫計算ソフトと BIM の連携等に使用されている ST-Bridge データを読み込むコンポーネント ”HoaryFox” を作成したので公開します。 　動作の様子は以下のような感じです。ここで使っている建物の ST-Bridge…"}},{"node":{"id":"1bc6b3b2-548c-593a-96d6-e7d38335bd4a","frontmatter":{"title":"Unity で RhinoInside を使って VR アプリを作ってみる","date":"04 August, 2019","rawDate":"2019-08-04","path":"/articles/unity-rhinoinside-vr-app","article_tags":["CSharp","Unity","Rhinoceros","SteamVR","Qiita"]},"fields":{"collection":"article","slug":"/qiita/unity-rhinoinside-vr-app/","readingTime":{"text":"3 min read"}},"excerpt":"はじめに この記事は Rhino7(2019/7 現在 WIP 版)に向けて開発されている、RhinoInside をつかって、Unity から Rhino の機能を呼び出して VR の中で形をいじることができるアプリの作り方について説明していきます。\n　そもそも Rhino…"}},{"node":{"id":"7bebc86d-c5f1-5ea9-b1d4-f9d05cd0d21e","frontmatter":{"title":"ニッチな範囲でブログを4年間続けたら上位22%のブロガーになった話","date":"11 May, 2019","rawDate":"2019-05-11","path":"/articles/niche-blogger","article_tags":["poem","note"]},"fields":{"collection":"article","slug":"/note/niche-blogger/","readingTime":{"text":"2 min read"}},"excerpt":"はじめに 私は「構造とデジタル」っていう blog を書いたり youtube で作ったものを動画にしたりしています。内容は自分の興味を持ったこと調べてメモするようなものです。 主な内容は Rhinoceros という Nurbs…"}},{"node":{"id":"ca6be8ca-de6a-5b06-a481-7fc3be132ee0","frontmatter":{"title":"UDPを使ってUnityにghのMeshを送る方法","date":"21 April, 2019","rawDate":"2019-04-21","path":"/articles/MethodToSendSurfaceToUnityUsingUDP","article_tags":["Unity","Grasshopper","CSharp","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/MethodToSendSurfaceToUnityUsingUDP/","readingTime":{"text":"1 min read"}},"excerpt":"UDP で通信ができる gHowl というコンポーネントを使用して、ゲームエンジンの Unity と grasshopper を接続する方法について説明します。今回が初の Unity 関連の記事です。 基本的な Unity…"}},{"node":{"id":"20c918a0-dab2-50c1-9077-28866ea44992","frontmatter":{"title":"Mise のリリースのお知らせ","date":"01 March, 2019","rawDate":"2019-03-01","path":"/articles/ReleaseMise","article_tags":["Grasshopper","Mice","CSharp","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/ReleaseMise/","readingTime":{"text":"1 min read"}},"excerpt":"これまでに動画やこの blog で紹介してきた単純梁の計算を行うコンポーネントを Food4Rhino でリリースしました。  作成したコンポーネント名は「Mice」です。基本的にはこれまで作成してきたものから、出力関係を強化したものになっています。ダウンロードは  food…"}},{"node":{"id":"af00ca9e-748e-55ba-a952-af5e1e2c6ef4","frontmatter":{"title":"Karamba3D 1.3.1の新機能について","date":"12 January, 2019","rawDate":"2019-01-12","path":"/articles/AboutKaramba1-3-1","article_tags":["Karamba3D","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/AboutKaramba1-3-1/","readingTime":{"text":"1 min read"}},"excerpt":"2019/01 時点での Karamba3D 1.3.1 の新機能について公式のページを確認しましたので以下にまとめます。1.2 から 1.3 での大きな変更は材料非線形への対応で、そのため多くのコンポーネントが変更になっています。1.2 から 1.…"}},{"node":{"id":"2fc25ef1-0d28-51b7-905e-201dff382f13","frontmatter":{"title":"RhinoVRの使い方","date":"06 January, 2019","rawDate":"2019-01-06","path":"/articles/HowtoUseRhinoVR","article_tags":["VR","Rhinoceros","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/HowtoUseRhinoVR/","readingTime":{"text":"1 min read"}},"excerpt":"2019 年 1 月現在、公式によって開発公開されている Rhinoceros の VR 対応化のプラグインの導入法、使い方について説明します。 　詳細は McNeel の公式のフォーラムとgithubを参照してください。  McNeel は Rhino での VR…"}},{"node":{"id":"e3de86e3-50a5-5b59-8e82-ca5e4fbde984","frontmatter":{"title":"自作のHelloWorldコンポーネントの作り方","date":"07 October, 2018","rawDate":"2018-10-07","path":"/articles/HowtoMakeGHComponent","article_tags":["Grasshopper","CSharp","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/HowtoMakeGHComponent/","readingTime":{"text":"1 min read"}},"excerpt":"C#と grasshopper で Hello World! を表示　の記事で説明したコンポーネントについて、整理してこちらもGithub上で公開しました。  github のREADMEの中に、ソースの中身の解説動画ありますので、そちらを参照していただける、C…"}},{"node":{"id":"ec7b8483-1fdf-53f3-ab2d-84e25f8a56d3","frontmatter":{"title":"単質点系の応答解析コンポーネントの公開","date":"07 October, 2018","rawDate":"2018-10-07","path":"/articles/ReleaseHelloWorldComponent","article_tags":["Grasshopper","CSharp","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/ReleaseHelloWorldComponent/","readingTime":{"text":"1 min read"}},"excerpt":"前記事で公開した単純梁の解析コンポーネントに続き、単質点系の応答解析のコンポーネントをまとめたので、同様にGithubで公開しました。  単純梁の場合と同様に MIT ライセンスでGithubで公開しています。バグやコメント等ありましたら、twitter(@hiron_rgkr…"}},{"node":{"id":"d4801f1d-dd48-54b5-b6e8-e73b24e81d3f","frontmatter":{"title":"karamba 1.3 の新機能について","date":"11 April, 2018","rawDate":"2018-04-11","path":"/articles/karamba-1-3","article_tags":["Karamba","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/karamba-1-3/","readingTime":{"text":"1 min read"}},"excerpt":"karamba が 1.2 から 1.3 へのマイナーアップデートが進行中です。 　 2018/04/11 時点で WIP 版の karamba 1.3 の新機能について公式のページを確認しましたので以下にまとめます。詳細は原文を確認してください。 　 karamba1.…"}},{"node":{"id":"c0e7310b-33e6-5977-8665-65f803d006e2","frontmatter":{"title":"孔の空いたシェル要素の解析","date":"25 February, 2018","rawDate":"2018-02-25","path":"/articles/karamba-ShellwithaHole","article_tags":["Karamba","Grasshopper","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/karamba-ShellwithaHole/","readingTime":{"text":"1 min read"}},"excerpt":"板に孔があくと応力がどうなるか気になっていたので、karamba を使用して孔の開いたシェルの解析を行いたいと思います。 　結果としては安定した解が得られず、karamba…"}},{"node":{"id":"4d9bc8ac-9174-523a-938e-dd7e027afaae","frontmatter":{"title":"karambaの要素分割の出力法","date":"22 February, 2018","rawDate":"2018-02-22","path":"/articles/karamba-ConfirmationOfTheElementDivision","article_tags":["Karamba","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/karamba-ConfirmationOfTheElementDivision/","readingTime":{"text":"1 min read"}},"excerpt":"karamba での要素の分割について確認したので簡単ですがまとめます。  有限要素法は要素（メッシュ）の分割の塩梅で結果がかなり変わりますので、karamba…"}},{"node":{"id":"a444aef6-77e1-55bd-9696-e8572cc004ae","frontmatter":{"title":"ランダムに柱梁が入ったような構造を解析","date":"17 September, 2017","rawDate":"2017-09-17","path":"/articles/Karamba-RandomRigidFrame","article_tags":["Karamba","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/Karamba-RandomRigidFrame/","readingTime":{"text":"1 min read"}},"excerpt":"GA Japan 147 号に記載の夏野ビルのようなランダムに柱梁が入っているようなモデルを作成し Karamba…"}},{"node":{"id":"5ddc53f0-8fe1-518a-88e7-2ee842879725","frontmatter":{"title":"コンポーネントへのアイコンのつけ方","date":"27 July, 2017","rawDate":"2017-07-27","path":"/articles/CS-IconSetting","article_tags":["Grasshopper","CSharp","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/CS-IconSetting/","readingTime":{"text":"1 min read"}},"excerpt":"Grasshopper のコンポーネントの中身を作ってきましたが、外観については変えてきませんでしたので、今回はアイコンをつけてみます。だんだんとちゃんとしてコンポーネントらしくなってきました。  まずアイコンとする画像を用意します。サイズは 24x24pixels…"}},{"node":{"id":"70b37087-d96f-5daa-91d6-3ae4ccd89497","frontmatter":{"title":"簡単な時刻歴応答解析コンポーネントの開発","date":"17 July, 2017","rawDate":"2017-07-17","path":"/articles/CS-MakeNewmarkBetaComponent","article_tags":["Grasshopper","CSharp","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/CS-MakeNewmarkBetaComponent/","readingTime":{"text":"3 min read"}},"excerpt":"これまでのコンポーネント作成を踏まえて、単質点系の時刻歴応答解析を行うコンポーネントを作成します。 Grasshopper…"}},{"node":{"id":"9ab6ed14-283f-5b15-b57c-c0f6a1a05971","frontmatter":{"title":"C# と Grasshopperで Hello World! を表示","date":"28 May, 2017","rawDate":"2017-05-28","path":"/articles/CS-grasshopper-HelloWorldComponent","article_tags":["Grasshopper","CSharp","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/CS-grasshopper-HelloWorldComponent/","readingTime":{"text":"2 min read"}},"excerpt":"Grasshopper のコンポーネントのカスタム方法についての記事です。コンポーネントにボタンを設置し、ボタンを押すとウインドウズフォームから出力されるウインドウに定番の「HelloWorld…"}},{"node":{"id":"66a6886a-5b57-59a0-acf1-e643d14eecca","frontmatter":{"title":"grasshopperからアニメーションの出力法","date":"02 April, 2017","rawDate":"2017-04-02","path":"/articles/grasshopper-HowToMakeAnimation","article_tags":["Grasshopper","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/grasshopper-HowToMakeAnimation/","readingTime":{"text":"1 min read"}},"excerpt":"number slider を使用してパラスタした結果を動画に出力する方法について、久しぶりにやろうとしたら忘れていたので、以前の記事で作成したものを例にまとめます。  では以前の記事で作成したアニメーションの保存法について説明していきたいと思います。number slider…"}},{"node":{"id":"009917b0-5d67-52a5-9023-cdfb54d7db1f","frontmatter":{"title":"karambaを利用してリングガーターの効果を確認する","date":"15 January, 2017","rawDate":"2017-01-15","path":"/articles/Karamba-ConfirmEffectOfRingGarter","article_tags":["Karamba","Grasshopper","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/Karamba-ConfirmEffectOfRingGarter/","readingTime":{"text":"1 min read"}},"excerpt":"新建築 2017 年１月号に掲載のキャノピーが非常にかっこよかったので、調べたところリングガーターの効果を期待しているということでした。 リングガーダーは、アーチなどと同じように構造体の幾何学的形状抵抗を期待するものです。形状操作は、grasshopper…"}},{"node":{"id":"19856bcd-829d-5623-8046-f8f94c4fde11","frontmatter":{"title":"Grasshopper と C# を使って H 形鋼を出力する","date":"24 December, 2016","rawDate":"2016-12-24","path":"/articles/CS-make-I-shape-Steel","article_tags":["Grasshopper","CSharp","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/CS-make-I-shape-Steel/","readingTime":{"text":"5 min read"}},"excerpt":"以前の記事では、単純梁の計算をするコンポーネントを作成しました。その際はすべてのパラメーターが手入力だったので、今回は H 形鋼を対象にして、解析に必要なパラメーターを計算し、出力するコンポーネントの作成を行います。 また設定した形状の H 形鋼を Rhino…"}},{"node":{"id":"fed34929-3d84-5f09-aae0-b64481395680","frontmatter":{"title":"C# で 単純梁を計算するコンポーネントを作成","date":"09 November, 2016","rawDate":"2016-11-09","path":"/articles/SimpleBeam-Component-in-CS","article_tags":["Grasshopper","CSharp","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/SimpleBeam-Component-in-CS/","readingTime":{"text":"3 min read"}},"excerpt":"今回は grasshopper で動作する コンポーネントを C#を用いて作成する方法についての記事です。food4rhino などでダウンロードするデータに必ず含まれている\"アイツ\"を作成してみます。  　開発に使用する言語は、C…"}},{"node":{"id":"66c0c86c-bc66-57c6-8096-ae86e0db744f","frontmatter":{"title":"karamba ver1.2 のアップデート内容","date":"03 November, 2016","rawDate":"2016-11-03","path":"/articles/karamba-12","article_tags":["Karamba","Grasshopper","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/karamba-12/","readingTime":{"text":"1 min read"}},"excerpt":"久しぶりの更新となるので、この間の期間に karamba がどう変わった確認します。  ver が 1.1 から 1.2.2 となったので、公式サイト記載の情報を確認します。  新機能についてです。この期間に ver1.1.0 → ver1.2.1 → ver1.2.…"}},{"node":{"id":"26879556-5045-5910-aa7c-4262917b0cd6","frontmatter":{"title":"Karamba3D で鉄骨造オフィスの断面最適化による設計にチャレンジ","date":"13 February, 2016","rawDate":"2016-02-13","path":"/articles/Design-Steel-Frame-Building-in-karamba","article_tags":["Karamba3D","StructureDesign","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/Design-Steel-Frame-Building-in-karamba/","readingTime":{"text":"2 min read"}},"excerpt":"これまでの記事で、Karamba3D の各コンポーネントに関して検証してきたので、今回はそれらをもとに簡単な鉄骨造オフィスの設計にチャレンジします。 では、対象とする建物は以下のようなものを考えます。 RC…"}},{"node":{"id":"929de611-1e3e-52a8-b86c-42a51d742b9f","frontmatter":{"title":"DynamoとReact Structures を使った単純梁の解析","date":"24 January, 2016","rawDate":"2016-01-24","path":"/articles/analyze-beam-using-dynamo-and-react-structures","article_tags":["BIM","Dynamo","ReactStructures","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/analyze-beam-using-dynamo-and-react-structures/","readingTime":{"text":"1 min read"}},"excerpt":"Autodesk の Dynamo BIM と最近開発されている ReactStructures を使用して単純梁のモデル化から解析までの一連の解説を行います。 　ReactStructuresのホームページをみると、 「構造解析について考え直すときなんじゃない？（Time to…"}},{"node":{"id":"5574e3d5-de70-538b-8549-8523825024f8","frontmatter":{"title":"karamba での簡単なトラスのモデルを作成","date":"16 January, 2016","rawDate":"2016-01-16","path":"/articles/karamba-how-to-make-simple-truss","article_tags":["Karamba","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/karamba-how-to-make-simple-truss/","readingTime":{"text":"2 min read"}},"excerpt":"簡単なトラスのモデルの作成法を１から説明していきたいと思います。 　以下のようなモデルを作成し、その横に解析結果のコンター図を設置するまでを説明していきます。また、作成したモデルはデータ置場にありますので、参考にしてください。  karamba…"}},{"node":{"id":"8985b0c4-c042-5cc2-a7d0-afbceeb91729","frontmatter":{"title":"karambaのutilizationの検証","date":"05 December, 2015","rawDate":"2015-12-05","path":"/articles/karamba.verify.utilization","article_tags":["Karamba","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/karamba.verify.utilization/","readingTime":{"text":"1 min read"}},"excerpt":"karamba で単純梁をモデル化し、Axial Stress と Utilization の振る舞いについて検証します。梁の中央に集中荷重をかけ、発生する応力から検証していきます。  モデル化は以下のようにしています。10m の単純梁とし、中央に 10kN…"}},{"node":{"id":"eb355d80-98ab-5fef-9ef4-a53ac547e9e7","frontmatter":{"title":"karambaの初期設定","date":"21 November, 2015","rawDate":"2015-11-21","path":"/articles/karamba.Initial.setting","article_tags":["Karamba","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/karamba.Initial.setting/","readingTime":{"text":"5 min read"}},"excerpt":"karamba の初期設定の変更法について説明します。karamba の初期設定は、karamba.ini 　というファイルに記述されています。データの場所は、デフォルトでは \"rhino がインストールされているフォルダ \\Plug-ins\\Karamba\\karamba…"}},{"node":{"id":"ca9c89be-180f-5c51-8e4a-f3d92353a41c","frontmatter":{"title":"StitchesとOctopusを使用した最適化","date":"10 November, 2015","rawDate":"2015-11-10","path":"/articles/karamba.how.to.use.octopus","article_tags":["Karamba","Grasshopper","Octopus","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/karamba.how.to.use.octopus/","readingTime":{"text":"1 min read"}},"excerpt":"今回はstitches コンポーネントを使用したトラスの作成の記事で作成したモデルに対して最適化を行います。また、最適化にあたっては grasshopper のプラグイン Octopus を使用します。 Octopus の作成者は、karamba…"}},{"node":{"id":"2e160d59-f58e-5e60-9e55-42ea87055648","frontmatter":{"title":"stitchesコンポーネントを使用したトラスの作成","date":"03 November, 2015","rawDate":"2015-11-03","path":"/articles/karamba.stitches","article_tags":["Karamba","Grasshopper","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/karamba.stitches/","readingTime":{"text":"1 min read"}},"excerpt":"今回は karamba の stitches コンポーネントの使用法についてです。このコンポーネントは名前の通り縫う機能を持っています。設定した要素群同士をつなげる機能を持っています。 　このコンポーネントの特徴は、grasshopper…"}},{"node":{"id":"c591d754-2792-57aa-bffb-3a3addfebf3b","frontmatter":{"title":"arduinoで取得した波形をFFTする","date":"12 October, 2015","rawDate":"2015-10-12","path":"/articles/arduinofft","article_tags":["Grasshopper","Firefly","Python","Arduino","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/arduinofft/","readingTime":{"text":"1 min read"}},"excerpt":"以前のArduino と Firefly で加速度を取得、に続く記事になります。 　前回の記事で、arduino から grasshopper…"}},{"node":{"id":"3afb23c6-905b-5ee1-ab9a-b58c07e9f5a4","frontmatter":{"title":"Dynamo でも Firefly","date":"26 September, 2015","rawDate":"2015-09-26","path":"/articles/dynamofirefly","article_tags":["BIM","Dynamo","Firefly","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/dynamofirefly/","readingTime":{"text":"1 min read"}},"excerpt":"今回の記事では、これまで使用してきた Rhino + Grasshopper 　ではなく、Dynamo を使用します。 Dynamo とは、Grasshopper と同様のヴィジュアルプログラミングツールに分類されるものですが、開発しているところが違います。Dynamo…"}},{"node":{"id":"e022a1c8-5f4f-56cc-a3b6-f52752dcd50f","frontmatter":{"title":"Arduino と Firefly で加速度を取得","date":"05 September, 2015","rawDate":"2015-09-05","path":"/articles/aruduino-firefly","article_tags":["Grasshopper","Firefly","Arduino","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/aruduino-firefly/","readingTime":{"text":"1 min read"}},"excerpt":"…"}},{"node":{"id":"a2828a28-df90-53f4-b0c6-9dfc2f92eab2","frontmatter":{"title":"BESOBeam（旧FFF）コンポーネントについて","date":"31 August, 2015","rawDate":"2015-08-31","path":"/articles/besobeamfff","article_tags":["Karamba3D","Grasshopper","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/besobeamfff/","readingTime":{"text":"1 min read"}},"excerpt":"Karamba3D の BESOBeam（旧 FFF）コンポーネントの使用法について説明します。 このコンポーネントはもともとの名称 FFF（ForceFlowFinder）、つまりは力の流れを見るためのコンポーネントです。理論的には、Y.M.Xie と G.P.Steven…"}},{"node":{"id":"f7ddcfde-0e8e-53a4-8eb5-dff977313a54","frontmatter":{"title":"AnalyzeThⅠとAnalyzeThⅡの違い","date":"23 August, 2015","rawDate":"2015-08-23","path":"/articles/analyzethanalyzeth","article_tags":["Karamba3D","Grasshopper","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/analyzethanalyzeth/","readingTime":{"text":"1 min read"}},"excerpt":"Karamba3D には、静的線形解析を行うコンポーネントが2つあります。AnalyzeThⅠ と AnalyzeThⅡ の二つです。二つの違いについて検証します。 　 Karamba3D…"}},{"node":{"id":"16860a69-60ed-5933-99af-c971ad35b31e","frontmatter":{"title":"karambaのシェル要素について","date":"23 June, 2015","rawDate":"2015-06-23","path":"/articles/karamba_23","article_tags":["Karamba","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/karamba_23/","readingTime":{"text":"1 min read"}},"excerpt":"Karamba のシェル要素のモデル化についてです。 定式化は TRIC 要素に基づき行われているようで、三角形要素しか扱えないようです。 ============================== Karamba のシェル要素の特徴は 1、TRIC…"}},{"node":{"id":"0bea90ca-77b5-5c9d-9ba9-b920305256a2","frontmatter":{"title":"karambaの単位","date":"11 June, 2015","rawDate":"2015-06-11","path":"/articles/karamba-unit","article_tags":["Karamba","Rhinoceros","構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/karamba-unit/","readingTime":{"text":"1 min read"}},"excerpt":"Karamba の単位系は、メートル系とフィート系のどちらかを選択できますが、ここでは、SI 基本単位系としてモデリングしていきます。ここで、rhinoceros 上や、Grasshoppher 上で単位系を変更しても、Karamba…"}},{"node":{"id":"67afaf5a-f8c3-53b6-a1a8-9bd11ddb1960","frontmatter":{"title":"はじめの意気込み","date":"12 May, 2015","rawDate":"2015-05-12","path":"/articles/first-impression","article_tags":["構造とデジタル"]},"fields":{"collection":"article","slug":"/kozo-to-digital/FirstImpression/","readingTime":{"text":"1 min read"}},"excerpt":"建築設計の分野において、Rhino と Grasshopper によるデジタルデザインが最近目立つようになってきました。   建築構造解析を Grasshopper とあわせて利用したら面白いことができるのではと思ったのですが、日本語での建築構造と Rhino…"}}]}},"pageContext":{}},"staticQueryHashes":["32046230","3649515864"]}