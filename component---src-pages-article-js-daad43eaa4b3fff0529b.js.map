{"version":3,"sources":["webpack:///./src/pages/article.js"],"names":["Content","ArticleDate","TagsHeader","MarkerHeader","ReadingTime","IndexPage","data","title","to","css","allMarkdownRemark","edges","filter","rawDate","node","frontmatter","Date","map","key","id","path","date","fields","readingTime","text","article_tags","excerpt","query"],"mappings":"oNAQMA,EAAO,2HAMPC,EAAW,+FAKXC,EAAU,+FAKVC,EAAY,gOAWZC,EAAW,+F,8HAuDFC,UAlDG,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKC,MAAM,YACX,YAACP,EAAD,KACE,iCACA,YAACE,EAAD,KACE,YAAC,OAAD,CACEM,GAAI,QACJC,IAAG,GAFL,0BASW,uBAAK,uBAClB,uBACA,2FACA,uBACCH,EAAKI,kBAAkBC,MACrBC,QAAO,YAAe,IACfC,EADc,EAAXC,KACYC,YAAYF,QAEjC,OADa,IAAIG,KAAKH,GACR,IAAIG,QAEnBC,KAAI,gBAAGH,EAAH,EAAGA,KAAH,OACH,mBAAKI,IAAKJ,EAAKK,IACb,YAAC,OAAD,CACEX,GAAIM,EAAKC,YAAYK,KACrBX,IAAG,GAKH,YAACN,EAAD,KAAeW,EAAKC,YAAYR,MAAhC,KACA,uBACE,YAACN,EAAD,KAAca,EAAKC,YAAYM,MAC/B,YAACjB,EAAD,WAAiBU,EAAKQ,OAAOC,YAAYC,MACzC,YAACvB,EAAD,iBAAuBa,EAAKC,YAAYU,aAAe,KAEzD,qBAAIX,EAAKY,iBAWlB,IAAMC,EAAK","file":"component---src-pages-article-js-daad43eaa4b3fff0529b.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { css } from \"@emotion/core\"\nimport styled from \"@emotion/styled\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 1.45rem 1.0875rem;\n`\n\nconst ArticleDate = styled.h5`\n  display: inline;\n  color: #606060;\n`\n\nconst TagsHeader = styled.h4`\n  display: inline;\n  color: #606060;\n`\n\nconst MarkerHeader = styled.h3`\n  display: inline;\n  border-radius: 1em 0 1em 0;\n  background-image: linear-gradient(\n    -100deg,\n    rgba(209, 245, 255, 0.15),\n    rgba(209, 245, 255, 1.0) 100%,\n    rgba(209, 245, 255, 0.45)\n  );\n`\n\nconst ReadingTime = styled.h5`\n  display: inline;\n  color: #606060;\n`\n\nconst IndexPage = ({ data }) => {\n  return (\n    <Layout>\n      <SEO title=\"Article\" />\n      <Content>\n        <h1>Article</h1>\n        <TagsHeader>\n          <Link\n            to={\"/tags\"}\n            css={css`\n                  text-decoration: none;\n                  color: inherit;\n                `}\n          >\n            All Article Tags Page\n          </Link>\n        </TagsHeader><br/><br/>\n        <hr></hr>\n        <p>技術記事です。\"構造とデジタル\" というブログや Qiita、Zenn.dev などにこれまで書いてきた記事をこちらにまとめました。</p>\n        <hr></hr>\n        {data.allMarkdownRemark.edges\n          .filter(({ node }) => {\n            const rawDate = node.frontmatter.rawDate\n            const date = new Date(rawDate)\n            return date < new Date()\n          })\n          .map(({ node }) => (\n            <div key={node.id}>\n              <Link\n                to={node.frontmatter.path}\n                css={css`\n                  text-decoration: none;\n                  color: inherit;\n                `}\n              >\n                <MarkerHeader>{node.frontmatter.title} </MarkerHeader>\n                <div>\n                  <ArticleDate>{node.frontmatter.date}</ArticleDate>\n                  <ReadingTime> - {node.fields.readingTime.text}</ReadingTime>\n                  <ArticleDate> - Tags: {node.frontmatter.article_tags + \"\"}</ArticleDate>\n                </div>\n                <p>{node.excerpt}</p>\n              </Link>\n            </div>\n          ))}\n      </Content>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { draft: { eq: false } }, fields: {collection : { eq: \"article\"} } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            rawDate: date\n            path\n            article_tags\n          }\n          fields {\n            collection\n            slug\n            readingTime {\n              text\n            }\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}