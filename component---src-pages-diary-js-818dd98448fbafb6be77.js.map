{"version":3,"sources":["webpack:///./src/components/seoNoindex.js","webpack:///./src/pages/diary.js"],"names":["SEONOINDEX","lang","meta","keywords","title","image","htmlAttributes","name","content","property","concat","length","join","defaultProps","ogpurl","Content","ArticleDate","TagsHeader","MarkerHeader","ReadingTime","IndexPage","data","description","to","css","url","size","round","via","allMarkdownRemark","edges","filter","rawDate","node","frontmatter","Date","map","key","id","path","date","fields","readingTime","text","tags","excerpt"],"mappings":"8FAAA,sCAWA,SAASA,EAAT,GAA6D,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MACjD,OACE,YAAC,SAAD,CACEC,eAAgB,CACdL,QAEFG,MAAOA,EACPF,KAAM,CACJ,CACEK,KAAK,SACLC,QAAQ,WAEV,CACEC,SAAS,WACTD,QAASJ,GAEX,CACEK,SAAS,UACTD,QAAQ,WAEV,CACEC,SAAS,WACTD,QAASH,GAEX,CACEE,KAAK,eACLC,QAAQ,uBAEV,CACED,KAAK,gBACLC,QAASJ,IAGVM,OACCP,EAASQ,OAAS,EACd,CACEJ,KAAK,WACLC,QAASL,EAASS,KAAT,OAEX,IAELF,OAAOR,KAKhBF,EAAWa,aAAe,CACxBZ,KAAK,KACLC,KAAM,GACNC,SAAU,IAWGH,O,6LCvDf,IAAMc,EAAS,kCAGTC,EAAO,2HAMPC,EAAW,+FAKXC,EAAU,+FAKVC,EAAY,+NAWZC,EAAW,+F,8HA2EFC,UAtEG,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnB,OACE,YAAC,IAAD,KACE,0BAAYjB,MAAM,QAAQkB,YAAY,iBACtC,YAACP,EAAD,KACE,+BACA,uBACA,qCACA,uBACA,YAACE,EAAD,KACE,YAAC,OAAD,CACEM,GAAI,cACJC,IAAG,GAFL,wBAUF,uBACA,uBACA,uBACA,uBACE,YAAC,IAAD,CAAqBC,IAAKX,GACxB,YAAC,IAAD,CAAcY,KAAM,GAAIC,OAAK,KAG/B,YAAC,IAAD,CAAmBvB,MA9DZ,QA8D6BqB,IAAKX,GACvC,YAAC,IAAD,CAAYY,KAAM,GAAIC,OAAK,KAG7B,YAAC,IAAD,CAAoBvB,MAlEb,QAkE8BwB,IAAI,aAAaH,IAAKX,GACzD,YAAC,IAAD,CAAaY,KAAM,GAAIC,OAAK,MAGhC,uBACCN,EAAKQ,kBAAkBC,MACrBC,QAAO,YAAe,IACfC,EADc,EAAXC,KACYC,YAAYF,QAEjC,OADa,IAAIG,KAAKH,GACR,IAAIG,QAEnBC,KAAI,gBAAGH,EAAH,EAAGA,KAAH,OACH,mBAAKI,IAAKJ,EAAKK,IACb,YAAC,OAAD,CACEf,GAAIU,EAAKC,YAAYK,KACrBf,IAAG,GAKH,YAACN,EAAD,KAAee,EAAKC,YAAY9B,MAAhC,KACA,uBACE,YAACY,EAAD,KAAciB,EAAKC,YAAYM,MAC/B,YAACrB,EAAD,WAAiBc,EAAKQ,OAAOC,YAAYC,MACzC,YAAC3B,EAAD,KACG,IADH,WAEWiB,EAAKC,YAAYU,KAAO,KAGrC,qBAAIX,EAAKY","file":"component---src-pages-diary-js-818dd98448fbafb6be77.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\n\nfunction SEONOINDEX({ lang, meta, keywords, title, image }) {\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      meta={[\n        {\n          name: `robots`,\n          content: `noindex`,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          property: `og:image`,\n          content: image,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary_large_image`,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEONOINDEX.defaultProps = {\n  lang: `ja`,\n  meta: [],\n  keywords: [],\n}\n\nSEONOINDEX.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEONOINDEX\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { css } from \"@emotion/core\"\nimport styled from \"@emotion/styled\"\n\nimport Layout from \"../components/layout\"\nimport seoNoindex from \"../components/seoNoindex\"\nimport {\n  FacebookShareButton,\n  FacebookIcon,\n  HatenaShareButton,\n  HatenaIcon,\n  TwitterShareButton,\n  TwitterIcon,\n} from \"react-share\"\n\nconst ogpurl = \"https://hrntsm.github.io/diary/\"\nconst ogptitle = \"備忘録たち\"\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 1.45rem 1.0875rem;\n`\n\nconst ArticleDate = styled.h5`\n  display: inline;\n  color: #606060;\n`\n\nconst TagsHeader = styled.h3`\n  display: inline;\n  color: #606060;\n`\n\nconst MarkerHeader = styled.h3`\n  display: inline;\n  border-radius: 1em 0 1em 0;\n  background-image: linear-gradient(\n    -100deg,\n    rgba(209, 245, 255, 0.15),\n    rgba(209, 245, 255, 1) 100%,\n    rgba(209, 245, 255, 0.45)\n  );\n`\n\nconst ReadingTime = styled.h5`\n  display: inline;\n  color: #606060;\n`\n\nconst IndexPage = ({ data }) => {\n  return (\n    <Layout>\n      <seoNoindex title=\"備忘録たち\" description=\"日々のメモやポエムです。\" />\n      <Content>\n        <h1>Diary</h1>\n        <hr></hr>\n        <p>日々のメモやポエムです。</p>\n        <hr></hr>\n        <TagsHeader>\n          <Link\n            to={\"/diary-tags\"}\n            css={css`\n              text-decoration: none;\n              color: inherit;\n            `}\n          >\n            All Diary Tags Page\n          </Link>\n        </TagsHeader>\n        <br />\n        <br />\n        <hr></hr>\n        <div>\n          <FacebookShareButton url={ogpurl}>\n            <FacebookIcon size={36} round />\n          </FacebookShareButton>\n\n          <HatenaShareButton title={ogptitle} url={ogpurl}>\n            <HatenaIcon size={36} round />\n          </HatenaShareButton>\n\n          <TwitterShareButton title={ogptitle} via=\"hiron_rgkr\" url={ogpurl}>\n            <TwitterIcon size={36} round />\n          </TwitterShareButton>\n        </div>\n        <hr></hr>\n        {data.allMarkdownRemark.edges\n          .filter(({ node }) => {\n            const rawDate = node.frontmatter.rawDate\n            const date = new Date(rawDate)\n            return date < new Date()\n          })\n          .map(({ node }) => (\n            <div key={node.id}>\n              <Link\n                to={node.frontmatter.path}\n                css={css`\n                  text-decoration: none;\n                  color: inherit;\n                `}\n              >\n                <MarkerHeader>{node.frontmatter.title} </MarkerHeader>\n                <div>\n                  <ArticleDate>{node.frontmatter.date}</ArticleDate>\n                  <ReadingTime> - {node.fields.readingTime.text}</ReadingTime>\n                  <ArticleDate>\n                    {\" \"}\n                    - Tags: {node.frontmatter.tags + \"\"}\n                  </ArticleDate>\n                </div>\n                <p>{node.excerpt}</p>\n              </Link>\n            </div>\n          ))}\n      </Content>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        frontmatter: { draft: { eq: false } }\n        fields: { collection: { eq: \"diary\" } }\n      }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            rawDate: date\n            path\n            tags\n          }\n          fields {\n            collection\n            slug\n            readingTime {\n              text\n            }\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}